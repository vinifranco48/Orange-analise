<?xml version='1.0' encoding='utf-8'?>
<scheme version="2.0" title="" description="">
	<nodes>
		<node id="0" name="File" qualified_name="Orange.widgets.data.owfile.OWFile" project_name="Orange3" version="" title="File" position="(167.0, 113.0)" />
		<node id="1" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table" position="(365.0, 113.0)" />
		<node id="2" name="Bar Plot" qualified_name="Orange.widgets.visualize.owbarplot.OWBarPlot" project_name="Orange3" version="" title="Bar Plot" position="(801.0, 312.0)" />
		<node id="3" name="Distributions" qualified_name="Orange.widgets.visualize.owdistributions.OWDistributions" project_name="Orange3" version="" title="Distributions" position="(823.0, 209.0)" />
		<node id="4" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script" position="(759.0, -5.0)" />
		<node id="5" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (1)" position="(794.0, 68.0)" />
		<node id="6" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="inadiplentes" position="(804.0, 132.0)" />
		<node id="7" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (2)" position="(772.0, 390.0)" />
		<node id="8" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (3)" position="(742.0, 470.0)" />
		<node id="9" name="Feature Statistics" qualified_name="Orange.widgets.data.owfeaturestatistics.OWFeatureStatistics" project_name="Orange3" version="" title="Feature Statistics" position="(630.0, 505.0)" />
		<node id="10" name="File" qualified_name="Orange.widgets.data.owfile.OWFile" project_name="Orange3" version="" title="File (1)" position="(136.0, 793.0)" />
		<node id="11" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (1)" position="(318.0, 795.0)" />
		<node id="12" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (2)" position="(811.0, 796.0)" />
		<node id="13" name="Select Columns" qualified_name="Orange.widgets.data.owselectcolumns.OWSelectAttributes" project_name="Orange3" version="" title="Select Columns" position="(509.0, 796.0)" />
		<node id="14" name="Select Columns" qualified_name="Orange.widgets.data.owselectcolumns.OWSelectAttributes" project_name="Orange3" version="" title="Select Columns (1)" position="(921.0, 695.0)" />
		<node id="15" name="Select Columns" qualified_name="Orange.widgets.data.owselectcolumns.OWSelectAttributes" project_name="Orange3" version="" title="Select Columns (2)" position="(957.0, 824.0)" />
		<node id="16" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (4)" position="(1533.0, 913.0)" />
		<node id="17" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (4)" position="(1155.0, 859.0)" />
		<node id="18" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (5)" position="(1186.0, 671.0)" />
		<node id="19" name="Merge Data" qualified_name="Orange.widgets.data.owmergedata.OWMergeData" project_name="Orange3" version="" title="Merge Data" position="(1335.0, 672.0)" />
		<node id="20" name="Test and Score" qualified_name="Orange.widgets.evaluate.owtestandscore.OWTestAndScore" project_name="Orange3" version="" title="Test and Score" position="(1006.0, 559.0)" />
		<node id="21" name="Data Sampler" qualified_name="Orange.widgets.data.owdatasampler.OWDataSampler" project_name="Orange3" version="" title="Data Sampler (1)" position="(660.0, 792.0)" />
		<node id="22" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (5)" position="(1593.0, 831.0)" />
		<node id="23" name="Scatter Plot" qualified_name="Orange.widgets.visualize.owscatterplot.OWScatterPlot" project_name="Orange3" version="" title="Scatter Plot" position="(248.0, 479.0)" />
		<node id="24" name="Preprocess" qualified_name="Orange.widgets.data.owpreprocess.OWPreprocess" project_name="Orange3" version="" title="Preprocess" position="(1089.0, 676.0)" />
		<node id="25" name="Predictions" qualified_name="Orange.widgets.evaluate.owpredictions.OWPredictions" project_name="Orange3" version="" title="Predictions" position="(1552.0, 558.0)" />
		<node id="26" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (3)" position="(1397.0, 768.0)" />
		<node id="27" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (6)" position="(1628.0, 723.0)" />
		<node id="28" name="Logistic Regression" qualified_name="Orange.widgets.model.owlogisticregression.OWLogisticRegression" project_name="Orange3" version="" title="Logistic Regression" position="(1443.0, 691.0)" />
		<node id="29" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (8)" position="(1621.0, 462.0)" />
		<node id="30" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (6)" position="(432.0, 460.0)" />
	</nodes>
	<links>
		<link id="0" source_node_id="0" sink_node_id="1" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="1" source_node_id="1" sink_node_id="2" source_channel="Selected Data" sink_channel="Data" enabled="true" source_channel_id="selected_data" sink_channel_id="data" />
		<link id="2" source_node_id="1" sink_node_id="3" source_channel="Selected Data" sink_channel="Data" enabled="true" source_channel_id="selected_data" sink_channel_id="data" />
		<link id="3" source_node_id="1" sink_node_id="4" source_channel="Selected Data" sink_channel="Data" enabled="true" source_channel_id="selected_data" sink_channel_id="data" />
		<link id="4" source_node_id="1" sink_node_id="5" source_channel="Selected Data" sink_channel="Data" enabled="true" source_channel_id="selected_data" sink_channel_id="data" />
		<link id="5" source_node_id="1" sink_node_id="6" source_channel="Selected Data" sink_channel="Data" enabled="true" source_channel_id="selected_data" sink_channel_id="data" />
		<link id="6" source_node_id="1" sink_node_id="7" source_channel="Selected Data" sink_channel="Data" enabled="true" source_channel_id="selected_data" sink_channel_id="data" />
		<link id="7" source_node_id="1" sink_node_id="8" source_channel="Selected Data" sink_channel="Data" enabled="true" source_channel_id="selected_data" sink_channel_id="data" />
		<link id="8" source_node_id="1" sink_node_id="9" source_channel="Selected Data" sink_channel="Data" enabled="true" source_channel_id="selected_data" sink_channel_id="data" />
		<link id="9" source_node_id="10" sink_node_id="11" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="10" source_node_id="12" sink_node_id="14" source_channel="Selected Data" sink_channel="Data" enabled="true" source_channel_id="selected_data" sink_channel_id="data" />
		<link id="11" source_node_id="12" sink_node_id="15" source_channel="Selected Data" sink_channel="Data" enabled="true" source_channel_id="selected_data" sink_channel_id="data" />
		<link id="12" source_node_id="11" sink_node_id="13" source_channel="Selected Data" sink_channel="Data" enabled="true" source_channel_id="selected_data" sink_channel_id="data" />
		<link id="13" source_node_id="13" sink_node_id="21" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="14" source_node_id="21" sink_node_id="12" source_channel="Data Sample" sink_channel="Data" enabled="true" source_channel_id="data_sample" sink_channel_id="data" />
		<link id="15" source_node_id="21" sink_node_id="20" source_channel="Data Sample" sink_channel="Data" enabled="true" source_channel_id="data_sample" sink_channel_id="train_data" />
		<link id="16" source_node_id="1" sink_node_id="23" source_channel="Selected Data" sink_channel="Data" enabled="true" source_channel_id="selected_data" sink_channel_id="data" />
		<link id="17" source_node_id="14" sink_node_id="24" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="18" source_node_id="24" sink_node_id="18" source_channel="Preprocessed Data" sink_channel="Data" enabled="true" source_channel_id="preprocessed_data" sink_channel_id="data" />
		<link id="19" source_node_id="21" sink_node_id="25" source_channel="Data Sample" sink_channel="Data" enabled="true" source_channel_id="data_sample" sink_channel_id="data" />
		<link id="20" source_node_id="19" sink_node_id="26" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="21" source_node_id="19" sink_node_id="28" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="22" source_node_id="25" sink_node_id="29" source_channel="Selected Predictions" sink_channel="Data" enabled="true" source_channel_id="selected_predictions" sink_channel_id="data" />
		<link id="23" source_node_id="29" sink_node_id="22" source_channel="Selected Data" sink_channel="Data" enabled="true" source_channel_id="selected_data" sink_channel_id="data" />
		<link id="24" source_node_id="28" sink_node_id="25" source_channel="Model" sink_channel="Predictors" enabled="true" source_channel_id="model" sink_channel_id="predictors" />
		<link id="25" source_node_id="28" sink_node_id="22" source_channel="Model" sink_channel="Object" enabled="true" source_channel_id="model" sink_channel_id="object" />
		<link id="26" source_node_id="17" sink_node_id="19" source_channel="Selected Data" sink_channel="Data" enabled="true" source_channel_id="selected_data" sink_channel_id="data" />
		<link id="27" source_node_id="15" sink_node_id="17" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="28" source_node_id="18" sink_node_id="19" source_channel="Selected Data" sink_channel="Extra Data" enabled="true" source_channel_id="selected_data" sink_channel_id="extra_data" />
		<link id="29" source_node_id="1" sink_node_id="30" source_channel="Selected Data" sink_channel="Data" enabled="true" source_channel_id="selected_data" sink_channel_id="data" />
	</links>
	<annotations />
	<thumbnail />
	<node_properties>
		<properties node_id="0" format="pickle">gASV2VsAAAAAAAB9lCiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjAxyZWNlbnRfcGF0aHOUXZQojB5v
cmFuZ2V3aWRnZXQudXRpbHMuZmlsZWRpYWxvZ3OUjApSZWNlbnRQYXRolJOUKYGUfZQojAdhYnNw
YXRolIxHQzovVXNlcnMvR3Jhw7puYSBNb3Rvcy9Eb2N1bWVudHMvcmlzay1jcmVkaXQvbm90ZWJv
b2tzL3Jpc2tfdHJhdGFkby5jc3aUjAZwcmVmaXiUTowHcmVscGF0aJROjAV0aXRsZZSMAJSMBXNo
ZWV0lGgOjAtmaWxlX2Zvcm1hdJROdWJoBimBlH2UKGgJjDUvaG9tZS9ub2lzZS9Eb2N1bWVudG9z
L3Jpc2stY3JlZGl0L25vdGVib29rcy9yaXNrLmNzdpRoC05oDE5oDWgOaA9oDmgQTnViaAYpgZR9
lChoCYw/QzovVXNlcnMvR3Jhw7puYSBNb3Rvcy9Eb2N1bWVudHMvcmlzay1jcmVkaXQvbm90ZWJv
b2tzL3Jpc2suY3N2lGgLTmgMTmgNaA5oD2gOaBBOdWJoBimBlH2UKGgJjGFDOi9VbmliYWxzYXMv
VHJhYmFsaG9zLzIwMjQuMi9JbnRlbGlnZW5jaWEgZG9zIG5lZ29jaW9zL1RFRCAxL2RhZG9zL3Rh
YmVsYV9jdXN0b19kZV92aWRhXzIwMTQuY3N2lGgLTmgMTmgNaA5oD2gOaBBOdWJoBimBlH2UKGgJ
jGFDOi9VbmliYWxzYXMvVHJhYmFsaG9zLzIwMjQuMi9JbnRlbGlnZW5jaWEgZG9zIG5lZ29jaW9z
L1RFRCAxL2RhZG9zL3RhYmVsYV9jdXN0b19kZV92aWRhXzIwMTguY3N2lGgLTmgMTmgNaA5oD2gO
aBBOdWJoBimBlH2UKGgJjGFDOi9VbmliYWxzYXMvVHJhYmFsaG9zLzIwMjQuMi9JbnRlbGlnZW5j
aWEgZG9zIG5lZ29jaW9zL1RFRCAxL2RhZG9zL3RhYmVsYV9jdXN0b19kZV92aWRhXzIwMjEuY3N2
lGgLTmgMTmgNaA5oD2gOaBBOdWJoBimBlH2UKGgJjEFDOi9Vc2Vycy9NcGVkci9Eb3dubG9hZHMv
Q29zdF9vZl9MaXZpbmdfSW5kZXhfYnlfQ291bnRyeV8yMDI0LmNzdpRoC4wHYmFzZWRpcpRoDIwo
Q29zdF9vZl9MaXZpbmdfSW5kZXhfYnlfQ291bnRyeV8yMDI0LmNzdpRoDWgOaA9oDmgQTnViaAYp
gZR9lChoCYxfQzovVXNlcnMvR3Jhw7puYSBNb3Rvcy9BcHBEYXRhL0xvY2FsL1Byb2dyYW1zL09y
YW5nZS9MaWIvc2l0ZS1wYWNrYWdlcy9PcmFuZ2UvZGF0YXNldHMvaXJpcy50YWKUaAuMD3NhbXBs
ZS1kYXRhc2V0c5RoDIwIaXJpcy50YWKUaA1oDmgPaA5oEE51YmgGKYGUfZQoaAmMYkM6L1VzZXJz
L0dyYcO6bmEgTW90b3MvQXBwRGF0YS9Mb2NhbC9Qcm9ncmFtcy9PcmFuZ2UvTGliL3NpdGUtcGFj
a2FnZXMvT3JhbmdlL2RhdGFzZXRzL3RpdGFuaWMudGFilGgLaChoDIwLdGl0YW5pYy50YWKUaA1o
DmgPaA5oEE51YmgGKYGUfZQoaAmMYkM6L1VzZXJzL0dyYcO6bmEgTW90b3MvQXBwRGF0YS9Mb2Nh
bC9Qcm9ncmFtcy9PcmFuZ2UvTGliL3NpdGUtcGFja2FnZXMvT3JhbmdlL2RhdGFzZXRzL2hvdXNp
bmcudGFilGgLaChoDIwLaG91c2luZy50YWKUaA1oDmgPaA5oEE51YmgGKYGUfZQoaAmMaEM6L1Vz
ZXJzL0dyYcO6bmEgTW90b3MvQXBwRGF0YS9Mb2NhbC9Qcm9ncmFtcy9PcmFuZ2UvTGliL3NpdGUt
cGFja2FnZXMvT3JhbmdlL2RhdGFzZXRzL2hlYXJ0X2Rpc2Vhc2UudGFilGgLaChoDIwRaGVhcnRf
ZGlzZWFzZS50YWKUaA1oDmgPaA5oEE51YmgGKYGUfZQoaAmMaUM6L1VzZXJzL0dyYcO6bmEgTW90
b3MvQXBwRGF0YS9Mb2NhbC9Qcm9ncmFtcy9PcmFuZ2UvTGliL3NpdGUtcGFja2FnZXMvT3Jhbmdl
L2RhdGFzZXRzL2Jyb3duLXNlbGVjdGVkLnRhYpRoC2goaAyMEmJyb3duLXNlbGVjdGVkLnRhYpRo
DWgOaA9oDmgQTnViaAYpgZR9lChoCYxeQzovVXNlcnMvR3Jhw7puYSBNb3Rvcy9BcHBEYXRhL0xv
Y2FsL1Byb2dyYW1zL09yYW5nZS9MaWIvc2l0ZS1wYWNrYWdlcy9PcmFuZ2UvZGF0YXNldHMvem9v
LnRhYpRoC2goaAyMB3pvby50YWKUaA1oDmgPaA5oEE51YmWMC3JlY2VudF91cmxzlF2UjBNzYXZl
ZFdpZGdldEdlb21ldHJ5lENCAdnQywADAAAAAAFAAAAAYAAAA8EAAAKDAAABQQAAAH4AAAPAAAAC
ggAAAAAAAAAABQAAAAFBAAAAfgAAA8AAAAKClIwLc2hlZXRfbmFtZXOUfZSMBnNvdXJjZZRLAIwD
dXJslGgOjA1kb21haW5fZWRpdG9ylH2UjAtfX3ZlcnNpb25fX5RLAYwQY29udGV4dF9zZXR0aW5n
c5RdlCiMFW9yYW5nZXdpZGdldC5zZXR0aW5nc5SMB0NvbnRleHSUk5QpgZR9lCiMBnZhbHVlc5R9
lCiMCXZhcmlhYmxlc5RdlGhGfZRoUl2UKF2UKIwJRmVhdHVyZSAxlIwUT3JhbmdlLmRhdGEudmFy
aWFibGWUjBJDb250aW51b3VzVmFyaWFibGWUk5RLAGgOiGVdlCiMCWxvYW5fYW1udJRoWksAaA6I
ZV2UKIwLZnVuZGVkX2FtbnSUaFpLAGgOiGVdlCiMBHRlcm2UaFiMEERpc2NyZXRlVmFyaWFibGWU
k5RLAIwUMzYgbW9udGhzLCA2MCBtb250aHOUiWVdlCiMCGludF9yYXRllGhaSwBoDohlXZQojAtp
bnN0YWxsbWVudJRoWksAaA6IZV2UKIwFZ3JhZGWUaGJLAIwTQSwgQiwgQywgRCwgRSwgRiwgR5SJ
ZV2UKIwJc3ViX2dyYWRllGhiSwCMU0ExLCBBMiwgQTMsIEE0LCBBNSwgQjEsIEIyLCBCMywgQjQs
IEI1LCBDMSwgQzIsIEMzLCBDNCwgQzUsIEQxLCBEMiwgRDMsIEQ0LCBENSwgLi4ulIllXZQojApl
bXBfbGVuZ3RolGhiSwCMYzEgeWVhciwgMiB5ZWFycywgMyB5ZWFycywgNCB5ZWFycywgNSB5ZWFy
cywgNiB5ZWFycywgNyB5ZWFycywgOCB5ZWFycywgOSB5ZWFycywgMTArIHllYXJzLCA8IDEgeWVh
cpSJZV2UKIwOaG9tZV9vd25lcnNoaXCUaGJLAIwTTU9SVEdBR0UsIE9XTiwgUkVOVJSJZV2UKIwK
YW5udWFsX2luY5RoWksAaA6IZV2UKIwTdmVyaWZpY2F0aW9uX3N0YXR1c5RoYksAjCdOb3QgVmVy
aWZpZWQsIFNvdXJjZSBWZXJpZmllZCwgVmVyaWZpZWSUiWVdlCiMB2lzc3VlX2SUaGJLAIwWRGVj
LTExLCBOb3YtMTEsIE9jdC0xMZSJZV2UKIwLbG9hbl9zdGF0dXOUaGJLAIxhQ2hhcmdlZCBPZmYs
IEN1cnJlbnQsIERlZmF1bHQsIEZ1bGx5IFBhaWQsIEluIEdyYWNlIFBlcmlvZCwgTGF0ZSAoMTYt
MzAgZGF5cyksIExhdGUgKDMxLTEyMCBkYXlzKZSJZV2UKIwHcHVycG9zZZRoYksAjJpjYXIsIGNy
ZWRpdF9jYXJkLCBkZWJ0X2NvbnNvbGlkYXRpb24sIGhvbWVfaW1wcm92ZW1lbnQsIGhvdXNlLCBt
YWpvcl9wdXJjaGFzZSwgbWVkaWNhbCwgbW92aW5nLCBvdGhlciwgcmVuZXdhYmxlX2VuZXJneSwg
c21hbGxfYnVzaW5lc3MsIHZhY2F0aW9uLCB3ZWRkaW5nlIllXZQojAphZGRyX3N0YXRllGhiSwCM
U0FLLCBBTCwgQVIsIEFaLCBDQSwgQ08sIENULCBEQywgREUsIEZMLCBHQSwgSEksIElMLCBLUywg
S1ksIExBLCBNQSwgTUQsIE1JLCBNTiwgLi4ulIllXZQojANkdGmUaFpLAGgOiGVdlCiMC2RlbGlu
cV8yeXJzlGhaSwBoDohlXZQojA5pbnFfbGFzdF82bXRoc5RoWksAaA6IZV2UKIwWbXRoc19zaW5j
ZV9sYXN0X2RlbGlucZRoWksAaA6IZV2UKIwWbXRoc19zaW5jZV9sYXN0X3JlY29yZJRoWksAaA6I
ZV2UKIwIb3Blbl9hY2OUaFpLAGgOiGVdlCiMB3B1Yl9yZWOUaFpLAGgOiGVdlCiMCXJldm9sX2Jh
bJRoWksAaA6IZV2UKIwKcmV2b2xfdXRpbJRoWksAaA6IZV2UKIwJdG90YWxfYWNjlGhaSwBoDohl
XZQojBNpbml0aWFsX2xpc3Rfc3RhdHVzlGhiSwCMAWaUiWVdlCiMCW91dF9wcm5jcJRoWksAaA6I
ZV2UKIwLdG90YWxfcHltbnSUaFpLAGgOiGVdlCiMD3RvdGFsX3JlY19wcm5jcJRoWksAaA6IZV2U
KIwNdG90YWxfcmVjX2ludJRoWksAaA6IZV2UKIwSdG90YWxfcmVjX2xhdGVfZmVllGhaSwBoDohl
XZQojApyZWNvdmVyaWVzlGhaSwBoDohlXZQojBdjb2xsZWN0aW9uX3JlY292ZXJ5X2ZlZZRoWksA
aA6IZV2UKIwMbGFzdF9weW1udF9klGhiSwCMo0Fwci0xMiwgQXByLTEzLCBBcHItMTQsIEFwci0x
NSwgQXVnLTEyLCBBdWctMTMsIEF1Zy0xNCwgQXVnLTE1LCBEZWMtMTEsIERlYy0xMiwgRGVjLTEz
LCBEZWMtMTQsIERlYy0xNSwgRmViLTEyLCBGZWItMTMsIEZlYi0xNCwgRmViLTE1LCBKYW4tMTIs
IEphbi0xMywgSmFuLTE0LCAuLi6UiWVdlCiMD2xhc3RfcHltbnRfYW1udJRoWksAaA6IZV2UKIwa
Y29sbGVjdGlvbnNfMTJfbXRoc19leF9tZWSUaGJLAIwDMC4wlIhlXZQojBttdGhzX3NpbmNlX2xh
c3RfbWFqb3JfZGVyb2eUaFpLAGgOiGVdlCiMEGFubnVhbF9pbmNfam9pbnSUaFpLAGgOiGVdlCiM
CWR0aV9qb2ludJRoWksAaA6IZV2UKIwZdmVyaWZpY2F0aW9uX3N0YXR1c19qb2ludJRoWksAaA6I
ZV2UKIwOYWNjX25vd19kZWxpbnGUaGJLAIwDMC4wlIhlXZQojAx0b3RfY29sbF9hbXSUaFpLAGgO
iGVdlCiMC3RvdF9jdXJfYmFslGhaSwBoDohlXZQojAtvcGVuX2FjY182bZRoWksAaA6IZV2UKIwK
b3Blbl9pbF82bZRoWksAaA6IZV2UKIwLb3Blbl9pbF8xMm2UaFpLAGgOiGVdlCiMC29wZW5faWxf
MjRtlGhaSwBoDohlXZQojBJtdGhzX3NpbmNlX3JjbnRfaWyUaFpLAGgOiGVdlCiMDHRvdGFsX2Jh
bF9pbJRoWksAaA6IZV2UKIwHaWxfdXRpbJRoWksAaA6IZV2UKIwLb3Blbl9ydl8xMm2UaFpLAGgO
iGVdlCiMC29wZW5fcnZfMjRtlGhaSwBoDohlXZQojAptYXhfYmFsX2JjlGhaSwBoDohlXZQojAhh
bGxfdXRpbJRoWksAaA6IZV2UKIwQdG90YWxfcmV2X2hpX2xpbZRoWksAaA6IZV2UKIwGaW5xX2Zp
lGhaSwBoDohlXZQojAt0b3RhbF9jdV90bJRoWksAaA6IZV2UKIwMaW5xX2xhc3RfMTJtlGhaSwBo
DohlXZQojAhnb29kX2JhZJRoYksBjAQwLCAxlIhlXZQojA5lbXBfbGVuZ3RoX2ludJRoWksAaA6I
ZV2UKIwVZWFybGllc3RfY3JfbGluZV9kYXRllGhYjAxUaW1lVmFyaWFibGWUk5RLAGgOiGVdlCiM
G210aHNfc2luY2VfZWFybGllc3RfY3JfbGluZZRoWksAaA6IZV2UKIwIdGVybV9pbnSUaFpLAGgO
iGVdlCiMDGlzc3VlX2RfZGF0ZZRo50sAaA6IZV2UKIwSbXRoc19zaW5jZV9pc3N1ZV9klGhaSwBo
DohlXZQojARkZXNjlGhYjA5TdHJpbmdWYXJpYWJsZZSTlEsCaA6JZV2UKIwQZWFybGllc3RfY3Jf
bGluZZRo80sCaA6JZWVzaEhLAXWMCmF0dHJpYnV0ZXOUKIwJRmVhdHVyZSAxlEsChpSMCWxvYW5f
YW1udJRLAoaUjAtmdW5kZWRfYW1udJRLAoaUjAR0ZXJtlF2UKIwJMzYgbW9udGhzlIwJNjAgbW9u
dGhzlGWGlIwIaW50X3JhdGWUSwKGlIwLaW5zdGFsbG1lbnSUSwKGlIwFZ3JhZGWUXZQojAFBlIwB
QpSMAUOUjAFElIwBRZSMAUaUjAFHlGWGlIwJc3ViX2dyYWRllF2UKIwCQTGUjAJBMpSMAkEzlIwC
QTSUjAJBNZSMAkIxlIwCQjKUjAJCM5SMAkI0lIwCQjWUjAJDMZSMAkMylIwCQzOUjAJDNJSMAkM1
lIwCRDGUjAJEMpSMAkQzlIwCRDSUjAJENZSMAkUxlIwCRTKUjAJFM5SMAkU0lIwCRTWUjAJGMZSM
AkYylIwCRjOUjAJGNJSMAkY1lIwCRzGUjAJHMpSMAkczlIwCRzSUjAJHNZRlhpSMCmVtcF9sZW5n
dGiUXZQojAYxIHllYXKUjAcyIHllYXJzlIwHMyB5ZWFyc5SMBzQgeWVhcnOUjAc1IHllYXJzlIwH
NiB5ZWFyc5SMBzcgeWVhcnOUjAc4IHllYXJzlIwHOSB5ZWFyc5SMCTEwKyB5ZWFyc5SMCDwgMSB5
ZWFylGWGlIwOaG9tZV9vd25lcnNoaXCUXZQojAhNT1JUR0FHRZSMA09XTpSMBFJFTlSUZYaUjAph
bm51YWxfaW5jlEsChpSME3ZlcmlmaWNhdGlvbl9zdGF0dXOUXZQojAxOb3QgVmVyaWZpZWSUjA9T
b3VyY2UgVmVyaWZpZWSUjAhWZXJpZmllZJRlhpSMB2lzc3VlX2SUXZQojAZEZWMtMTGUjAZOb3Yt
MTGUjAZPY3QtMTGUZYaUjAtsb2FuX3N0YXR1c5RdlCiMC0NoYXJnZWQgT2ZmlIwHQ3VycmVudJSM
B0RlZmF1bHSUjApGdWxseSBQYWlklIwPSW4gR3JhY2UgUGVyaW9klIwRTGF0ZSAoMTYtMzAgZGF5
cymUjBJMYXRlICgzMS0xMjAgZGF5cymUZYaUjAdwdXJwb3NllF2UKIwDY2FylIwLY3JlZGl0X2Nh
cmSUjBJkZWJ0X2NvbnNvbGlkYXRpb26UjBBob21lX2ltcHJvdmVtZW50lIwFaG91c2WUjA5tYWpv
cl9wdXJjaGFzZZSMB21lZGljYWyUjAZtb3ZpbmeUjAVvdGhlcpSMEHJlbmV3YWJsZV9lbmVyZ3mU
jA5zbWFsbF9idXNpbmVzc5SMCHZhY2F0aW9ulIwHd2VkZGluZ5RlhpSMCmFkZHJfc3RhdGWUXZQo
jAJBS5SMAkFMlIwCQVKUjAJBWpSMAkNBlIwCQ0+UjAJDVJSMAkRDlIwCREWUjAJGTJSMAkdBlIwC
SEmUjAJJTJSMAktTlIwCS1mUjAJMQZSMAk1BlIwCTUSUjAJNSZSMAk1OlIwCTU+UjAJNU5SMAk1U
lIwCTkOUjAJOSJSMAk5KlIwCTk2UjAJOVpSMAk5ZlIwCT0iUjAJPS5SMAk9SlIwCUEGUjAJSSZSM
AlNDlIwCU0SUjAJUTpSMAlRYlIwCVVSUjAJWQZSMAlZUlIwCV0GUjAJXSZSMAldWlIwCV1mUZYaU
jANkdGmUSwKGlIwLZGVsaW5xXzJ5cnOUSwKGlIwOaW5xX2xhc3RfNm10aHOUSwKGlIwWbXRoc19z
aW5jZV9sYXN0X2RlbGlucZRLAoaUjBZtdGhzX3NpbmNlX2xhc3RfcmVjb3JklEsChpSMCG9wZW5f
YWNjlEsChpSMB3B1Yl9yZWOUSwKGlIwJcmV2b2xfYmFslEsChpSMCnJldm9sX3V0aWyUSwKGlIwJ
dG90YWxfYWNjlEsChpSME2luaXRpYWxfbGlzdF9zdGF0dXOUXZRom2GGlIwJb3V0X3BybmNwlEsC
hpSMC3RvdGFsX3B5bW50lEsChpSMD3RvdGFsX3JlY19wcm5jcJRLAoaUjA10b3RhbF9yZWNfaW50
lEsChpSMEnRvdGFsX3JlY19sYXRlX2ZlZZRLAoaUjApyZWNvdmVyaWVzlEsChpSMF2NvbGxlY3Rp
b25fcmVjb3ZlcnlfZmVllEsChpSMDGxhc3RfcHltbnRfZJRdlCiMBkFwci0xMpSMBkFwci0xM5SM
BkFwci0xNJSMBkFwci0xNZSMBkF1Zy0xMpSMBkF1Zy0xM5SMBkF1Zy0xNJSMBkF1Zy0xNZSMBkRl
Yy0xMZSMBkRlYy0xMpSMBkRlYy0xM5SMBkRlYy0xNJSMBkRlYy0xNZSMBkZlYi0xMpSMBkZlYi0x
M5SMBkZlYi0xNJSMBkZlYi0xNZSMBkphbi0xMpSMBkphbi0xM5SMBkphbi0xNJSMBkphbi0xNZSM
Bkphbi0xNpSMBkp1bC0xMpSMBkp1bC0xM5SMBkp1bC0xNJSMBkp1bC0xNZSMBkp1bi0xMpSMBkp1
bi0xM5SMBkp1bi0xNJSMBkp1bi0xNZSMBk1hci0xMpSMBk1hci0xM5SMBk1hci0xNJSMBk1hci0x
NZSMBk1heS0xMpSMBk1heS0xM5SMBk1heS0xNJSMBk1heS0xNZSMBk5vdi0xMZSMBk5vdi0xMpSM
Bk5vdi0xM5SMBk5vdi0xNJSMBk5vdi0xNZSMBk9jdC0xMpSMBk9jdC0xM5SMBk9jdC0xNJSMBk9j
dC0xNZSMBlNlcC0xMpSMBlNlcC0xM5SMBlNlcC0xNJSMBlNlcC0xNZRlhpSMD2xhc3RfcHltbnRf
YW1udJRLAoaUjBpjb2xsZWN0aW9uc18xMl9tdGhzX2V4X21lZJRdlIwDMC4wlGGGlIwbbXRoc19z
aW5jZV9sYXN0X21ham9yX2Rlcm9nlEsChpSMEGFubnVhbF9pbmNfam9pbnSUSwKGlIwJZHRpX2pv
aW50lEsChpSMGXZlcmlmaWNhdGlvbl9zdGF0dXNfam9pbnSUSwKGlIwOYWNjX25vd19kZWxpbnGU
XZSMAzAuMJRhhpSMDHRvdF9jb2xsX2FtdJRLAoaUjAt0b3RfY3VyX2JhbJRLAoaUjAtvcGVuX2Fj
Y182bZRLAoaUjApvcGVuX2lsXzZtlEsChpSMC29wZW5faWxfMTJtlEsChpSMC29wZW5faWxfMjRt
lEsChpSMEm10aHNfc2luY2VfcmNudF9pbJRLAoaUjAx0b3RhbF9iYWxfaWyUSwKGlIwHaWxfdXRp
bJRLAoaUjAtvcGVuX3J2XzEybZRLAoaUjAtvcGVuX3J2XzI0bZRLAoaUjAptYXhfYmFsX2JjlEsC
hpSMCGFsbF91dGlslEsChpSMEHRvdGFsX3Jldl9oaV9saW2USwKGlIwGaW5xX2ZplEsChpSMC3Rv
dGFsX2N1X3RslEsChpSMDGlucV9sYXN0XzEybZRLAoaUjAhnb29kX2JhZJRdlCiMATCUjAExlGWG
lIwOZW1wX2xlbmd0aF9pbnSUSwKGlIwVZWFybGllc3RfY3JfbGluZV9kYXRllEsEhpSMG210aHNf
c2luY2VfZWFybGllc3RfY3JfbGluZZRLAoaUjAh0ZXJtX2ludJRLAoaUjAxpc3N1ZV9kX2RhdGWU
SwSGlIwSbXRoc19zaW5jZV9pc3N1ZV9klEsChpR0lIwFbWV0YXOUjARkZXNjlEsDhpSMEGVhcmxp
ZXN0X2NyX2xpbmWUSwOGlIaUjApjbGFzc192YXJzlCmMEm1vZGlmaWVkX3ZhcmlhYmxlc5RdlHVi
aE0pgZR9lChoUH2UKIwJdmFyaWFibGVzlF2UjA1kb21haW5fZWRpdG9ylH2Uak8CAABdlChdlCiM
CUZlYXR1cmUgMZRoWksAaA6IZV2UKIwKVW5uYW1lZDogMJRoWksAaA6IZV2UKIwCaWSUaFpLAGgO
iGVdlCiMCW1lbWJlcl9pZJRoWksAaA6IZV2UKIwJbG9hbl9hbW50lGhaSwBoDohlXZQojAtmdW5k
ZWRfYW1udJRoWksAaA6IZV2UKIwPZnVuZGVkX2FtbnRfaW52lGhaSwBoDohlXZQojAR0ZXJtlGhi
SwCMFDM2IG1vbnRocywgNjAgbW9udGhzlIllXZQojAhpbnRfcmF0ZZRoWksAaA6IZV2UKIwLaW5z
dGFsbG1lbnSUaFpLAGgOiGVdlCiMBWdyYWRllGhiSwCME0EsIEIsIEMsIEQsIEUsIEYsIEeUiWVd
lCiMCXN1Yl9ncmFkZZRoYksAjFNBMSwgQTIsIEEzLCBBNCwgQTUsIEIxLCBCMiwgQjMsIEI0LCBC
NSwgQzEsIEMyLCBDMywgQzQsIEM1LCBEMSwgRDIsIEQzLCBENCwgRDUsIC4uLpSJZV2UKIwKZW1w
X2xlbmd0aJRoYksAjGMxIHllYXIsIDIgeWVhcnMsIDMgeWVhcnMsIDQgeWVhcnMsIDUgeWVhcnMs
IDYgeWVhcnMsIDcgeWVhcnMsIDggeWVhcnMsIDkgeWVhcnMsIDEwKyB5ZWFycywgPCAxIHllYXKU
iWVdlCiMDmhvbWVfb3duZXJzaGlwlGhiSwCMGk1PUlRHQUdFLCBPVEhFUiwgT1dOLCBSRU5UlIll
XZQojAphbm51YWxfaW5jlGhaSwBoDohlXZQojBN2ZXJpZmljYXRpb25fc3RhdHVzlGhiSwCMJ05v
dCBWZXJpZmllZCwgU291cmNlIFZlcmlmaWVkLCBWZXJpZmllZJSJZV2UKIwHaXNzdWVfZJRoYksA
jJ5BcHItMTEsIEF1Zy0xMCwgQXVnLTExLCBEZWMtMTAsIERlYy0xMSwgRmViLTExLCBKYW4tMTEs
IEp1bC0xMCwgSnVsLTExLCBKdW4tMTAsIEp1bi0xMSwgTWFyLTExLCBNYXktMTAsIE1heS0xMSwg
Tm92LTEwLCBOb3YtMTEsIE9jdC0xMCwgT2N0LTExLCBTZXAtMTAsIFNlcC0xMZSJZV2UKIwLbG9h
bl9zdGF0dXOUaGJLAIxhQ2hhcmdlZCBPZmYsIEN1cnJlbnQsIERlZmF1bHQsIEZ1bGx5IFBhaWQs
IEluIEdyYWNlIFBlcmlvZCwgTGF0ZSAoMTYtMzAgZGF5cyksIExhdGUgKDMxLTEyMCBkYXlzKZSJ
ZV2UKIwKcHltbnRfcGxhbpRoYksAjARuLCB5lIllXZQojAdwdXJwb3NllGhiSwCMp2NhciwgY3Jl
ZGl0X2NhcmQsIGRlYnRfY29uc29saWRhdGlvbiwgZWR1Y2F0aW9uYWwsIGhvbWVfaW1wcm92ZW1l
bnQsIGhvdXNlLCBtYWpvcl9wdXJjaGFzZSwgbWVkaWNhbCwgbW92aW5nLCBvdGhlciwgcmVuZXdh
YmxlX2VuZXJneSwgc21hbGxfYnVzaW5lc3MsIHZhY2F0aW9uLCB3ZWRkaW5nlIllXZQojAphZGRy
X3N0YXRllGhiSwCMU0FLLCBBTCwgQVIsIEFaLCBDQSwgQ08sIENULCBEQywgREUsIEZMLCBHQSwg
SEksIElBLCBJTCwgS1MsIEtZLCBMQSwgTUEsIE1ELCBNSSwgLi4ulIllXZQojANkdGmUaFpLAGgO
iGVdlCiMC2RlbGlucV8yeXJzlGhaSwBoDohlXZQojA5pbnFfbGFzdF82bXRoc5RoWksAaA6IZV2U
KIwWbXRoc19zaW5jZV9sYXN0X2RlbGlucZRoWksAaA6IZV2UKIwWbXRoc19zaW5jZV9sYXN0X3Jl
Y29yZJRoWksAaA6IZV2UKIwIb3Blbl9hY2OUaFpLAGgOiGVdlCiMB3B1Yl9yZWOUaFpLAGgOiGVd
lCiMCXJldm9sX2JhbJRoWksAaA6IZV2UKIwKcmV2b2xfdXRpbJRoWksAaA6IZV2UKIwJdG90YWxf
YWNjlGhaSwBoDohlXZQojBNpbml0aWFsX2xpc3Rfc3RhdHVzlGhiSwBom4llXZQojAlvdXRfcHJu
Y3CUaFpLAGgOiGVdlCiMDW91dF9wcm5jcF9pbnaUaFpLAGgOiGVdlCiMC3RvdGFsX3B5bW50lGha
SwBoDohlXZQojA90b3RhbF9weW1udF9pbnaUaFpLAGgOiGVdlCiMD3RvdGFsX3JlY19wcm5jcJRo
WksAaA6IZV2UKIwNdG90YWxfcmVjX2ludJRoWksAaA6IZV2UKIwSdG90YWxfcmVjX2xhdGVfZmVl
lGhaSwBoDohlXZQojApyZWNvdmVyaWVzlGhaSwBoDohlXZQojBdjb2xsZWN0aW9uX3JlY292ZXJ5
X2ZlZZRoWksAaA6IZV2UKIwMbGFzdF9weW1udF9klGhiSwCMo0Fwci0xMSwgQXByLTEyLCBBcHIt
MTMsIEFwci0xNCwgQXByLTE1LCBBdWctMTAsIEF1Zy0xMSwgQXVnLTEyLCBBdWctMTMsIEF1Zy0x
NCwgQXVnLTE1LCBEZWMtMTAsIERlYy0xMSwgRGVjLTEyLCBEZWMtMTMsIERlYy0xNCwgRGVjLTE1
LCBGZWItMTEsIEZlYi0xMiwgRmViLTEzLCAuLi6UiWVdlCiMD2xhc3RfcHltbnRfYW1udJRoWksA
aA6IZV2UKIwMbmV4dF9weW1udF9klGhiSwCMDkZlYi0xNiwgSmFuLTE2lIllXZQojBJsYXN0X2Ny
ZWRpdF9wdWxsX2SUaGJLAIyjQXByLTExLCBBcHItMTIsIEFwci0xMywgQXByLTE0LCBBcHItMTUs
IEF1Zy0xMCwgQXVnLTExLCBBdWctMTIsIEF1Zy0xMywgQXVnLTE0LCBBdWctMTUsIERlYy0xMCwg
RGVjLTExLCBEZWMtMTIsIERlYy0xMywgRGVjLTE0LCBEZWMtMTUsIEZlYi0xMSwgRmViLTEyLCBG
ZWItMTMsIC4uLpSJZV2UKIwaY29sbGVjdGlvbnNfMTJfbXRoc19leF9tZWSUaGJLAIwDMC4wlIhl
XZQojBttdGhzX3NpbmNlX2xhc3RfbWFqb3JfZGVyb2eUaFpLAGgOiGVdlCiMC3BvbGljeV9jb2Rl
lGhiSwBqNAIAAIhlXZQojBBhcHBsaWNhdGlvbl90eXBllGhiSwCMCklORElWSURVQUyUiWVdlCiM
EGFubnVhbF9pbmNfam9pbnSUaFpLAGgOiGVdlCiMCWR0aV9qb2ludJRoWksAaA6IZV2UKIwZdmVy
aWZpY2F0aW9uX3N0YXR1c19qb2ludJRoWksAaA6IZV2UKIwOYWNjX25vd19kZWxpbnGUaGJLAIwD
MC4wlIhlXZQojAx0b3RfY29sbF9hbXSUaFpLAGgOiGVdlCiMC3RvdF9jdXJfYmFslGhaSwBoDohl
XZQojAtvcGVuX2FjY182bZRoWksAaA6IZV2UKIwKb3Blbl9pbF82bZRoWksAaA6IZV2UKIwLb3Bl
bl9pbF8xMm2UaFpLAGgOiGVdlCiMC29wZW5faWxfMjRtlGhaSwBoDohlXZQojBJtdGhzX3NpbmNl
X3JjbnRfaWyUaFpLAGgOiGVdlCiMDHRvdGFsX2JhbF9pbJRoWksAaA6IZV2UKIwHaWxfdXRpbJRo
WksAaA6IZV2UKIwLb3Blbl9ydl8xMm2UaFpLAGgOiGVdlCiMC29wZW5fcnZfMjRtlGhaSwBoDohl
XZQojAptYXhfYmFsX2JjlGhaSwBoDohlXZQojAhhbGxfdXRpbJRoWksAaA6IZV2UKIwQdG90YWxf
cmV2X2hpX2xpbZRoWksAaA6IZV2UKIwGaW5xX2ZplGhaSwBoDohlXZQojAt0b3RhbF9jdV90bJRo
WksAaA6IZV2UKIwMaW5xX2xhc3RfMTJtlGhaSwBoDohlXZQojA5lbXBfbGVuZ3RoX2ludJRoWksA
aA6IZV2UKIwVZWFybGllc3RfY3JfbGluZV9kYXRllGjnSwBoDohlXZQojBttdGhzX3NpbmNlX2Vh
cmxpZXN0X2NyX2xpbmWUaFpLAGgOiGVdlCiMCHRlcm1faW50lGhaSwBoDohlXZQojAxpc3N1ZV9k
X2RhdGWUaOdLAGgOiGVdlCiMEm10aHNfc2luY2VfaXNzdWVfZJRoWksAaA6IZV2UKIwIZ29vZF9i
YWSUaGJLAYwEMCwgMZSIZV2UKIwJZW1wX3RpdGxllGjzSwJoDollXZQojAN1cmyUaPNLAmgOiWVd
lCiMBGRlc2OUaPNLAmgOiWVdlCiMBXRpdGxllGjzSwJoDollXZQojAh6aXBfY29kZZRo80sCaA6J
ZV2UKIwQZWFybGllc3RfY3JfbGluZZRo80sCaA6JZWVzaEhLAXVo9ihqVQIAAEsChpRqVwIAAEsC
hpRqWQIAAEsChpRqWwIAAEsChpRqXQIAAEsChpRqXwIAAEsChpRqYQIAAEsChpRqYwIAAF2UKIwJ
MzYgbW9udGhzlIwJNjAgbW9udGhzlGWGlGpmAgAASwKGlGpoAgAASwKGlGpqAgAAXZQoaggBAABq
CQEAAGoKAQAAagsBAABqDAEAAGoNAQAAag4BAABlhpRqbQIAAF2UKIwCQTGUjAJBMpSMAkEzlIwC
QTSUjAJBNZSMAkIxlIwCQjKUjAJCM5SMAkI0lIwCQjWUjAJDMZSMAkMylIwCQzOUjAJDNJSMAkM1
lIwCRDGUjAJEMpSMAkQzlIwCRDSUjAJENZSMAkUxlIwCRTKUjAJFM5SMAkU0lIwCRTWUjAJGMZSM
AkYylIwCRjOUjAJGNJSMAkY1lIwCRzGUjAJHMpSMAkczlIwCRzSUjAJHNZRlhpRqcAIAAF2UKIwG
MSB5ZWFylIwHMiB5ZWFyc5SMBzMgeWVhcnOUjAc0IHllYXJzlIwHNSB5ZWFyc5SMBzYgeWVhcnOU
jAc3IHllYXJzlIwHOCB5ZWFyc5SMBzkgeWVhcnOUjAkxMCsgeWVhcnOUjAg8IDEgeWVhcpRlhpRq
cwIAAF2UKIwITU9SVEdBR0WUjAVPVEhFUpSMA09XTpSMBFJFTlSUZYaUanYCAABLAoaUangCAABd
lCiMDE5vdCBWZXJpZmllZJSMD1NvdXJjZSBWZXJpZmllZJSMCFZlcmlmaWVklGWGlGp7AgAAXZQo
jAZBcHItMTGUjAZBdWctMTCUjAZBdWctMTGUjAZEZWMtMTCUjAZEZWMtMTGUjAZGZWItMTGUjAZK
YW4tMTGUjAZKdWwtMTCUjAZKdWwtMTGUjAZKdW4tMTCUjAZKdW4tMTGUjAZNYXItMTGUjAZNYXkt
MTCUjAZNYXktMTGUjAZOb3YtMTCUjAZOb3YtMTGUjAZPY3QtMTCUjAZPY3QtMTGUjAZTZXAtMTCU
jAZTZXAtMTGUZYaUan4CAABdlCiMC0NoYXJnZWQgT2ZmlIwHQ3VycmVudJSMB0RlZmF1bHSUjApG
dWxseSBQYWlklIwPSW4gR3JhY2UgUGVyaW9klIwRTGF0ZSAoMTYtMzAgZGF5cymUjBJMYXRlICgz
MS0xMjAgZGF5cymUZYaUaoECAABdlCiMAW6UjAF5lGWGlGqEAgAAXZQojANjYXKUjAtjcmVkaXRf
Y2FyZJSMEmRlYnRfY29uc29saWRhdGlvbpSMC2VkdWNhdGlvbmFslIwQaG9tZV9pbXByb3ZlbWVu
dJSMBWhvdXNllIwObWFqb3JfcHVyY2hhc2WUjAdtZWRpY2FslIwGbW92aW5nlIwFb3RoZXKUjBBy
ZW5ld2FibGVfZW5lcmd5lIwOc21hbGxfYnVzaW5lc3OUjAh2YWNhdGlvbpSMB3dlZGRpbmeUZYaU
aocCAABdlCiMAkFLlIwCQUyUjAJBUpSMAkFalIwCQ0GUjAJDT5SMAkNUlIwCREOUjAJERZSMAkZM
lIwCR0GUjAJISZSMAklBlIwCSUyUjAJLU5SMAktZlIwCTEGUjAJNQZSMAk1ElIwCTUmUjAJNTpSM
Ak1PlIwCTVOUjAJNVJSMAk5DlIwCTkiUjAJOSpSMAk5NlIwCTlaUjAJOWZSMAk9IlIwCT0uUjAJP
UpSMAlBBlIwCUkmUjAJTQ5SMAlNElIwCVE6UjAJUWJSMAlVUlIwCVkGUjAJWVJSMAldBlIwCV0mU
jAJXVpSMAldZlGWGlGqKAgAASwKGlGqMAgAASwKGlGqOAgAASwKGlGqQAgAASwKGlGqSAgAASwKG
lGqUAgAASwKGlGqWAgAASwKGlGqYAgAASwKGlGqaAgAASwKGlGqcAgAASwKGlGqeAgAAXZRom2GG
lGqgAgAASwKGlGqiAgAASwKGlGqkAgAASwKGlGqmAgAASwKGlGqoAgAASwKGlGqqAgAASwKGlGqs
AgAASwKGlGquAgAASwKGlGqwAgAASwKGlGqyAgAAXZQojAZBcHItMTGUjAZBcHItMTKUjAZBcHIt
MTOUjAZBcHItMTSUjAZBcHItMTWUjAZBdWctMTCUjAZBdWctMTGUjAZBdWctMTKUjAZBdWctMTOU
jAZBdWctMTSUjAZBdWctMTWUjAZEZWMtMTCUjAZEZWMtMTGUjAZEZWMtMTKUjAZEZWMtMTOUjAZE
ZWMtMTSUjAZEZWMtMTWUjAZGZWItMTGUjAZGZWItMTKUjAZGZWItMTOUjAZGZWItMTSUjAZGZWIt
MTWUjAZKYW4tMTGUjAZKYW4tMTKUjAZKYW4tMTOUjAZKYW4tMTSUjAZKYW4tMTWUjAZKYW4tMTaU
jAZKdWwtMTCUjAZKdWwtMTGUjAZKdWwtMTKUjAZKdWwtMTOUjAZKdWwtMTSUjAZKdWwtMTWUjAZK
dW4tMTGUjAZKdW4tMTKUjAZKdW4tMTOUjAZKdW4tMTSUjAZKdW4tMTWUjAZNYXItMTGUjAZNYXIt
MTKUjAZNYXItMTOUjAZNYXItMTSUjAZNYXItMTWUjAZNYXktMTGUjAZNYXktMTKUjAZNYXktMTOU
jAZNYXktMTSUjAZNYXktMTWUjAZOb3YtMTCUjAZOb3YtMTGUjAZOb3YtMTKUjAZOb3YtMTOUjAZO
b3YtMTSUjAZOb3YtMTWUjAZPY3QtMTCUjAZPY3QtMTGUjAZPY3QtMTKUjAZPY3QtMTOUjAZPY3Qt
MTSUjAZPY3QtMTWUjAZTZXAtMTCUjAZTZXAtMTGUjAZTZXAtMTKUjAZTZXAtMTOUjAZTZXAtMTSU
jAZTZXAtMTWUZYaUarUCAABLAoaUarcCAABdlCiMBkZlYi0xNpSMBkphbi0xNpRlhpRqugIAAF2U
KIwGQXByLTExlIwGQXByLTEylIwGQXByLTEzlIwGQXByLTE0lIwGQXByLTE1lIwGQXVnLTEwlIwG
QXVnLTExlIwGQXVnLTEylIwGQXVnLTEzlIwGQXVnLTE0lIwGQXVnLTE1lIwGRGVjLTEwlIwGRGVj
LTExlIwGRGVjLTEylIwGRGVjLTEzlIwGRGVjLTE0lIwGRGVjLTE1lIwGRmViLTExlIwGRmViLTEy
lIwGRmViLTEzlIwGRmViLTE0lIwGRmViLTE1lIwGSmFuLTExlIwGSmFuLTEylIwGSmFuLTEzlIwG
SmFuLTE0lIwGSmFuLTE1lIwGSmFuLTE2lIwGSnVsLTEwlIwGSnVsLTExlIwGSnVsLTEylIwGSnVs
LTEzlIwGSnVsLTE0lIwGSnVsLTE1lIwGSnVuLTEwlIwGSnVuLTExlIwGSnVuLTEylIwGSnVuLTEz
lIwGSnVuLTE0lIwGSnVuLTE1lIwGTWFyLTExlIwGTWFyLTEylIwGTWFyLTEzlIwGTWFyLTE0lIwG
TWFyLTE1lIwGTWF5LTExlIwGTWF5LTEylIwGTWF5LTEzlIwGTWF5LTE0lIwGTWF5LTE1lIwGTm92
LTEwlIwGTm92LTExlIwGTm92LTEylIwGTm92LTEzlIwGTm92LTE0lIwGTm92LTE1lIwGT2N0LTEw
lIwGT2N0LTExlIwGT2N0LTEylIwGT2N0LTEzlIwGT2N0LTE0lIwGT2N0LTE1lIwGU2VwLTEwlIwG
U2VwLTExlIwGU2VwLTEylIwGU2VwLTEzlIwGU2VwLTE0lIwGU2VwLTE1lGWGlGq9AgAAXZRqvgIA
AGGGlGrAAgAASwKGlGrCAgAAXZRqNAIAAGGGlGrEAgAAXZRqxQIAAGGGlGrHAgAASwKGlGrJAgAA
SwKGlGrLAgAASwKGlGrNAgAAXZRqzgIAAGGGlGrQAgAASwKGlGrSAgAASwKGlGrUAgAASwKGlGrW
AgAASwKGlGrYAgAASwKGlGraAgAASwKGlGrcAgAASwKGlGreAgAASwKGlGrgAgAASwKGlGriAgAA
SwKGlGrkAgAASwKGlGrmAgAASwKGlGroAgAASwKGlGrqAgAASwKGlGrsAgAASwKGlGruAgAASwKG
lGrwAgAASwKGlGryAgAASwKGlGr0AgAASwSGlGr2AgAASwKGlGr4AgAASwKGlGr6AgAASwSGlGr8
AgAASwKGlGr+AgAAXZQoajMCAABqNAIAAGWGlHSUakMCAAAoagEDAABLA4aUagMDAABLA4aUagUD
AABLA4aUagcDAABLA4aUagkDAABLA4aUagsDAABLA4aUdJRqSQIAAClqSgIAAF2UdWJoTSmBlH2U
KGhQfZQojAl2YXJpYWJsZXOUXZSMDWRvbWFpbl9lZGl0b3KUfZRqkgQAAF2UKF2UKIwJbG9hbl9h
bW50lGhaSwBoDohlXZQojAtmdW5kZWRfYW1udJRoWksAaA6IZV2UKIwEdGVybZRoYksAjBQzNiBt
b250aHMsIDYwIG1vbnRoc5SJZV2UKIwIaW50X3JhdGWUaFpLAGgOiGVdlCiMC2luc3RhbGxtZW50
lGhaSwBoDohlXZQojAVncmFkZZRoYksAjBNBLCBCLCBDLCBELCBFLCBGLCBHlIllXZQojAlzdWJf
Z3JhZGWUaGJLAIxTQTEsIEEyLCBBMywgQTQsIEE1LCBCMSwgQjIsIEIzLCBCNCwgQjUsIEMxLCBD
MiwgQzMsIEM0LCBDNSwgRDEsIEQyLCBEMywgRDQsIEQ1LCAuLi6UiWVdlCiMCmVtcF9sZW5ndGiU
aGJLAIxjMSB5ZWFyLCAyIHllYXJzLCAzIHllYXJzLCA0IHllYXJzLCA1IHllYXJzLCA2IHllYXJz
LCA3IHllYXJzLCA4IHllYXJzLCA5IHllYXJzLCAxMCsgeWVhcnMsIDwgMSB5ZWFylIllXZQojA5o
b21lX293bmVyc2hpcJRoYksAjBNNT1JUR0FHRSwgT1dOLCBSRU5UlIllXZQojAphbm51YWxfaW5j
lGhaSwBoDohlXZQojBN2ZXJpZmljYXRpb25fc3RhdHVzlGhiSwCMJ05vdCBWZXJpZmllZCwgU291
cmNlIFZlcmlmaWVkLCBWZXJpZmllZJSJZV2UKIwHaXNzdWVfZJRoYksAjBZEZWMtMTEsIE5vdi0x
MSwgT2N0LTExlIllXZQojAtsb2FuX3N0YXR1c5RoYksAjGFDaGFyZ2VkIE9mZiwgQ3VycmVudCwg
RGVmYXVsdCwgRnVsbHkgUGFpZCwgSW4gR3JhY2UgUGVyaW9kLCBMYXRlICgxNi0zMCBkYXlzKSwg
TGF0ZSAoMzEtMTIwIGRheXMplIllXZQojAdwdXJwb3NllGhiSwCMmmNhciwgY3JlZGl0X2NhcmQs
IGRlYnRfY29uc29saWRhdGlvbiwgaG9tZV9pbXByb3ZlbWVudCwgaG91c2UsIG1ham9yX3B1cmNo
YXNlLCBtZWRpY2FsLCBtb3ZpbmcsIG90aGVyLCByZW5ld2FibGVfZW5lcmd5LCBzbWFsbF9idXNp
bmVzcywgdmFjYXRpb24sIHdlZGRpbmeUiWVdlCiMCmFkZHJfc3RhdGWUaGJLAIxTQUssIEFMLCBB
UiwgQVosIENBLCBDTywgQ1QsIERDLCBERSwgRkwsIEdBLCBISSwgSUwsIEtTLCBLWSwgTEEsIE1B
LCBNRCwgTUksIE1OLCAuLi6UiWVdlCiMA2R0aZRoWksAaA6IZV2UKIwLZGVsaW5xXzJ5cnOUaFpL
AGgOiGVdlCiMDmlucV9sYXN0XzZtdGhzlGhaSwBoDohlXZQojBZtdGhzX3NpbmNlX2xhc3RfZGVs
aW5xlGhaSwBoDohlXZQojBZtdGhzX3NpbmNlX2xhc3RfcmVjb3JklGhaSwBoDohlXZQojAhvcGVu
X2FjY5RoWksAaA6IZV2UKIwHcHViX3JlY5RoWksAaA6IZV2UKIwJcmV2b2xfYmFslGhaSwBoDohl
XZQojApyZXZvbF91dGlslGhaSwBoDohlXZQojAl0b3RhbF9hY2OUaFpLAGgOiGVdlCiME2luaXRp
YWxfbGlzdF9zdGF0dXOUaGJLAGibiWVdlCiMCW91dF9wcm5jcJRoWksAaA6IZV2UKIwLdG90YWxf
cHltbnSUaFpLAGgOiGVdlCiMD3RvdGFsX3JlY19wcm5jcJRoWksAaA6IZV2UKIwNdG90YWxfcmVj
X2ludJRoWksAaA6IZV2UKIwSdG90YWxfcmVjX2xhdGVfZmVllGhaSwBoDohlXZQojApyZWNvdmVy
aWVzlGhaSwBoDohlXZQojBdjb2xsZWN0aW9uX3JlY292ZXJ5X2ZlZZRoWksAaA6IZV2UKIwMbGFz
dF9weW1udF9klGhiSwCMo0Fwci0xMiwgQXByLTEzLCBBcHItMTQsIEFwci0xNSwgQXVnLTEyLCBB
dWctMTMsIEF1Zy0xNCwgQXVnLTE1LCBEZWMtMTEsIERlYy0xMiwgRGVjLTEzLCBEZWMtMTQsIERl
Yy0xNSwgRmViLTEyLCBGZWItMTMsIEZlYi0xNCwgRmViLTE1LCBKYW4tMTIsIEphbi0xMywgSmFu
LTE0LCAuLi6UiWVdlCiMD2xhc3RfcHltbnRfYW1udJRoWksAaA6IZV2UKIwaY29sbGVjdGlvbnNf
MTJfbXRoc19leF9tZWSUaGJLAIwDMC4wlIhlXZQojBttdGhzX3NpbmNlX2xhc3RfbWFqb3JfZGVy
b2eUaFpLAGgOiGVdlCiMEGFubnVhbF9pbmNfam9pbnSUaFpLAGgOiGVdlCiMCWR0aV9qb2ludJRo
WksAaA6IZV2UKIwZdmVyaWZpY2F0aW9uX3N0YXR1c19qb2ludJRoWksAaA6IZV2UKIwOYWNjX25v
d19kZWxpbnGUaGJLAIwDMC4wlIhlXZQojAx0b3RfY29sbF9hbXSUaFpLAGgOiGVdlCiMC3RvdF9j
dXJfYmFslGhaSwBoDohlXZQojAtvcGVuX2FjY182bZRoWksAaA6IZV2UKIwKb3Blbl9pbF82bZRo
WksAaA6IZV2UKIwLb3Blbl9pbF8xMm2UaFpLAGgOiGVdlCiMC29wZW5faWxfMjRtlGhaSwBoDohl
XZQojBJtdGhzX3NpbmNlX3JjbnRfaWyUaFpLAGgOiGVdlCiMDHRvdGFsX2JhbF9pbJRoWksAaA6I
ZV2UKIwHaWxfdXRpbJRoWksAaA6IZV2UKIwLb3Blbl9ydl8xMm2UaFpLAGgOiGVdlCiMC29wZW5f
cnZfMjRtlGhaSwBoDohlXZQojAptYXhfYmFsX2JjlGhaSwBoDohlXZQojAhhbGxfdXRpbJRoWksA
aA6IZV2UKIwQdG90YWxfcmV2X2hpX2xpbZRoWksAaA6IZV2UKIwGaW5xX2ZplGhaSwBoDohlXZQo
jAt0b3RhbF9jdV90bJRoWksAaA6IZV2UKIwMaW5xX2xhc3RfMTJtlGhaSwBoDohlXZQojAhnb29k
X2JhZJRoYksBjAQwLCAxlIhlXZQojARkZXNjlGjzSwJoDollXZQojBBlYXJsaWVzdF9jcl9saW5l
lGjzSwJoDollZXNoSEsBdWj2KGqYBAAASwKGlGqaBAAASwKGlGqcBAAAXZQojAkzNiBtb250aHOU
jAk2MCBtb250aHOUZYaUap8EAABLAoaUaqEEAABLAoaUaqMEAABdlChqCAEAAGoJAQAAagoBAABq
CwEAAGoMAQAAag0BAABqDgEAAGWGlGqmBAAAXZQojAJBMZSMAkEylIwCQTOUjAJBNJSMAkE1lIwC
QjGUjAJCMpSMAkIzlIwCQjSUjAJCNZSMAkMxlIwCQzKUjAJDM5SMAkM0lIwCQzWUjAJEMZSMAkQy
lIwCRDOUjAJENJSMAkQ1lIwCRTGUjAJFMpSMAkUzlIwCRTSUjAJFNZSMAkYxlIwCRjKUjAJGM5SM
AkY0lIwCRjWUjAJHMZSMAkcylIwCRzOUjAJHNJSMAkc1lGWGlGqpBAAAXZQojAYxIHllYXKUjAcy
IHllYXJzlIwHMyB5ZWFyc5SMBzQgeWVhcnOUjAc1IHllYXJzlIwHNiB5ZWFyc5SMBzcgeWVhcnOU
jAc4IHllYXJzlIwHOSB5ZWFyc5SMCTEwKyB5ZWFyc5SMCDwgMSB5ZWFylGWGlGqsBAAAXZQojAhN
T1JUR0FHRZSMA09XTpSMBFJFTlSUZYaUaq8EAABLAoaUarEEAABdlCiMDE5vdCBWZXJpZmllZJSM
D1NvdXJjZSBWZXJpZmllZJSMCFZlcmlmaWVklGWGlGq0BAAAXZQojAZEZWMtMTGUjAZOb3YtMTGU
jAZPY3QtMTGUZYaUarcEAABdlCiMC0NoYXJnZWQgT2ZmlIwHQ3VycmVudJSMB0RlZmF1bHSUjApG
dWxseSBQYWlklIwPSW4gR3JhY2UgUGVyaW9klIwRTGF0ZSAoMTYtMzAgZGF5cymUjBJMYXRlICgz
MS0xMjAgZGF5cymUZYaUaroEAABdlCiMA2NhcpSMC2NyZWRpdF9jYXJklIwSZGVidF9jb25zb2xp
ZGF0aW9ulIwQaG9tZV9pbXByb3ZlbWVudJSMBWhvdXNllIwObWFqb3JfcHVyY2hhc2WUjAdtZWRp
Y2FslIwGbW92aW5nlIwFb3RoZXKUjBByZW5ld2FibGVfZW5lcmd5lIwOc21hbGxfYnVzaW5lc3OU
jAh2YWNhdGlvbpSMB3dlZGRpbmeUZYaUar0EAABdlCiMAkFLlIwCQUyUjAJBUpSMAkFalIwCQ0GU
jAJDT5SMAkNUlIwCREOUjAJERZSMAkZMlIwCR0GUjAJISZSMAklMlIwCS1OUjAJLWZSMAkxBlIwC
TUGUjAJNRJSMAk1JlIwCTU6UjAJNT5SMAk1TlIwCTVSUjAJOQ5SMAk5IlIwCTkqUjAJOTZSMAk5W
lIwCTlmUjAJPSJSMAk9LlIwCT1KUjAJQQZSMAlJJlIwCU0OUjAJTRJSMAlROlIwCVFiUjAJVVJSM
AlZBlIwCVlSUjAJXQZSMAldJlIwCV1aUjAJXWZRlhpRqwAQAAEsChpRqwgQAAEsChpRqxAQAAEsC
hpRqxgQAAEsChpRqyAQAAEsChpRqygQAAEsChpRqzAQAAEsChpRqzgQAAEsChpRq0AQAAEsChpRq
0gQAAEsChpRq1AQAAF2UaJthhpRq1gQAAEsChpRq2AQAAEsChpRq2gQAAEsChpRq3AQAAEsChpRq
3gQAAEsChpRq4AQAAEsChpRq4gQAAEsChpRq5AQAAF2UKIwGQXByLTEylIwGQXByLTEzlIwGQXBy
LTE0lIwGQXByLTE1lIwGQXVnLTEylIwGQXVnLTEzlIwGQXVnLTE0lIwGQXVnLTE1lIwGRGVjLTEx
lIwGRGVjLTEylIwGRGVjLTEzlIwGRGVjLTE0lIwGRGVjLTE1lIwGRmViLTEylIwGRmViLTEzlIwG
RmViLTE0lIwGRmViLTE1lIwGSmFuLTEylIwGSmFuLTEzlIwGSmFuLTE0lIwGSmFuLTE1lIwGSmFu
LTE2lIwGSnVsLTEylIwGSnVsLTEzlIwGSnVsLTE0lIwGSnVsLTE1lIwGSnVuLTEylIwGSnVuLTEz
lIwGSnVuLTE0lIwGSnVuLTE1lIwGTWFyLTEylIwGTWFyLTEzlIwGTWFyLTE0lIwGTWFyLTE1lIwG
TWF5LTEylIwGTWF5LTEzlIwGTWF5LTE0lIwGTWF5LTE1lIwGTm92LTExlIwGTm92LTEylIwGTm92
LTEzlIwGTm92LTE0lIwGTm92LTE1lIwGT2N0LTEylIwGT2N0LTEzlIwGT2N0LTE0lIwGT2N0LTE1
lIwGU2VwLTEylIwGU2VwLTEzlIwGU2VwLTE0lIwGU2VwLTE1lGWGlGrnBAAASwKGlGrpBAAAXZRq
6gQAAGGGlGrsBAAASwKGlGruBAAASwKGlGrwBAAASwKGlGryBAAASwKGlGr0BAAAXZRq9QQAAGGG
lGr3BAAASwKGlGr5BAAASwKGlGr7BAAASwKGlGr9BAAASwKGlGr/BAAASwKGlGoBBQAASwKGlGoD
BQAASwKGlGoFBQAASwKGlGoHBQAASwKGlGoJBQAASwKGlGoLBQAASwKGlGoNBQAASwKGlGoPBQAA
SwKGlGoRBQAASwKGlGoTBQAASwKGlGoVBQAASwKGlGoXBQAASwKGlGoZBQAAXZQoajMCAABqNAIA
AGWGlHSUakMCAABqHAUAAEsDhpRqHgUAAEsDhpSGlGpJAgAAKWpKAgAAXZR1YmhNKYGUfZQoaFB9
lCiMCXZhcmlhYmxlc5RdlIwNZG9tYWluX2VkaXRvcpR9lGoeBgAAXZQoXZQojAlsb2FuX2FtbnSU
aFpLAGgOiGVdlCiMC2Z1bmRlZF9hbW50lGhaSwBoDohlXZQojAR0ZXJtlGhiSwCMFDM2IG1vbnRo
cywgNjAgbW9udGhzlIllXZQojAhpbnRfcmF0ZZRoWksAaA6IZV2UKIwLaW5zdGFsbG1lbnSUaFpL
AGgOiGVdlCiMBWdyYWRllGhiSwCME0EsIEIsIEMsIEQsIEUsIEYsIEeUiWVdlCiMCXN1Yl9ncmFk
ZZRoYksAjFNBMSwgQTIsIEEzLCBBNCwgQTUsIEIxLCBCMiwgQjMsIEI0LCBCNSwgQzEsIEMyLCBD
MywgQzQsIEM1LCBEMSwgRDIsIEQzLCBENCwgRDUsIC4uLpSJZV2UKIwKZW1wX2xlbmd0aJRoYksA
jGMxIHllYXIsIDIgeWVhcnMsIDMgeWVhcnMsIDQgeWVhcnMsIDUgeWVhcnMsIDYgeWVhcnMsIDcg
eWVhcnMsIDggeWVhcnMsIDkgeWVhcnMsIDEwKyB5ZWFycywgPCAxIHllYXKUiWVdlCiMDmhvbWVf
b3duZXJzaGlwlGhiSwCMGk1PUlRHQUdFLCBPVEhFUiwgT1dOLCBSRU5UlIllXZQojAphbm51YWxf
aW5jlGhaSwBoDohlXZQojBN2ZXJpZmljYXRpb25fc3RhdHVzlGhiSwCMJ05vdCBWZXJpZmllZCwg
U291cmNlIFZlcmlmaWVkLCBWZXJpZmllZJSJZV2UKIwHaXNzdWVfZJRoYksAjFZBcHItMTEsIEF1
Zy0xMSwgRGVjLTExLCBGZWItMTEsIEp1bC0xMSwgSnVuLTExLCBNYXItMTEsIE1heS0xMSwgTm92
LTExLCBPY3QtMTEsIFNlcC0xMZSJZV2UKIwLbG9hbl9zdGF0dXOUaGJLAIxhQ2hhcmdlZCBPZmYs
IEN1cnJlbnQsIERlZmF1bHQsIEZ1bGx5IFBhaWQsIEluIEdyYWNlIFBlcmlvZCwgTGF0ZSAoMTYt
MzAgZGF5cyksIExhdGUgKDMxLTEyMCBkYXlzKZSJZV2UKIwHcHVycG9zZZRoYksAjJpjYXIsIGNy
ZWRpdF9jYXJkLCBkZWJ0X2NvbnNvbGlkYXRpb24sIGhvbWVfaW1wcm92ZW1lbnQsIGhvdXNlLCBt
YWpvcl9wdXJjaGFzZSwgbWVkaWNhbCwgbW92aW5nLCBvdGhlciwgcmVuZXdhYmxlX2VuZXJneSwg
c21hbGxfYnVzaW5lc3MsIHZhY2F0aW9uLCB3ZWRkaW5nlIllXZQojAphZGRyX3N0YXRllGhiSwCM
U0FLLCBBTCwgQVIsIEFaLCBDQSwgQ08sIENULCBEQywgREUsIEZMLCBHQSwgSEksIElMLCBLUywg
S1ksIExBLCBNQSwgTUQsIE1JLCBNTiwgLi4ulIllXZQojANkdGmUaFpLAGgOiGVdlCiMC2RlbGlu
cV8yeXJzlGhaSwBoDohlXZQojA5pbnFfbGFzdF82bXRoc5RoWksAaA6IZV2UKIwWbXRoc19zaW5j
ZV9sYXN0X2RlbGlucZRoWksAaA6IZV2UKIwWbXRoc19zaW5jZV9sYXN0X3JlY29yZJRoWksAaA6I
ZV2UKIwIb3Blbl9hY2OUaFpLAGgOiGVdlCiMB3B1Yl9yZWOUaFpLAGgOiGVdlCiMCXJldm9sX2Jh
bJRoWksAaA6IZV2UKIwKcmV2b2xfdXRpbJRoWksAaA6IZV2UKIwJdG90YWxfYWNjlGhaSwBoDohl
XZQojBNpbml0aWFsX2xpc3Rfc3RhdHVzlGhiSwBom4llXZQojAlvdXRfcHJuY3CUaFpLAGgOiGVd
lCiMC3RvdGFsX3B5bW50lGhaSwBoDohlXZQojA90b3RhbF9yZWNfcHJuY3CUaFpLAGgOiGVdlCiM
DXRvdGFsX3JlY19pbnSUaFpLAGgOiGVdlCiMEnRvdGFsX3JlY19sYXRlX2ZlZZRoWksAaA6IZV2U
KIwKcmVjb3Zlcmllc5RoWksAaA6IZV2UKIwXY29sbGVjdGlvbl9yZWNvdmVyeV9mZWWUaFpLAGgO
iGVdlCiMDGxhc3RfcHltbnRfZJRoYksAjKNBcHItMTEsIEFwci0xMiwgQXByLTEzLCBBcHItMTQs
IEFwci0xNSwgQXVnLTExLCBBdWctMTIsIEF1Zy0xMywgQXVnLTE0LCBBdWctMTUsIERlYy0xMSwg
RGVjLTEyLCBEZWMtMTMsIERlYy0xNCwgRGVjLTE1LCBGZWItMTIsIEZlYi0xMywgRmViLTE0LCBG
ZWItMTUsIEphbi0xMiwgLi4ulIllXZQojA9sYXN0X3B5bW50X2FtbnSUaFpLAGgOiGVdlCiMGmNv
bGxlY3Rpb25zXzEyX210aHNfZXhfbWVklGhiSwCMAzAuMJSIZV2UKIwbbXRoc19zaW5jZV9sYXN0
X21ham9yX2Rlcm9nlGhaSwBoDohlXZQojBBhbm51YWxfaW5jX2pvaW50lGhaSwBoDohlXZQojAlk
dGlfam9pbnSUaFpLAGgOiGVdlCiMGXZlcmlmaWNhdGlvbl9zdGF0dXNfam9pbnSUaFpLAGgOiGVd
lCiMDmFjY19ub3dfZGVsaW5xlGhiSwCMAzAuMJSIZV2UKIwMdG90X2NvbGxfYW10lGhaSwBoDohl
XZQojAt0b3RfY3VyX2JhbJRoWksAaA6IZV2UKIwLb3Blbl9hY2NfNm2UaFpLAGgOiGVdlCiMCm9w
ZW5faWxfNm2UaFpLAGgOiGVdlCiMC29wZW5faWxfMTJtlGhaSwBoDohlXZQojAtvcGVuX2lsXzI0
bZRoWksAaA6IZV2UKIwSbXRoc19zaW5jZV9yY250X2lslGhaSwBoDohlXZQojAx0b3RhbF9iYWxf
aWyUaFpLAGgOiGVdlCiMB2lsX3V0aWyUaFpLAGgOiGVdlCiMC29wZW5fcnZfMTJtlGhaSwBoDohl
XZQojAtvcGVuX3J2XzI0bZRoWksAaA6IZV2UKIwKbWF4X2JhbF9iY5RoWksAaA6IZV2UKIwIYWxs
X3V0aWyUaFpLAGgOiGVdlCiMEHRvdGFsX3Jldl9oaV9saW2UaFpLAGgOiGVdlCiMBmlucV9maZRo
WksAaA6IZV2UKIwLdG90YWxfY3VfdGyUaFpLAGgOiGVdlCiMDGlucV9sYXN0XzEybZRoWksAaA6I
ZV2UKIwIZ29vZF9iYWSUaGJLAYwEMCwgMZSIZV2UKIwEZGVzY5Ro80sCaA6JZV2UKIwQZWFybGll
c3RfY3JfbGluZZRo80sCaA6JZWVzaEhLAXVo9ihqJAYAAEsChpRqJgYAAEsChpRqKAYAAF2UKIwJ
MzYgbW9udGhzlIwJNjAgbW9udGhzlGWGlGorBgAASwKGlGotBgAASwKGlGovBgAAXZQoaggBAABq
CQEAAGoKAQAAagsBAABqDAEAAGoNAQAAag4BAABlhpRqMgYAAF2UKIwCQTGUjAJBMpSMAkEzlIwC
QTSUjAJBNZSMAkIxlIwCQjKUjAJCM5SMAkI0lIwCQjWUjAJDMZSMAkMylIwCQzOUjAJDNJSMAkM1
lIwCRDGUjAJEMpSMAkQzlIwCRDSUjAJENZSMAkUxlIwCRTKUjAJFM5SMAkU0lIwCRTWUjAJGMZSM
AkYylIwCRjOUjAJGNJSMAkY1lIwCRzGUjAJHMpSMAkczlIwCRzSUjAJHNZRlhpRqNQYAAF2UKIwG
MSB5ZWFylIwHMiB5ZWFyc5SMBzMgeWVhcnOUjAc0IHllYXJzlIwHNSB5ZWFyc5SMBzYgeWVhcnOU
jAc3IHllYXJzlIwHOCB5ZWFyc5SMBzkgeWVhcnOUjAkxMCsgeWVhcnOUjAg8IDEgeWVhcpRlhpRq
OAYAAF2UKIwITU9SVEdBR0WUjAVPVEhFUpSMA09XTpSMBFJFTlSUZYaUajsGAABLAoaUaj0GAABd
lCiMDE5vdCBWZXJpZmllZJSMD1NvdXJjZSBWZXJpZmllZJSMCFZlcmlmaWVklGWGlGpABgAAXZQo
jAZBcHItMTGUjAZBdWctMTGUjAZEZWMtMTGUjAZGZWItMTGUjAZKdWwtMTGUjAZKdW4tMTGUjAZN
YXItMTGUjAZNYXktMTGUjAZOb3YtMTGUjAZPY3QtMTGUjAZTZXAtMTGUZYaUakMGAABdlCiMC0No
YXJnZWQgT2ZmlIwHQ3VycmVudJSMB0RlZmF1bHSUjApGdWxseSBQYWlklIwPSW4gR3JhY2UgUGVy
aW9klIwRTGF0ZSAoMTYtMzAgZGF5cymUjBJMYXRlICgzMS0xMjAgZGF5cymUZYaUakYGAABdlCiM
A2NhcpSMC2NyZWRpdF9jYXJklIwSZGVidF9jb25zb2xpZGF0aW9ulIwQaG9tZV9pbXByb3ZlbWVu
dJSMBWhvdXNllIwObWFqb3JfcHVyY2hhc2WUjAdtZWRpY2FslIwGbW92aW5nlIwFb3RoZXKUjBBy
ZW5ld2FibGVfZW5lcmd5lIwOc21hbGxfYnVzaW5lc3OUjAh2YWNhdGlvbpSMB3dlZGRpbmeUZYaU
akkGAABdlCiMAkFLlIwCQUyUjAJBUpSMAkFalIwCQ0GUjAJDT5SMAkNUlIwCREOUjAJERZSMAkZM
lIwCR0GUjAJISZSMAklMlIwCS1OUjAJLWZSMAkxBlIwCTUGUjAJNRJSMAk1JlIwCTU6UjAJNT5SM
Ak1TlIwCTVSUjAJOQ5SMAk5IlIwCTkqUjAJOTZSMAk5WlIwCTlmUjAJPSJSMAk9LlIwCT1KUjAJQ
QZSMAlJJlIwCU0OUjAJTRJSMAlROlIwCVFiUjAJVVJSMAlZBlIwCVlSUjAJXQZSMAldJlIwCV1aU
jAJXWZRlhpRqTAYAAEsChpRqTgYAAEsChpRqUAYAAEsChpRqUgYAAEsChpRqVAYAAEsChpRqVgYA
AEsChpRqWAYAAEsChpRqWgYAAEsChpRqXAYAAEsChpRqXgYAAEsChpRqYAYAAF2UaJthhpRqYgYA
AEsChpRqZAYAAEsChpRqZgYAAEsChpRqaAYAAEsChpRqagYAAEsChpRqbAYAAEsChpRqbgYAAEsC
hpRqcAYAAF2UKIwGQXByLTExlIwGQXByLTEylIwGQXByLTEzlIwGQXByLTE0lIwGQXByLTE1lIwG
QXVnLTExlIwGQXVnLTEylIwGQXVnLTEzlIwGQXVnLTE0lIwGQXVnLTE1lIwGRGVjLTExlIwGRGVj
LTEylIwGRGVjLTEzlIwGRGVjLTE0lIwGRGVjLTE1lIwGRmViLTEylIwGRmViLTEzlIwGRmViLTE0
lIwGRmViLTE1lIwGSmFuLTEylIwGSmFuLTEzlIwGSmFuLTE0lIwGSmFuLTE1lIwGSmFuLTE2lIwG
SnVsLTExlIwGSnVsLTEylIwGSnVsLTEzlIwGSnVsLTE0lIwGSnVsLTE1lIwGSnVuLTExlIwGSnVu
LTEylIwGSnVuLTEzlIwGSnVuLTE0lIwGSnVuLTE1lIwGTWFyLTExlIwGTWFyLTEylIwGTWFyLTEz
lIwGTWFyLTE0lIwGTWFyLTE1lIwGTWF5LTExlIwGTWF5LTEylIwGTWF5LTEzlIwGTWF5LTE0lIwG
TWF5LTE1lIwGTm92LTExlIwGTm92LTEylIwGTm92LTEzlIwGTm92LTE0lIwGTm92LTE1lIwGT2N0
LTExlIwGT2N0LTEylIwGT2N0LTEzlIwGT2N0LTE0lIwGT2N0LTE1lIwGU2VwLTExlIwGU2VwLTEy
lIwGU2VwLTEzlIwGU2VwLTE0lIwGU2VwLTE1lGWGlGpzBgAASwKGlGp1BgAAXZRqdgYAAGGGlGp4
BgAASwKGlGp6BgAASwKGlGp8BgAASwKGlGp+BgAASwKGlGqABgAAXZRqgQYAAGGGlGqDBgAASwKG
lGqFBgAASwKGlGqHBgAASwKGlGqJBgAASwKGlGqLBgAASwKGlGqNBgAASwKGlGqPBgAASwKGlGqR
BgAASwKGlGqTBgAASwKGlGqVBgAASwKGlGqXBgAASwKGlGqZBgAASwKGlGqbBgAASwKGlGqdBgAA
SwKGlGqfBgAASwKGlGqhBgAASwKGlGqjBgAASwKGlGqlBgAAXZQoajMCAABqNAIAAGWGlHSUakMC
AABqqAYAAEsDhpRqqgYAAEsDhpSGlGpJAgAAKWpKAgAAXZR1YmV1Lg==
</properties>
		<properties node_id="1" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x07\x80\x00\x00\x00\xe9\x00\x00\r\x16\x00\x00\x02\xeb\x00\x00\x07\x80\x00\x00\x01\x0e\x00\x00\r\x16\x00\x00\x02\xeb\x00\x00\x00\x01\x00\x00\x00\x00\x07\x80\x00\x00\x07\x80\x00\x00\x01\x0e\x00\x00\r\x16\x00\x00\x02\xeb', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="2" format="pickle">gASVyhAAAAAAAAB9lCiMC2F1dG9fY29tbWl0lIiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBNzYXZl
ZFdpZGdldEdlb21ldHJ5lENCAdnQywADAAAAAAABAAAAEAAABQAAAAKvAAAAAgAAAC4AAAT/AAAC
rgAAAAAAAAAABQAAAAACAAAALgAABP8AAAKulIwJc2VsZWN0aW9ulE6MD3Zpc3VhbF9zZXR0aW5n
c5R9lIwFZ3JhcGiUfZSMC19fdmVyc2lvbl9flEsBjBBjb250ZXh0X3NldHRpbmdzlF2UKIwVb3Jh
bmdld2lkZ2V0LnNldHRpbmdzlIwHQ29udGV4dJSTlCmBlH2UKIwGdmFsdWVzlH2UKIwJYW5ub3Rf
dmFylE5K/v///4aUjAljb2xvcl92YXKUjAhnb29kX2JhZJRLZYaUjAlncm91cF92YXKUTkr+////
hpSMDHNlbGVjdGVkX3ZhcpSMDGlzc3VlX2RfZGF0ZZRLaIaUaAh9lGgKSwF1jAphdHRyaWJ1dGVz
lH2UKIwJRmVhdHVyZSAxlEsCjAlsb2FuX2FtbnSUSwKMC2Z1bmRlZF9hbW50lEsCjAR0ZXJtlEsB
jAhpbnRfcmF0ZZRLAowLaW5zdGFsbG1lbnSUSwKMBWdyYWRllEsBjAlzdWJfZ3JhZGWUSwGMCmVt
cF9sZW5ndGiUSwGMDmhvbWVfb3duZXJzaGlwlEsBjAphbm51YWxfaW5jlEsCjBN2ZXJpZmljYXRp
b25fc3RhdHVzlEsBjAdpc3N1ZV9klEsBjAtsb2FuX3N0YXR1c5RLAYwHcHVycG9zZZRLAYwKYWRk
cl9zdGF0ZZRLAYwDZHRplEsCjAtkZWxpbnFfMnlyc5RLAowOaW5xX2xhc3RfNm10aHOUSwKMFm10
aHNfc2luY2VfbGFzdF9kZWxpbnGUSwKMFm10aHNfc2luY2VfbGFzdF9yZWNvcmSUSwKMCG9wZW5f
YWNjlEsCjAdwdWJfcmVjlEsCjAlyZXZvbF9iYWyUSwKMCnJldm9sX3V0aWyUSwKMCXRvdGFsX2Fj
Y5RLAowTaW5pdGlhbF9saXN0X3N0YXR1c5RLAYwJb3V0X3BybmNwlEsCjAt0b3RhbF9weW1udJRL
AowPdG90YWxfcmVjX3BybmNwlEsCjA10b3RhbF9yZWNfaW50lEsCjBJ0b3RhbF9yZWNfbGF0ZV9m
ZWWUSwKMCnJlY292ZXJpZXOUSwKMF2NvbGxlY3Rpb25fcmVjb3ZlcnlfZmVllEsCjAxsYXN0X3B5
bW50X2SUSwGMD2xhc3RfcHltbnRfYW1udJRLAowaY29sbGVjdGlvbnNfMTJfbXRoc19leF9tZWSU
SwGMG210aHNfc2luY2VfbGFzdF9tYWpvcl9kZXJvZ5RLAowQYW5udWFsX2luY19qb2ludJRLAowJ
ZHRpX2pvaW50lEsCjBl2ZXJpZmljYXRpb25fc3RhdHVzX2pvaW50lEsCjA5hY2Nfbm93X2RlbGlu
cZRLAYwMdG90X2NvbGxfYW10lEsCjAt0b3RfY3VyX2JhbJRLAowLb3Blbl9hY2NfNm2USwKMCm9w
ZW5faWxfNm2USwKMC29wZW5faWxfMTJtlEsCjAtvcGVuX2lsXzI0bZRLAowSbXRoc19zaW5jZV9y
Y250X2lslEsCjAx0b3RhbF9iYWxfaWyUSwKMB2lsX3V0aWyUSwKMC29wZW5fcnZfMTJtlEsCjAtv
cGVuX3J2XzI0bZRLAowKbWF4X2JhbF9iY5RLAowIYWxsX3V0aWyUSwKMEHRvdGFsX3Jldl9oaV9s
aW2USwKMBmlucV9maZRLAowLdG90YWxfY3VfdGyUSwKMDGlucV9sYXN0XzEybZRLAowOZW1wX2xl
bmd0aF9pbnSUSwKMFWVhcmxpZXN0X2NyX2xpbmVfZGF0ZZRLBIwbbXRoc19zaW5jZV9lYXJsaWVz
dF9jcl9saW5llEsCjAh0ZXJtX2ludJRLAmgcSwSMEm10aHNfc2luY2VfaXNzdWVfZJRLAmgXSwF1
jAVtZXRhc5R9lCiMBGRlc2OUSwOMEGVhcmxpZXN0X2NyX2xpbmWUSwN1dWJoDymBlH2UKGgSfZQo
jAlhbm5vdF92YXKUTkr+////hpSMCWNvbG9yX3ZhcpSMCmVtcF9sZW5ndGiUS2WGlIwJZ3JvdXBf
dmFylE5K/v///4aUjAxzZWxlY3RlZF92YXKUjAhpbnRfcmF0ZZRLZoaUjAVncmFwaJR9lGgKSwF1
aB99lCiMCUZlYXR1cmUgMZRLAowKVW5uYW1lZDogMJRLAowCaWSUSwKMCW1lbWJlcl9pZJRLAowJ
bG9hbl9hbW50lEsCjAtmdW5kZWRfYW1udJRLAowPZnVuZGVkX2FtbnRfaW52lEsCjAR0ZXJtlEsB
aHBLAowLaW5zdGFsbG1lbnSUSwKMBWdyYWRllEsBjAlzdWJfZ3JhZGWUSwFoa0sBjA5ob21lX293
bmVyc2hpcJRLAYwKYW5udWFsX2luY5RLAowTdmVyaWZpY2F0aW9uX3N0YXR1c5RLAYwHaXNzdWVf
ZJRLAYwLbG9hbl9zdGF0dXOUSwGMCnB5bW50X3BsYW6USwGMB3B1cnBvc2WUSwGMCmFkZHJfc3Rh
dGWUSwGMA2R0aZRLAowLZGVsaW5xXzJ5cnOUSwKMDmlucV9sYXN0XzZtdGhzlEsCjBZtdGhzX3Np
bmNlX2xhc3RfZGVsaW5xlEsCjBZtdGhzX3NpbmNlX2xhc3RfcmVjb3JklEsCjAhvcGVuX2FjY5RL
AowHcHViX3JlY5RLAowJcmV2b2xfYmFslEsCjApyZXZvbF91dGlslEsCjAl0b3RhbF9hY2OUSwKM
E2luaXRpYWxfbGlzdF9zdGF0dXOUSwGMCW91dF9wcm5jcJRLAowNb3V0X3BybmNwX2ludpRLAowL
dG90YWxfcHltbnSUSwKMD3RvdGFsX3B5bW50X2ludpRLAowPdG90YWxfcmVjX3BybmNwlEsCjA10
b3RhbF9yZWNfaW50lEsCjBJ0b3RhbF9yZWNfbGF0ZV9mZWWUSwKMCnJlY292ZXJpZXOUSwKMF2Nv
bGxlY3Rpb25fcmVjb3ZlcnlfZmVllEsCjAxsYXN0X3B5bW50X2SUSwGMD2xhc3RfcHltbnRfYW1u
dJRLAowMbmV4dF9weW1udF9klEsBjBJsYXN0X2NyZWRpdF9wdWxsX2SUSwGMGmNvbGxlY3Rpb25z
XzEyX210aHNfZXhfbWVklEsBjBttdGhzX3NpbmNlX2xhc3RfbWFqb3JfZGVyb2eUSwKMC3BvbGlj
eV9jb2RllEsBjBBhcHBsaWNhdGlvbl90eXBllEsBjBBhbm51YWxfaW5jX2pvaW50lEsCjAlkdGlf
am9pbnSUSwKMGXZlcmlmaWNhdGlvbl9zdGF0dXNfam9pbnSUSwKMDmFjY19ub3dfZGVsaW5xlEsB
jAx0b3RfY29sbF9hbXSUSwKMC3RvdF9jdXJfYmFslEsCjAtvcGVuX2FjY182bZRLAowKb3Blbl9p
bF82bZRLAowLb3Blbl9pbF8xMm2USwKMC29wZW5faWxfMjRtlEsCjBJtdGhzX3NpbmNlX3JjbnRf
aWyUSwKMDHRvdGFsX2JhbF9pbJRLAowHaWxfdXRpbJRLAowLb3Blbl9ydl8xMm2USwKMC29wZW5f
cnZfMjRtlEsCjAptYXhfYmFsX2JjlEsCjAhhbGxfdXRpbJRLAowQdG90YWxfcmV2X2hpX2xpbZRL
AowGaW5xX2ZplEsCjAt0b3RhbF9jdV90bJRLAowMaW5xX2xhc3RfMTJtlEsCjA5lbXBfbGVuZ3Ro
X2ludJRLAowVZWFybGllc3RfY3JfbGluZV9kYXRllEsEjBttdGhzX3NpbmNlX2VhcmxpZXN0X2Ny
X2xpbmWUSwKMCHRlcm1faW50lEsCjAxpc3N1ZV9kX2RhdGWUSwSMEm10aHNfc2luY2VfaXNzdWVf
ZJRLAowIZ29vZF9iYWSUSwF1aGF9lCiMCWVtcF90aXRsZZRLA4wDdXJslEsDjARkZXNjlEsDjAV0
aXRsZZRLA4wIemlwX2NvZGWUSwOMEGVhcmxpZXN0X2NyX2xpbmWUSwN1dWJoDymBlH2UKGgSfZQo
jAlhbm5vdF92YXKUTkr+////hpSMCWNvbG9yX3ZhcpSMCmVtcF9sZW5ndGiUS2WGlIwJZ3JvdXBf
dmFylE5K/v///4aUjAxzZWxlY3RlZF92YXKUjAhpbnRfcmF0ZZRLZoaUjAVncmFwaJR9lGgKSwF1
aB99lCiMCWxvYW5fYW1udJRLAowLZnVuZGVkX2FtbnSUSwKMBHRlcm2USwGMCGludF9yYXRllEsC
jAtpbnN0YWxsbWVudJRLAowFZ3JhZGWUSwGMCXN1Yl9ncmFkZZRLAYwKZW1wX2xlbmd0aJRLAYwO
aG9tZV9vd25lcnNoaXCUSwGMCmFubnVhbF9pbmOUSwKME3ZlcmlmaWNhdGlvbl9zdGF0dXOUSwGM
B2lzc3VlX2SUSwGMC2xvYW5fc3RhdHVzlEsBjAdwdXJwb3NllEsBjAphZGRyX3N0YXRllEsBjANk
dGmUSwKMC2RlbGlucV8yeXJzlEsCjA5pbnFfbGFzdF82bXRoc5RLAowWbXRoc19zaW5jZV9sYXN0
X2RlbGlucZRLAowWbXRoc19zaW5jZV9sYXN0X3JlY29yZJRLAowIb3Blbl9hY2OUSwKMB3B1Yl9y
ZWOUSwKMCXJldm9sX2JhbJRLAowKcmV2b2xfdXRpbJRLAowJdG90YWxfYWNjlEsCjBNpbml0aWFs
X2xpc3Rfc3RhdHVzlEsBjAlvdXRfcHJuY3CUSwKMC3RvdGFsX3B5bW50lEsCjA90b3RhbF9yZWNf
cHJuY3CUSwKMDXRvdGFsX3JlY19pbnSUSwKMEnRvdGFsX3JlY19sYXRlX2ZlZZRLAowKcmVjb3Zl
cmllc5RLAowXY29sbGVjdGlvbl9yZWNvdmVyeV9mZWWUSwKMDGxhc3RfcHltbnRfZJRLAYwPbGFz
dF9weW1udF9hbW50lEsCjBpjb2xsZWN0aW9uc18xMl9tdGhzX2V4X21lZJRLAYwbbXRoc19zaW5j
ZV9sYXN0X21ham9yX2Rlcm9nlEsCjBBhbm51YWxfaW5jX2pvaW50lEsCjAlkdGlfam9pbnSUSwKM
GXZlcmlmaWNhdGlvbl9zdGF0dXNfam9pbnSUSwKMDmFjY19ub3dfZGVsaW5xlEsBjAx0b3RfY29s
bF9hbXSUSwKMC3RvdF9jdXJfYmFslEsCjAtvcGVuX2FjY182bZRLAowKb3Blbl9pbF82bZRLAowL
b3Blbl9pbF8xMm2USwKMC29wZW5faWxfMjRtlEsCjBJtdGhzX3NpbmNlX3JjbnRfaWyUSwKMDHRv
dGFsX2JhbF9pbJRLAowHaWxfdXRpbJRLAowLb3Blbl9ydl8xMm2USwKMC29wZW5fcnZfMjRtlEsC
jAptYXhfYmFsX2JjlEsCjAhhbGxfdXRpbJRLAowQdG90YWxfcmV2X2hpX2xpbZRLAowGaW5xX2Zp
lEsCjAt0b3RhbF9jdV90bJRLAowMaW5xX2xhc3RfMTJtlEsCjAhnb29kX2JhZJRLAXVoYX2UKIwE
ZGVzY5RLA4wQZWFybGllc3RfY3JfbGluZZRLA3V1YmV1Lg==
</properties>
		<properties node_id="3" format="pickle">gASV+RAAAAAAAAB9lCiMCmF1dG9fYXBwbHmUiIwSY29udHJvbEFyZWFWaXNpYmxllIiMEGN1bXVs
YXRpdmVfZGlzdHKUiYwTZml0dGVkX2Rpc3RyaWJ1dGlvbpRLB4wJaGlkZV9iYXJzlImMDWtkZV9z
bW9vdGhpbmeUSwqME3NhdmVkV2lkZ2V0R2VvbWV0cnmUQ0IB2dDLAAMAAP//+gYAAADe////BgAA
A3v///oHAAAA8////wUAAAN6AAAAAQAAAAAHgP//+gcAAADz////BQAAA3qUjApzaG93X3Byb2Jz
lImMDHNvcnRfYnlfZnJlcZSIjA9zdGFja2VkX2NvbHVtbnOUiYwLX192ZXJzaW9uX1+USwKMEGNv
bnRleHRfc2V0dGluZ3OUXZQojBVvcmFuZ2V3aWRnZXQuc2V0dGluZ3OUjAdDb250ZXh0lJOUKYGU
fZQojAZ2YWx1ZXOUfZQojARjdmFylIwIZ29vZF9iYWSUS2WGlIwObnVtYmVyX29mX2JpbnOUSwFK
/v///4aUjA1zZWxlY3RlZF9iYXJzlI+USv7///+GlIwDdmFylIwIaW50X3JhdGWUS2aGlGgMSwJ1
jAphdHRyaWJ1dGVzlH2UKIwJRmVhdHVyZSAxlEsCjAlsb2FuX2FtbnSUSwKMC2Z1bmRlZF9hbW50
lEsCjAR0ZXJtlEsBaB9LAowLaW5zdGFsbG1lbnSUSwKMBWdyYWRllEsBjAlzdWJfZ3JhZGWUSwGM
CmVtcF9sZW5ndGiUSwGMDmhvbWVfb3duZXJzaGlwlEsBjAphbm51YWxfaW5jlEsCjBN2ZXJpZmlj
YXRpb25fc3RhdHVzlEsBjAdpc3N1ZV9klEsBjAtsb2FuX3N0YXR1c5RLAYwHcHVycG9zZZRLAYwK
YWRkcl9zdGF0ZZRLAYwDZHRplEsCjAtkZWxpbnFfMnlyc5RLAowOaW5xX2xhc3RfNm10aHOUSwKM
Fm10aHNfc2luY2VfbGFzdF9kZWxpbnGUSwKMFm10aHNfc2luY2VfbGFzdF9yZWNvcmSUSwKMCG9w
ZW5fYWNjlEsCjAdwdWJfcmVjlEsCjAlyZXZvbF9iYWyUSwKMCnJldm9sX3V0aWyUSwKMCXRvdGFs
X2FjY5RLAowTaW5pdGlhbF9saXN0X3N0YXR1c5RLAYwJb3V0X3BybmNwlEsCjAt0b3RhbF9weW1u
dJRLAowPdG90YWxfcmVjX3BybmNwlEsCjA10b3RhbF9yZWNfaW50lEsCjBJ0b3RhbF9yZWNfbGF0
ZV9mZWWUSwKMCnJlY292ZXJpZXOUSwKMF2NvbGxlY3Rpb25fcmVjb3ZlcnlfZmVllEsCjAxsYXN0
X3B5bW50X2SUSwGMD2xhc3RfcHltbnRfYW1udJRLAowaY29sbGVjdGlvbnNfMTJfbXRoc19leF9t
ZWSUSwGMG210aHNfc2luY2VfbGFzdF9tYWpvcl9kZXJvZ5RLAowQYW5udWFsX2luY19qb2ludJRL
AowJZHRpX2pvaW50lEsCjBl2ZXJpZmljYXRpb25fc3RhdHVzX2pvaW50lEsCjA5hY2Nfbm93X2Rl
bGlucZRLAYwMdG90X2NvbGxfYW10lEsCjAt0b3RfY3VyX2JhbJRLAowLb3Blbl9hY2NfNm2USwKM
Cm9wZW5faWxfNm2USwKMC29wZW5faWxfMTJtlEsCjAtvcGVuX2lsXzI0bZRLAowSbXRoc19zaW5j
ZV9yY250X2lslEsCjAx0b3RhbF9iYWxfaWyUSwKMB2lsX3V0aWyUSwKMC29wZW5fcnZfMTJtlEsC
jAtvcGVuX3J2XzI0bZRLAowKbWF4X2JhbF9iY5RLAowIYWxsX3V0aWyUSwKMEHRvdGFsX3Jldl9o
aV9saW2USwKMBmlucV9maZRLAowLdG90YWxfY3VfdGyUSwKMDGlucV9sYXN0XzEybZRLAowOZW1w
X2xlbmd0aF9pbnSUSwKMFWVhcmxpZXN0X2NyX2xpbmVfZGF0ZZRLBIwbbXRoc19zaW5jZV9lYXJs
aWVzdF9jcl9saW5llEsCjAh0ZXJtX2ludJRLAowMaXNzdWVfZF9kYXRllEsEjBJtdGhzX3NpbmNl
X2lzc3VlX2SUSwJoF0sBdYwFbWV0YXOUfZQojARkZXNjlEsDjBBlYXJsaWVzdF9jcl9saW5llEsD
dXViaBEpgZR9lChoFH2UKIwEY3ZhcpSMCGdvb2RfYmFklEtlhpSMDm51bWJlcl9vZl9iaW5zlEsB
Sv7///+GlIwNc2VsZWN0ZWRfYmFyc5SPlEr+////hpSMA3ZhcpSMCGludF9yYXRllEtmhpRoDEsC
dWghfZQojAlGZWF0dXJlIDGUSwKMClVubmFtZWQ6IDCUSwKMAmlklEsCjAltZW1iZXJfaWSUSwKM
CWxvYW5fYW1udJRLAowLZnVuZGVkX2FtbnSUSwKMD2Z1bmRlZF9hbW50X2ludpRLAowEdGVybZRL
AWhzSwKMC2luc3RhbGxtZW50lEsCjAVncmFkZZRLAYwJc3ViX2dyYWRllEsBjAplbXBfbGVuZ3Ro
lEsBjA5ob21lX293bmVyc2hpcJRLAYwKYW5udWFsX2luY5RLAowTdmVyaWZpY2F0aW9uX3N0YXR1
c5RLAYwHaXNzdWVfZJRLAYwLbG9hbl9zdGF0dXOUSwGMCnB5bW50X3BsYW6USwGMB3B1cnBvc2WU
SwGMCmFkZHJfc3RhdGWUSwGMA2R0aZRLAowLZGVsaW5xXzJ5cnOUSwKMDmlucV9sYXN0XzZtdGhz
lEsCjBZtdGhzX3NpbmNlX2xhc3RfZGVsaW5xlEsCjBZtdGhzX3NpbmNlX2xhc3RfcmVjb3JklEsC
jAhvcGVuX2FjY5RLAowHcHViX3JlY5RLAowJcmV2b2xfYmFslEsCjApyZXZvbF91dGlslEsCjAl0
b3RhbF9hY2OUSwKME2luaXRpYWxfbGlzdF9zdGF0dXOUSwGMCW91dF9wcm5jcJRLAowNb3V0X3By
bmNwX2ludpRLAowLdG90YWxfcHltbnSUSwKMD3RvdGFsX3B5bW50X2ludpRLAowPdG90YWxfcmVj
X3BybmNwlEsCjA10b3RhbF9yZWNfaW50lEsCjBJ0b3RhbF9yZWNfbGF0ZV9mZWWUSwKMCnJlY292
ZXJpZXOUSwKMF2NvbGxlY3Rpb25fcmVjb3ZlcnlfZmVllEsCjAxsYXN0X3B5bW50X2SUSwGMD2xh
c3RfcHltbnRfYW1udJRLAowMbmV4dF9weW1udF9klEsBjBJsYXN0X2NyZWRpdF9wdWxsX2SUSwGM
GmNvbGxlY3Rpb25zXzEyX210aHNfZXhfbWVklEsBjBttdGhzX3NpbmNlX2xhc3RfbWFqb3JfZGVy
b2eUSwKMC3BvbGljeV9jb2RllEsBjBBhcHBsaWNhdGlvbl90eXBllEsBjBBhbm51YWxfaW5jX2pv
aW50lEsCjAlkdGlfam9pbnSUSwKMGXZlcmlmaWNhdGlvbl9zdGF0dXNfam9pbnSUSwKMDmFjY19u
b3dfZGVsaW5xlEsBjAx0b3RfY29sbF9hbXSUSwKMC3RvdF9jdXJfYmFslEsCjAtvcGVuX2FjY182
bZRLAowKb3Blbl9pbF82bZRLAowLb3Blbl9pbF8xMm2USwKMC29wZW5faWxfMjRtlEsCjBJtdGhz
X3NpbmNlX3JjbnRfaWyUSwKMDHRvdGFsX2JhbF9pbJRLAowHaWxfdXRpbJRLAowLb3Blbl9ydl8x
Mm2USwKMC29wZW5fcnZfMjRtlEsCjAptYXhfYmFsX2JjlEsCjAhhbGxfdXRpbJRLAowQdG90YWxf
cmV2X2hpX2xpbZRLAowGaW5xX2ZplEsCjAt0b3RhbF9jdV90bJRLAowMaW5xX2xhc3RfMTJtlEsC
jA5lbXBfbGVuZ3RoX2ludJRLAowVZWFybGllc3RfY3JfbGluZV9kYXRllEsEjBttdGhzX3NpbmNl
X2VhcmxpZXN0X2NyX2xpbmWUSwKMCHRlcm1faW50lEsCjAxpc3N1ZV9kX2RhdGWUSwSMEm10aHNf
c2luY2VfaXNzdWVfZJRLAmhrSwF1aGN9lCiMCWVtcF90aXRsZZRLA4wDdXJslEsDjARkZXNjlEsD
jAV0aXRsZZRLA4wIemlwX2NvZGWUSwOMEGVhcmxpZXN0X2NyX2xpbmWUSwN1dWJoESmBlH2UKGgU
fZQojARjdmFylIwIZ29vZF9iYWSUS2WGlIwObnVtYmVyX29mX2JpbnOUSwBK/v///4aUjA1zZWxl
Y3RlZF9iYXJzlI+USv7///+GlIwDdmFylIwKZW1wX2xlbmd0aJRLZYaUaAxLAnVoIX2UKIwJbG9h
bl9hbW50lEsCjAtmdW5kZWRfYW1udJRLAowEdGVybZRLAYwIaW50X3JhdGWUSwKMC2luc3RhbGxt
ZW50lEsCjAVncmFkZZRLAYwJc3ViX2dyYWRllEsBjAplbXBfbGVuZ3RolEsBjA5ob21lX293bmVy
c2hpcJRLAYwKYW5udWFsX2luY5RLAowTdmVyaWZpY2F0aW9uX3N0YXR1c5RLAYwHaXNzdWVfZJRL
AYwLbG9hbl9zdGF0dXOUSwGMB3B1cnBvc2WUSwGMCmFkZHJfc3RhdGWUSwGMA2R0aZRLAowLZGVs
aW5xXzJ5cnOUSwKMDmlucV9sYXN0XzZtdGhzlEsCjBZtdGhzX3NpbmNlX2xhc3RfZGVsaW5xlEsC
jBZtdGhzX3NpbmNlX2xhc3RfcmVjb3JklEsCjAhvcGVuX2FjY5RLAowHcHViX3JlY5RLAowJcmV2
b2xfYmFslEsCjApyZXZvbF91dGlslEsCjAl0b3RhbF9hY2OUSwKME2luaXRpYWxfbGlzdF9zdGF0
dXOUSwGMCW91dF9wcm5jcJRLAowLdG90YWxfcHltbnSUSwKMD3RvdGFsX3JlY19wcm5jcJRLAowN
dG90YWxfcmVjX2ludJRLAowSdG90YWxfcmVjX2xhdGVfZmVllEsCjApyZWNvdmVyaWVzlEsCjBdj
b2xsZWN0aW9uX3JlY292ZXJ5X2ZlZZRLAowMbGFzdF9weW1udF9klEsBjA9sYXN0X3B5bW50X2Ft
bnSUSwKMGmNvbGxlY3Rpb25zXzEyX210aHNfZXhfbWVklEsBjBttdGhzX3NpbmNlX2xhc3RfbWFq
b3JfZGVyb2eUSwKMEGFubnVhbF9pbmNfam9pbnSUSwKMCWR0aV9qb2ludJRLAowZdmVyaWZpY2F0
aW9uX3N0YXR1c19qb2ludJRLAowOYWNjX25vd19kZWxpbnGUSwGMDHRvdF9jb2xsX2FtdJRLAowL
dG90X2N1cl9iYWyUSwKMC29wZW5fYWNjXzZtlEsCjApvcGVuX2lsXzZtlEsCjAtvcGVuX2lsXzEy
bZRLAowLb3Blbl9pbF8yNG2USwKMEm10aHNfc2luY2VfcmNudF9pbJRLAowMdG90YWxfYmFsX2ls
lEsCjAdpbF91dGlslEsCjAtvcGVuX3J2XzEybZRLAowLb3Blbl9ydl8yNG2USwKMCm1heF9iYWxf
YmOUSwKMCGFsbF91dGlslEsCjBB0b3RhbF9yZXZfaGlfbGltlEsCjAZpbnFfZmmUSwKMC3RvdGFs
X2N1X3RslEsCjAxpbnFfbGFzdF8xMm2USwKMCGdvb2RfYmFklEsBdWhjfZQojARkZXNjlEsDjBBl
YXJsaWVzdF9jcl9saW5llEsDdXViZXUu
</properties>
		<properties node_id="4" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 3, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xff\xff\xff\xff\xff\xf9\x00\x00\x05\x00\x00\x00\x02\xa0\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x04\xff\x00\x00\x02\x9f\x00\x00\x00\x00\x02\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x04\xff\x00\x00\x02\x9f', 'scriptLibrary': [{'name': 'Table from numpy', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': 'import matplotlib.pyplot as plt\nimport pandas as pd\nfrom Orange.data import Table, Domain, ContinuousVariable\n\n# Convertendo os dados de entrada do Orange para um DataFrame do Pandas\ndata = pd.DataFrame(in_data.X, columns=[var.name for var in in_data.domain.attributes])\ntarget = pd.Series(in_data.Y, name=in_data.domain.class_var.name)\n\n# Verifique se os dados possuem as variáveis "grade", "Good", "Bad" e "WoE"\nif \'grade\' in data.columns and \'WoE\' in data.columns and \'Good\' in data.columns and \'Bad\' in data.columns:\n    \n    # Definir as categorias (grade), WoE e as taxas de inadimplência (Good e Bad)\n    categories = data[\'grade\']\n    woe = data[\'WoE\'].astype(\'float\')\n    good_row = data[\'Good\'].astype(\'float\')  # Substituir pela sua variável de bons pagadores\n    bad_row = data[\'Bad\'].astype(\'float\')  # Substituir pela sua variável de maus pagadores\n\n    # Criação da figura com subplots\n    fig, ax = plt.subplots(1, 2, figsize=(12, 6))\n\n    # Gráfico de barras empilhadas para taxa de inadimplência\n    bad_bars = ax[0].barh(y=categories, width=bad_row, color=\'#8d0801\', label=\'Bad\')\n    good_bars = ax[0].barh(y=categories, width=good_row, left=bad_row, color=\'#8a817c\', label=\'Good\')\n\n    # Anotando valores percentuais dentro de cada barra\n    for good_bar, bad_bar, good_rate, bad_rate in zip(good_bars, bad_bars, good_row, bad_row):\n        x_position_good = good_bar.get_x() + good_bar.get_width() / 2\n        x_position_bad = bad_bar.get_x() + bad_bar.get_width() / 2  \n        y_position = good_bar.get_y() + good_bar.get_height() / 2\n\n        ax[0].text(x_position_good, y_position, f\'{good_rate:.2f}%\', ha=\'center\', va=\'center\', color=\'white\', fontsize=10)\n        ax[0].text(x_position_bad, y_position, f\'{bad_rate:.2f}%\', ha=\'center\', va=\'center\', color=\'white\', fontsize=10)\n\n    ax[0].set_title(\'Default rate by Grade\')\n    ax[0].invert_yaxis()\n    ax[0].grid(False)\n    ax[0].legend(bbox_to_anchor=(-0.2, 1.1), loc=\'upper left\')\n\n    # Gráfico de linha para WoE\n    ax[1].plot(categories, woe, marker=\'o\', linestyle=\'--\')\n    ax[1].set_title(\'WoE by Grade\')\n    ax[1].set_xticks(categories.unique())\n    \n    plt.tight_layout()\n    plt.show()\n\n# Convertendo o DataFrame de volta para uma tabela do Orange\ndomain = Domain([ContinuousVariable(col) for col in data.columns])\nout_data = Table.from_numpy(domain, data.to_numpy())\n', 'filename': None}], 'scriptText': 'import matplotlib.pyplot as plt\nimport pandas as pd\nimport numpy as np\nfrom Orange.data import Table, Domain, ContinuousVariable, DiscreteVariable\n\ndef plot_woe_bad_rate_by_variable(in_data, target_variable=\'purpose\', outcome_variable=None, figsize=(20, 12)):\n    try:\n        # Get the purpose variable from the domain\n        purpose_var = in_data.domain[target_variable]\n        if not isinstance(purpose_var, DiscreteVariable):\n            raise ValueError(f"The \'{target_variable}\' variable must be a DiscreteVariable.")\n        \n        # Create a dictionary to map numeric values to purpose names\n        purpose_mapping = {i: value for i, value in enumerate(purpose_var.values)}\n        \n        # Print purpose mapping for verification\n        print("Purpose Mapping:")\n        for key, value in purpose_mapping.items():\n            print(f"{key}: {value}")\n        \n        # Convert Orange data to pandas DataFrame\n        data = pd.DataFrame({\n            var.name: in_data.get_column(var.name)\n            for var in in_data.domain.variables\n        })\n        \n        # Print the first few rows of the DataFrame for verification\n        print("\\nFirst few rows of the DataFrame:")\n        print(data.head())\n        \n        # If outcome_variable is not specified or not in columns, use the last column\n        if outcome_variable is None or outcome_variable not in data.columns:\n            outcome_variable = data.columns[-1]\n        \n        print(f"\\nOutcome variable: {outcome_variable}")\n        \n        # Create \'Good\' and \'Bad\' columns based on the outcome variable\n        median = data[outcome_variable].median()\n        data[\'Good\'] = (data[outcome_variable] &gt;= median).astype(int)\n        data[\'Bad\'] = (data[outcome_variable] &lt; median).astype(int)\n        \n        # Calculate WoE and other metrics\n        grouped = data.groupby(target_variable).agg({\n            \'Good\': \'sum\',\n            \'Bad\': \'sum\'\n        }).reset_index()\n        \n        grouped[\'Total\'] = grouped[\'Good\'] + grouped[\'Bad\']\n        grouped[\'GoodRate\'] = grouped[\'Good\'] / grouped[\'Total\']\n        grouped[\'BadRate\'] = grouped[\'Bad\'] / grouped[\'Total\']\n        \n        total_good = grouped[\'Good\'].sum()\n        total_bad = grouped[\'Bad\'].sum()\n        \n        grouped[\'WoE\'] = np.log((grouped[\'GoodRate\'] / (total_good / grouped[\'Total\'].sum())) / \n                                (grouped[\'BadRate\'] / (total_bad / grouped[\'Total\'].sum())))\n        \n        # Map numeric purposes to their descriptions\n        grouped[\'purpose_description\'] = grouped[target_variable].map(purpose_mapping)\n        \n        # Print grouped data for verification\n        print("\\nGrouped data:")\n        print(grouped)\n        \n        # Sort by WoE for better visualization\n        grouped = grouped.sort_values(\'WoE\')\n        \n        purposes = grouped[\'purpose_description\']\n        woe = grouped[\'WoE\']\n        good_rate = grouped[\'GoodRate\'] * 100\n        bad_rate = grouped[\'BadRate\'] * 100\n        \n        # Create the plot\n        fig, (ax1, ax2) = plt.subplots(1, 2, figsize=figsize)\n        \n        # Stacked bar chart\n        ax1.barh(purposes, bad_rate, label=\'Bad\', color=\'#0E2E98\')\n        ax1.barh(purposes, good_rate, left=bad_rate, label=\'Good\', color=\'#16D3F0\')\n        \n        ax1.set_title(\'Good/Bad Rate by Purpose\')\n        ax1.set_xlabel(\'Percentage\')\n        ax1.set_ylabel(\'Purpose\')\n        ax1.legend(loc=\'lower right\')\n        \n        # Add percentage labels\n        for i, (bad, good) in enumerate(zip(bad_rate, good_rate)):\n            ax1.text(bad/2, i, f\'{bad:.1f}%\', va=\'center\', ha=\'center\')\n            ax1.text(bad + good/2, i, f\'{good:.1f}%\', va=\'center\', ha=\'center\')\n        \n        # WoE chart\n        ax2.plot(woe, purposes, marker=\'o\')\n        ax2.set_title(\'Weight of Evidence (WoE) by Purpose\')\n        ax2.set_xlabel(\'WoE\')\n        ax2.set_ylabel(\'Purpose\')\n        ax2.axvline(x=0, color=\'r\', linestyle=\'--\')\n        \n        # Add WoE values as text\n        for i, (purpose, w) in enumerate(zip(purposes, woe)):\n            ax2.text(w, i, f\'{w:.2f}\', va=\'center\', ha=\'left\' if w &gt;= 0 else \'right\')\n        \n        plt.tight_layout()\n        plt.show()\n\n        # Create a new Orange table with the plot data\n        domain = Domain([DiscreteVariable(target_variable, values=purposes.tolist()),\n                         ContinuousVariable("WoE"),\n                         ContinuousVariable("Good_Rate"),\n                         ContinuousVariable("Bad_Rate")])\n        out_data = Table.from_numpy(domain, \n                                    X=np.column_stack((\n                                        grouped[target_variable],  # Use original numeric values\n                                        woe,\n                                        good_rate,\n                                        bad_rate\n                                    )))\n        return out_data\n    \n    except Exception as e:\n        print(f"Error creating the plot: {str(e)}")\n        return None\n\n# Usage of the function\nif in_data is not None:\n    out_data = plot_woe_bad_rate_by_variable(in_data, target_variable=\'purpose\', outcome_variable=None, figsize=(20, 12))\nelse:\n    print("No input data provided.")\n    out_data = None', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xac\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="5" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 3, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xff\xff\xff\xff\xff\xf9\x00\x00\x05\x00\x00\x00\x02\xa0\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x04\xff\x00\x00\x02\x9f\x00\x00\x00\x00\x02\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x04\xff\x00\x00\x02\x9f', 'scriptLibrary': [{'name': 'Table from numpy', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': 'import matplotlib.pyplot as plt\nimport pandas as pd\nfrom Orange.data import Table, Domain, ContinuousVariable\n\n# Convertendo os dados de entrada do Orange para um DataFrame do Pandas\ndata = pd.DataFrame(in_data.X, columns=[var.name for var in in_data.domain.attributes])\ntarget = pd.Series(in_data.Y, name=in_data.domain.class_var.name)\n\n# Verifique se os dados possuem as variáveis "grade", "Good", "Bad" e "WoE"\nif \'grade\' in data.columns and \'WoE\' in data.columns and \'Good\' in data.columns and \'Bad\' in data.columns:\n    \n    # Definir as categorias (grade), WoE e as taxas de inadimplência (Good e Bad)\n    categories = data[\'grade\']\n    woe = data[\'WoE\'].astype(\'float\')\n    good_row = data[\'Good\'].astype(\'float\')  # Substituir pela sua variável de bons pagadores\n    bad_row = data[\'Bad\'].astype(\'float\')  # Substituir pela sua variável de maus pagadores\n\n    # Criação da figura com subplots\n    fig, ax = plt.subplots(1, 2, figsize=(12, 6))\n\n    # Gráfico de barras empilhadas para taxa de inadimplência\n    bad_bars = ax[0].barh(y=categories, width=bad_row, color=\'#8d0801\', label=\'Bad\')\n    good_bars = ax[0].barh(y=categories, width=good_row, left=bad_row, color=\'#8a817c\', label=\'Good\')\n\n    # Anotando valores percentuais dentro de cada barra\n    for good_bar, bad_bar, good_rate, bad_rate in zip(good_bars, bad_bars, good_row, bad_row):\n        x_position_good = good_bar.get_x() + good_bar.get_width() / 2\n        x_position_bad = bad_bar.get_x() + bad_bar.get_width() / 2  \n        y_position = good_bar.get_y() + good_bar.get_height() / 2\n\n        ax[0].text(x_position_good, y_position, f\'{good_rate:.2f}%\', ha=\'center\', va=\'center\', color=\'white\', fontsize=10)\n        ax[0].text(x_position_bad, y_position, f\'{bad_rate:.2f}%\', ha=\'center\', va=\'center\', color=\'white\', fontsize=10)\n\n    ax[0].set_title(\'Default rate by Grade\')\n    ax[0].invert_yaxis()\n    ax[0].grid(False)\n    ax[0].legend(bbox_to_anchor=(-0.2, 1.1), loc=\'upper left\')\n\n    # Gráfico de linha para WoE\n    ax[1].plot(categories, woe, marker=\'o\', linestyle=\'--\')\n    ax[1].set_title(\'WoE by Grade\')\n    ax[1].set_xticks(categories.unique())\n    \n    plt.tight_layout()\n    plt.show()\n\n# Convertendo o DataFrame de volta para uma tabela do Orange\ndomain = Domain([ContinuousVariable(col) for col in data.columns])\nout_data = Table.from_numpy(domain, data.to_numpy())\n', 'filename': None}], 'scriptText': 'import matplotlib.pyplot as plt\nimport pandas as pd\nimport numpy as np\nfrom Orange.data import Table, Domain, ContinuousVariable, DiscreteVariable\n\ndef plot_woe_bad_rate_by_variable(in_data, target_variable, outcome_variable=None, figsize=(20, 12)):\n    try:\n        # Get the target variable from the domain\n        target_var = in_data.domain[target_variable]\n        if not isinstance(target_var, DiscreteVariable):\n            raise ValueError(f"The \'{target_variable}\' variable must be a DiscreteVariable.")\n        \n        # Create a dictionary to map numeric values to target names\n        target_mapping = {i: value for i, value in enumerate(target_var.values)}\n        \n        # Print target mapping for verification\n        print(f"{target_variable} Mapping:")\n        for key, value in target_mapping.items():\n            print(f"{key}: {value}")\n        \n        # Convert Orange data to pandas DataFrame\n        data = pd.DataFrame({\n            var.name: in_data.get_column(var.name)\n            for var in in_data.domain.variables\n        })\n        \n        # Print the first few rows of the DataFrame for verification\n        print("\\nFirst few rows of the DataFrame:")\n        print(data.head())\n        \n        # If outcome_variable is not specified or not in columns, use the last column\n        if outcome_variable is None or outcome_variable not in data.columns:\n            outcome_variable = data.columns[-1]\n        \n        print(f"\\nOutcome variable: {outcome_variable}")\n        \n        # Create \'Good\' and \'Bad\' columns based on the outcome variable\n        median = data[outcome_variable].median()\n        data[\'Good\'] = (data[outcome_variable] &gt;= median).astype(int)\n        data[\'Bad\'] = (data[outcome_variable] &lt; median).astype(int)\n        \n        # Calculate WoE and other metrics\n        grouped = data.groupby(target_variable).agg({\n            \'Good\': \'sum\',\n            \'Bad\': \'sum\'\n        }).reset_index()\n        \n        grouped[\'Total\'] = grouped[\'Good\'] + grouped[\'Bad\']\n        grouped[\'GoodRate\'] = grouped[\'Good\'] / grouped[\'Total\']\n        grouped[\'BadRate\'] = grouped[\'Bad\'] / grouped[\'Total\']\n        \n        total_good = grouped[\'Good\'].sum()\n        total_bad = grouped[\'Bad\'].sum()\n        \n        grouped[\'WoE\'] = np.log((grouped[\'GoodRate\'] / (total_good / grouped[\'Total\'].sum())) / \n                                (grouped[\'BadRate\'] / (total_bad / grouped[\'Total\'].sum())))\n        \n        # Map numeric targets to their descriptions\n        grouped[\'target_description\'] = grouped[target_variable].map(target_mapping)\n        \n        # Print grouped data for verification\n        print("\\nGrouped data:")\n        print(grouped)\n        \n        # Sort by WoE for better visualization\n        grouped = grouped.sort_values(\'WoE\')\n        \n        targets = grouped[\'target_description\']\n        woe = grouped[\'WoE\']\n        good_rate = grouped[\'GoodRate\'] * 100\n        bad_rate = grouped[\'BadRate\'] * 100\n        \n        # Create the plot\n        fig, (ax1, ax2) = plt.subplots(1, 2, figsize=figsize)\n        \n        # Stacked bar chart\n        ax1.barh(targets, bad_rate, label=\'Bad\', color=\'#0E2E98\')\n        ax1.barh(targets, good_rate, left=bad_rate, label=\'Good\', color=\'#16D3F0\')\n        \n        ax1.set_title(f\'Good/Bad Rate by {target_variable.capitalize()}\')\n        ax1.set_xlabel(\'Percentage\')\n        ax1.set_ylabel(target_variable.capitalize())\n        ax1.legend(loc=\'lower right\')\n        \n        # Add percentage labels\n        for i, (bad, good) in enumerate(zip(bad_rate, good_rate)):\n            ax1.text(bad/2, i, f\'{bad:.1f}%\', va=\'center\', ha=\'center\')\n            ax1.text(bad + good/2, i, f\'{good:.1f}%\', va=\'center\', ha=\'center\')\n        \n        # WoE chart\n        ax2.plot(woe, targets, marker=\'o\')\n        ax2.set_title(f\'Weight of Evidence (WoE) by {target_variable.capitalize()}\')\n        ax2.set_xlabel(\'WoE\')\n        ax2.set_ylabel(target_variable.capitalize())\n        ax2.axvline(x=0, color=\'r\', linestyle=\'--\')\n        \n        # Add WoE values as text\n        for i, (target, w) in enumerate(zip(targets, woe)):\n            ax2.text(w, i, f\'{w:.2f}\', va=\'center\', ha=\'left\' if w &gt;= 0 else \'right\')\n        \n        plt.tight_layout()\n        plt.show()\n\n        # Create a new Orange table with the plot data\n        domain = Domain([DiscreteVariable(target_variable, values=targets.tolist()),\n                         ContinuousVariable("WoE"),\n                         ContinuousVariable("Good_Rate"),\n                         ContinuousVariable("Bad_Rate")])\n        out_data = Table.from_numpy(domain, \n                                    X=np.column_stack((\n                                        grouped[target_variable],  # Use original numeric values\n                                        woe,\n                                        good_rate,\n                                        bad_rate\n                                    )))\n        return out_data\n    \n    except Exception as e:\n        print(f"Error creating the plot: {str(e)}")\n        return None\n\n# Example usage of the function\nif in_data is not None:\n     out_data = plot_woe_bad_rate_by_variable(in_data, target_variable=\'grade\', outcome_variable=None, figsize=(20, 12))\n# else:\n#     print("No input data provided.")\n#     out_data = None', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xac\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="6" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 3, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xf9\\\x00\x00\x00\xda\xff\xff\xfe]\x00\x00\x03\x8f\xff\xff\xf9]\x00\x00\x00\xef\xff\xff\xfe\\\x00\x00\x03\x8e\x00\x00\x00\x01\x00\x00\x00\x00\x07\x80\xff\xff\xf9]\x00\x00\x00\xef\xff\xff\xfe\\\x00\x00\x03\x8e', 'scriptLibrary': [{'name': 'Table from numpy', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': 'import matplotlib.pyplot as plt\nimport pandas as pd\nfrom Orange.data import Table, Domain, ContinuousVariable\n\n# Convertendo os dados de entrada do Orange para um DataFrame do Pandas\ndata = pd.DataFrame(in_data.X, columns=[var.name for var in in_data.domain.attributes])\ntarget = pd.Series(in_data.Y, name=in_data.domain.class_var.name)\n\n# Verifique se os dados possuem as variáveis "grade", "Good", "Bad" e "WoE"\nif \'grade\' in data.columns and \'WoE\' in data.columns and \'Good\' in data.columns and \'Bad\' in data.columns:\n    \n    # Definir as categorias (grade), WoE e as taxas de inadimplência (Good e Bad)\n    categories = data[\'grade\']\n    woe = data[\'WoE\'].astype(\'float\')\n    good_row = data[\'Good\'].astype(\'float\')  # Substituir pela sua variável de bons pagadores\n    bad_row = data[\'Bad\'].astype(\'float\')  # Substituir pela sua variável de maus pagadores\n\n    # Criação da figura com subplots\n    fig, ax = plt.subplots(1, 2, figsize=(12, 6))\n\n    # Gráfico de barras empilhadas para taxa de inadimplência\n    bad_bars = ax[0].barh(y=categories, width=bad_row, color=\'#8d0801\', label=\'Bad\')\n    good_bars = ax[0].barh(y=categories, width=good_row, left=bad_row, color=\'#8a817c\', label=\'Good\')\n\n    # Anotando valores percentuais dentro de cada barra\n    for good_bar, bad_bar, good_rate, bad_rate in zip(good_bars, bad_bars, good_row, bad_row):\n        x_position_good = good_bar.get_x() + good_bar.get_width() / 2\n        x_position_bad = bad_bar.get_x() + bad_bar.get_width() / 2  \n        y_position = good_bar.get_y() + good_bar.get_height() / 2\n\n        ax[0].text(x_position_good, y_position, f\'{good_rate:.2f}%\', ha=\'center\', va=\'center\', color=\'white\', fontsize=10)\n        ax[0].text(x_position_bad, y_position, f\'{bad_rate:.2f}%\', ha=\'center\', va=\'center\', color=\'white\', fontsize=10)\n\n    ax[0].set_title(\'Default rate by Grade\')\n    ax[0].invert_yaxis()\n    ax[0].grid(False)\n    ax[0].legend(bbox_to_anchor=(-0.2, 1.1), loc=\'upper left\')\n\n    # Gráfico de linha para WoE\n    ax[1].plot(categories, woe, marker=\'o\', linestyle=\'--\')\n    ax[1].set_title(\'WoE by Grade\')\n    ax[1].set_xticks(categories.unique())\n    \n    plt.tight_layout()\n    plt.show()\n\n# Convertendo o DataFrame de volta para uma tabela do Orange\ndomain = Domain([ContinuousVariable(col) for col in data.columns])\nout_data = Table.from_numpy(domain, data.to_numpy())\n', 'filename': None}], 'scriptText': 'import Orange\nimport matplotlib.pyplot as plt\n\n# Função para criar o gráfico de barras com porcentagens\ndef criar_grafico_inadimplencia(data):\n    # Assumindo que \'good_bad\' é uma coluna discreta onde 0 indica inadimplente e 1 indica adimplente\n    inadimplentes = sum(1 for d in data if d[\'good_bad\'] == 0)\n    adimplentes = sum(1 for d in data if d[\'good_bad\'] == 1)\n    total = len(data)\n\n    # Criando o gráfico de barras\n    categorias = [\'Inadimplentes\', \'Adimplentes\']\n    valores = [inadimplentes, adimplentes]\n    porcentagens = [(inadimplentes / total) * 100, (adimplentes / total) * 100]\n\n    plt.figure(figsize=(10, 7))\n    barras = plt.bar(categorias, valores, color=[\'#0E2E98\',\'#16D3F0\'])\n    \n    # Adicionando as porcentagens no topo das barras\n    for barra, porcentagem in zip(barras, porcentagens):\n        altura = barra.get_height()\n        plt.text(barra.get_x() + barra.get_width() / 2, altura, f\'{porcentagem:.1f}%\', \n                 ha=\'center\', va=\'bottom\', fontsize=12)\n\n    # Adicionando título e rótulos\n    plt.title(\'Quantidade e Porcentagem de Inadimplentes e Adimplentes\')\n    plt.xlabel(\'Status\')\n    plt.ylabel(\'Quantidade\')\n    plt.show()\n\n    # Criando uma nova tabela Orange com os resultados\n    domain = Orange.data.Domain([Orange.data.DiscreteVariable("Status", values=["Inadimplentes", "Adimplentes"]),\n                                 Orange.data.ContinuousVariable("Quantidade")])\n    \n    resultado = Orange.data.Table.from_list(domain, [\n        ["Inadimplentes", inadimplentes],\n        ["Adimplentes", adimplentes]\n    ])\n\n    return resultado\n\n# Exemplo de uso (assumindo que \'in_data\' é sua tabela Orange de entrada)\nif in_data is not None:\n    resultado = criar_grafico_inadimplencia(in_data)\n    print(resultado)\nelse:\n    print("Nenhum dado de entrada fornecido.")\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xac\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="7" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 3, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xf8\x7f\xff\xff\xff\xca\x00\x00\x00\x00\x00\x00\x03\xd0\xff\xff\xf8}\xff\xff\xff\xd1\xff\xff\xfd{\x00\x00\x02o\x00\x00\x00\x01\x02\x00\x00\x00\x07\x80\xff\xff\xf8\x80\xff\xff\xff\xdf\xff\xff\xff\xff\x00\x00\x03\xcf', 'scriptLibrary': [{'name': 'Table from numpy', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': 'import matplotlib.pyplot as plt\nimport pandas as pd\nfrom Orange.data import Table, Domain, ContinuousVariable\n\n# Convertendo os dados de entrada do Orange para um DataFrame do Pandas\ndata = pd.DataFrame(in_data.X, columns=[var.name for var in in_data.domain.attributes])\ntarget = pd.Series(in_data.Y, name=in_data.domain.class_var.name)\n\n# Verifique se os dados possuem as variáveis "grade", "Good", "Bad" e "WoE"\nif \'grade\' in data.columns and \'WoE\' in data.columns and \'Good\' in data.columns and \'Bad\' in data.columns:\n    \n    # Definir as categorias (grade), WoE e as taxas de inadimplência (Good e Bad)\n    categories = data[\'grade\']\n    woe = data[\'WoE\'].astype(\'float\')\n    good_row = data[\'Good\'].astype(\'float\')  # Substituir pela sua variável de bons pagadores\n    bad_row = data[\'Bad\'].astype(\'float\')  # Substituir pela sua variável de maus pagadores\n\n    # Criação da figura com subplots\n    fig, ax = plt.subplots(1, 2, figsize=(12, 6))\n\n    # Gráfico de barras empilhadas para taxa de inadimplência\n    bad_bars = ax[0].barh(y=categories, width=bad_row, color=\'#8d0801\', label=\'Bad\')\n    good_bars = ax[0].barh(y=categories, width=good_row, left=bad_row, color=\'#8a817c\', label=\'Good\')\n\n    # Anotando valores percentuais dentro de cada barra\n    for good_bar, bad_bar, good_rate, bad_rate in zip(good_bars, bad_bars, good_row, bad_row):\n        x_position_good = good_bar.get_x() + good_bar.get_width() / 2\n        x_position_bad = bad_bar.get_x() + bad_bar.get_width() / 2  \n        y_position = good_bar.get_y() + good_bar.get_height() / 2\n\n        ax[0].text(x_position_good, y_position, f\'{good_rate:.2f}%\', ha=\'center\', va=\'center\', color=\'white\', fontsize=10)\n        ax[0].text(x_position_bad, y_position, f\'{bad_rate:.2f}%\', ha=\'center\', va=\'center\', color=\'white\', fontsize=10)\n\n    ax[0].set_title(\'Default rate by Grade\')\n    ax[0].invert_yaxis()\n    ax[0].grid(False)\n    ax[0].legend(bbox_to_anchor=(-0.2, 1.1), loc=\'upper left\')\n\n    # Gráfico de linha para WoE\n    ax[1].plot(categories, woe, marker=\'o\', linestyle=\'--\')\n    ax[1].set_title(\'WoE by Grade\')\n    ax[1].set_xticks(categories.unique())\n    \n    plt.tight_layout()\n    plt.show()\n\n# Convertendo o DataFrame de volta para uma tabela do Orange\ndomain = Domain([ContinuousVariable(col) for col in data.columns])\nout_data = Table.from_numpy(domain, data.to_numpy())\n', 'filename': None}], 'scriptText': 'import Orange \nimport matplotlib.pyplot as plt\n\n# Função para criar gráfico de barras com porcentagens\ndef criar_grafico_barras(data, variavel):\n    # Verifica se a variável existe no dataset\n    if variavel not in data.domain:\n        print(f"Variável \'{variavel}\' não encontrada no dataset.")\n        return\n    \n    # Conta as ocorrências de cada valor da variável categórica\n    categorias = {}\n    for d in data:\n        valor = d[variavel].value\n        categorias[valor] = categorias.get(valor, 0) + 1\n    \n    # Converte o dicionário em listas e ordena do maior para o menor\n    categorias_ordenadas = sorted(categorias.items(), key=lambda x: x[1], reverse=True)\n    nomes_categorias, valores = zip(*categorias_ordenadas)\n    \n    total = sum(valores)\n    porcentagens = [(v / total) * 100 for v in valores]\n\n    # Definindo cores\n    azul_claro = \'#A8C6ED\'  # Azul claro para todas as barras\n    azul_escuro = \'#0E2E98\'  # Azul escuro para a barra mais alta\n\n    # Criando o gráfico de barras\n    plt.figure(figsize=(10, 7))\n    barras = plt.bar(nomes_categorias, valores, color=azul_claro)\n\n    # Destacando a barra mais alta\n    max_valor_index = valores.index(max(valores))\n    barras[max_valor_index].set_color(azul_escuro)\n\n    # Adicionando as porcentagens no topo das barras\n    for barra, porcentagem in zip(barras, porcentagens):\n        altura = barra.get_height()\n        plt.text(barra.get_x() + barra.get_width() / 2, altura, f\'{porcentagem:.1f}%\', \n                 ha=\'center\', va=\'bottom\', fontsize=12)\n\n    # Adicionando título e rótulos\n    plt.title(f\'Quantidade e Porcentagem por "{variavel}"\')\n    plt.xlabel(variavel)\n    plt.ylabel(\'Quantidade\')\n    plt.xticks(rotation=45)  # Gira os rótulos para melhor legibilidade\n    plt.grid(axis=\'y\', linestyle=\'--\', alpha=0.7)  # Adiciona uma grade no eixo Y\n    plt.show()\n\n    # Criando uma nova tabela Orange com os resultados\n    domain = Orange.data.Domain([Orange.data.DiscreteVariable("Categoria", values=list(nomes_categorias)),\n                                 Orange.data.ContinuousVariable("Quantidade")])\n    \n    resultado = Orange.data.Table.from_list(domain, [\n        [categoria, valor] for categoria, valor in zip(nomes_categorias, valores)\n    ])\n\n    return resultado\n\n# Exemplo de uso (assumindo que \'in_data\' é sua tabela Orange de entrada)\nif in_data is not None:\n    # Substitua \'purpose\' por qualquer outra variável categórica do dataset\n    resultado = criar_grafico_barras(in_data, \'purpose\')\n    print(resultado)\nelse:\n    print("Nenhum dado de entrada fornecido.")\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xac\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="8" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 3, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xf8\x7f\xff\xff\xff\xca\x00\x00\x00\x00\x00\x00\x03\xd0\xff\xff\xf8\x80\xff\xff\xff\xdf\xff\xff\xff\xff\x00\x00\x03\xcf\x00\x00\x00\x01\x02\x00\x00\x00\x07\x80\xff\xff\xf8\x80\xff\xff\xff\xdf\xff\xff\xff\xff\x00\x00\x03\xcf', 'scriptLibrary': [{'name': 'Table from numpy', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': 'import matplotlib.pyplot as plt\nimport pandas as pd\nfrom Orange.data import Table, Domain, ContinuousVariable\n\n# Convertendo os dados de entrada do Orange para um DataFrame do Pandas\ndata = pd.DataFrame(in_data.X, columns=[var.name for var in in_data.domain.attributes])\ntarget = pd.Series(in_data.Y, name=in_data.domain.class_var.name)\n\n# Verifique se os dados possuem as variáveis "grade", "Good", "Bad" e "WoE"\nif \'grade\' in data.columns and \'WoE\' in data.columns and \'Good\' in data.columns and \'Bad\' in data.columns:\n    \n    # Definir as categorias (grade), WoE e as taxas de inadimplência (Good e Bad)\n    categories = data[\'grade\']\n    woe = data[\'WoE\'].astype(\'float\')\n    good_row = data[\'Good\'].astype(\'float\')  # Substituir pela sua variável de bons pagadores\n    bad_row = data[\'Bad\'].astype(\'float\')  # Substituir pela sua variável de maus pagadores\n\n    # Criação da figura com subplots\n    fig, ax = plt.subplots(1, 2, figsize=(12, 6))\n\n    # Gráfico de barras empilhadas para taxa de inadimplência\n    bad_bars = ax[0].barh(y=categories, width=bad_row, color=\'#8d0801\', label=\'Bad\')\n    good_bars = ax[0].barh(y=categories, width=good_row, left=bad_row, color=\'#8a817c\', label=\'Good\')\n\n    # Anotando valores percentuais dentro de cada barra\n    for good_bar, bad_bar, good_rate, bad_rate in zip(good_bars, bad_bars, good_row, bad_row):\n        x_position_good = good_bar.get_x() + good_bar.get_width() / 2\n        x_position_bad = bad_bar.get_x() + bad_bar.get_width() / 2  \n        y_position = good_bar.get_y() + good_bar.get_height() / 2\n\n        ax[0].text(x_position_good, y_position, f\'{good_rate:.2f}%\', ha=\'center\', va=\'center\', color=\'white\', fontsize=10)\n        ax[0].text(x_position_bad, y_position, f\'{bad_rate:.2f}%\', ha=\'center\', va=\'center\', color=\'white\', fontsize=10)\n\n    ax[0].set_title(\'Default rate by Grade\')\n    ax[0].invert_yaxis()\n    ax[0].grid(False)\n    ax[0].legend(bbox_to_anchor=(-0.2, 1.1), loc=\'upper left\')\n\n    # Gráfico de linha para WoE\n    ax[1].plot(categories, woe, marker=\'o\', linestyle=\'--\')\n    ax[1].set_title(\'WoE by Grade\')\n    ax[1].set_xticks(categories.unique())\n    \n    plt.tight_layout()\n    plt.show()\n\n# Convertendo o DataFrame de volta para uma tabela do Orange\ndomain = Domain([ContinuousVariable(col) for col in data.columns])\nout_data = Table.from_numpy(domain, data.to_numpy())\n', 'filename': None}], 'scriptText': 'import matplotlib.pyplot as plt\nimport pandas as pd\nimport numpy as np\nfrom Orange.data import Table, Domain, ContinuousVariable, DiscreteVariable\n\ndef plot_woe_bad_rate_by_variable(in_data, target_variable, outcome_variable=None, figsize=(20, 12)):\n    try:\n        # Get the target variable from the domain\n        target_var = in_data.domain[target_variable]\n        if not isinstance(target_var, DiscreteVariable):\n            raise ValueError(f"The \'{target_variable}\' variable must be a DiscreteVariable.")\n        \n        # Create a dictionary to map numeric values to target names\n        target_mapping = {i: value for i, value in enumerate(target_var.values)}\n        \n        # Print target mapping for verification\n        print(f"{target_variable} Mapping:")\n        for key, value in target_mapping.items():\n            print(f"{key}: {value}")\n        \n        # Convert Orange data to pandas DataFrame\n        data = pd.DataFrame({\n            var.name: in_data.get_column(var.name)\n            for var in in_data.domain.variables\n        })\n        \n        # Print the first few rows of the DataFrame for verification\n        print("\\nFirst few rows of the DataFrame:")\n        print(data.head())\n        \n        # If outcome_variable is not specified or not in columns, use the last column\n        if outcome_variable is None or outcome_variable not in data.columns:\n            outcome_variable = data.columns[-1]\n        \n        print(f"\\nOutcome variable: {outcome_variable}")\n        \n        # Create \'Good\' and \'Bad\' columns based on the outcome variable\n        median = data[outcome_variable].median()\n        data[\'Good\'] = (data[outcome_variable] &gt;= median).astype(int)\n        data[\'Bad\'] = (data[outcome_variable] &lt; median).astype(int)\n        \n        # Calculate WoE and other metrics\n        grouped = data.groupby(target_variable).agg({\n            \'Good\': \'sum\',\n            \'Bad\': \'sum\'\n        }).reset_index()\n        \n        grouped[\'Total\'] = grouped[\'Good\'] + grouped[\'Bad\']\n        grouped[\'GoodRate\'] = grouped[\'Good\'] / grouped[\'Total\']\n        grouped[\'BadRate\'] = grouped[\'Bad\'] / grouped[\'Total\']\n        \n        total_good = grouped[\'Good\'].sum()\n        total_bad = grouped[\'Bad\'].sum()\n        \n        grouped[\'WoE\'] = np.log((grouped[\'GoodRate\'] / (total_good / grouped[\'Total\'].sum())) / \n                                (grouped[\'BadRate\'] / (total_bad / grouped[\'Total\'].sum())))\n        \n        # Map numeric targets to their descriptions\n        grouped[\'target_description\'] = grouped[target_variable].map(target_mapping)\n        \n        # Print grouped data for verification\n        print("\\nGrouped data:")\n        print(grouped)\n        \n        # Sort by WoE for better visualization\n        grouped = grouped.sort_values(\'WoE\')\n        \n        targets = grouped[\'target_description\']\n        woe = grouped[\'WoE\']\n        good_rate = grouped[\'GoodRate\'] * 100\n        bad_rate = grouped[\'BadRate\'] * 100\n        \n        # Create the plot\n        fig, (ax1, ax2) = plt.subplots(1, 2, figsize=figsize)\n        \n        # Stacked bar chart\n        ax1.barh(targets, bad_rate, label=\'Bad\', color=\'#0E2E98\')\n        ax1.barh(targets, good_rate, left=bad_rate, label=\'Good\', color=\'#16D3F0\')\n        \n        ax1.set_title(f\'Good/Bad Rate by {target_variable.capitalize()}\')\n        ax1.set_xlabel(\'Percentage\')\n        ax1.set_ylabel(target_variable.capitalize())\n        ax1.legend(loc=\'lower right\')\n        \n        # Add percentage labels\n        for i, (bad, good) in enumerate(zip(bad_rate, good_rate)):\n            ax1.text(bad/2, i, f\'{bad:.1f}%\', va=\'center\', ha=\'center\')\n            ax1.text(bad + good/2, i, f\'{good:.1f}%\', va=\'center\', ha=\'center\')\n        \n        # WoE chart\n        ax2.plot(woe, targets, marker=\'o\')\n        ax2.set_title(f\'Weight of Evidence (WoE) by {target_variable.capitalize()}\')\n        ax2.set_xlabel(\'WoE\')\n        ax2.set_ylabel(target_variable.capitalize())\n        ax2.axvline(x=0, color=\'r\', linestyle=\'--\')\n        \n        # Add WoE values as text\n        for i, (target, w) in enumerate(zip(targets, woe)):\n            ax2.text(w, i, f\'{w:.2f}\', va=\'center\', ha=\'left\' if w &gt;= 0 else \'right\')\n        \n        plt.tight_layout()\n        plt.show()\n\n        # Create a new Orange table with the plot data\n        domain = Domain([DiscreteVariable(target_variable, values=targets.tolist()),\n                         ContinuousVariable("WoE"),\n                         ContinuousVariable("Good_Rate"),\n                         ContinuousVariable("Bad_Rate")])\n        out_data = Table.from_numpy(domain, \n                                    X=np.column_stack((\n                                        grouped[target_variable],  # Use original numeric values\n                                        woe,\n                                        good_rate,\n                                        bad_rate\n                                    )))\n        return out_data\n    \n    except Exception as e:\n        print(f"Error creating the plot: {str(e)}")\n        return None\n\n# Example usage of the function\nif in_data is not None:\n     out_data = plot_woe_bad_rate_by_variable(in_data, target_variable=\'emp_length\', outcome_variable=None, figsize=(20, 12))\n# else:\n#     print("No input data provided.")\n#     out_data = None', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xac\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="9" format="pickle">gASVZBAAAAAAAAB9lCiMC2F1dG9fY29tbWl0lIiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBNzYXZl
ZFdpZGdldEdlb21ldHJ5lENCAdnQywADAAD/////////+QAABQAAAAKg///88AAAAHwAAARwAAAD
XAAAAAACAAAABQAAAAAAAAAAFwAABP8AAAKflIwHc29ydGluZ5RLAIwDc2lwlIwOX3VucGlja2xl
X2VudW2Uk5SMDFB5UXQ1LlF0Q29yZZSMCVNvcnRPcmRlcpRLAIeUUpSGlIwLX192ZXJzaW9uX1+U
SwKMEGNvbnRleHRfc2V0dGluZ3OUXZQojBVvcmFuZ2V3aWRnZXQuc2V0dGluZ3OUjAdDb250ZXh0
lJOUKYGUfZQojAZ2YWx1ZXOUfZQojAljb2xvcl92YXKUjAhnb29kX2JhZJRLZYaUjA1zZWxlY3Rl
ZF92YXJzlF2UjA5pbnFfbGFzdF82bXRoc5RLZoaUYUr9////hpRoDksCdYwKYXR0cmlidXRlc5R9
lCiMCUZlYXR1cmUgMZRLAowJbG9hbl9hbW50lEsCjAtmdW5kZWRfYW1udJRLAowEdGVybZRLAYwI
aW50X3JhdGWUSwKMC2luc3RhbGxtZW50lEsCjAVncmFkZZRLAYwJc3ViX2dyYWRllEsBjAplbXBf
bGVuZ3RolEsBjA5ob21lX293bmVyc2hpcJRLAYwKYW5udWFsX2luY5RLAowTdmVyaWZpY2F0aW9u
X3N0YXR1c5RLAYwHaXNzdWVfZJRLAYwLbG9hbl9zdGF0dXOUSwGMB3B1cnBvc2WUSwGMCmFkZHJf
c3RhdGWUSwGMA2R0aZRLAowLZGVsaW5xXzJ5cnOUSwJoHUsCjBZtdGhzX3NpbmNlX2xhc3RfZGVs
aW5xlEsCjBZtdGhzX3NpbmNlX2xhc3RfcmVjb3JklEsCjAhvcGVuX2FjY5RLAowHcHViX3JlY5RL
AowJcmV2b2xfYmFslEsCjApyZXZvbF91dGlslEsCjAl0b3RhbF9hY2OUSwKME2luaXRpYWxfbGlz
dF9zdGF0dXOUSwGMCW91dF9wcm5jcJRLAowLdG90YWxfcHltbnSUSwKMD3RvdGFsX3JlY19wcm5j
cJRLAowNdG90YWxfcmVjX2ludJRLAowSdG90YWxfcmVjX2xhdGVfZmVllEsCjApyZWNvdmVyaWVz
lEsCjBdjb2xsZWN0aW9uX3JlY292ZXJ5X2ZlZZRLAowMbGFzdF9weW1udF9klEsBjA9sYXN0X3B5
bW50X2FtbnSUSwKMGmNvbGxlY3Rpb25zXzEyX210aHNfZXhfbWVklEsBjBttdGhzX3NpbmNlX2xh
c3RfbWFqb3JfZGVyb2eUSwKMEGFubnVhbF9pbmNfam9pbnSUSwKMCWR0aV9qb2ludJRLAowZdmVy
aWZpY2F0aW9uX3N0YXR1c19qb2ludJRLAowOYWNjX25vd19kZWxpbnGUSwGMDHRvdF9jb2xsX2Ft
dJRLAowLdG90X2N1cl9iYWyUSwKMC29wZW5fYWNjXzZtlEsCjApvcGVuX2lsXzZtlEsCjAtvcGVu
X2lsXzEybZRLAowLb3Blbl9pbF8yNG2USwKMEm10aHNfc2luY2VfcmNudF9pbJRLAowMdG90YWxf
YmFsX2lslEsCjAdpbF91dGlslEsCjAtvcGVuX3J2XzEybZRLAowLb3Blbl9ydl8yNG2USwKMCm1h
eF9iYWxfYmOUSwKMCGFsbF91dGlslEsCjBB0b3RhbF9yZXZfaGlfbGltlEsCjAZpbnFfZmmUSwKM
C3RvdGFsX2N1X3RslEsCjAxpbnFfbGFzdF8xMm2USwKMDmVtcF9sZW5ndGhfaW50lEsCjBVlYXJs
aWVzdF9jcl9saW5lX2RhdGWUSwSMG210aHNfc2luY2VfZWFybGllc3RfY3JfbGluZZRLAowIdGVy
bV9pbnSUSwKMDGlzc3VlX2RfZGF0ZZRLBIwSbXRoc19zaW5jZV9pc3N1ZV9klEsCaBlLAXWMBW1l
dGFzlH2UKIwEZGVzY5RLA4wQZWFybGllc3RfY3JfbGluZZRLA3V1YmgTKYGUfZQoaBZ9lCiMCWNv
bG9yX3ZhcpSMCGdvb2RfYmFklEtlhpSMDXNlbGVjdGVkX3ZhcnOUXZSMC2luc3RhbGxtZW50lEtm
hpRhSv3///+GlGgOSwJ1aCB9lCiMCUZlYXR1cmUgMZRLAowKVW5uYW1lZDogMJRLAowCaWSUSwKM
CW1lbWJlcl9pZJRLAowJbG9hbl9hbW50lEsCjAtmdW5kZWRfYW1udJRLAowPZnVuZGVkX2FtbnRf
aW52lEsCjAR0ZXJtlEsBjAhpbnRfcmF0ZZRLAmhuSwKMBWdyYWRllEsBjAlzdWJfZ3JhZGWUSwGM
CmVtcF9sZW5ndGiUSwGMDmhvbWVfb3duZXJzaGlwlEsBjAphbm51YWxfaW5jlEsCjBN2ZXJpZmlj
YXRpb25fc3RhdHVzlEsBjAdpc3N1ZV9klEsBjAtsb2FuX3N0YXR1c5RLAYwKcHltbnRfcGxhbpRL
AYwHcHVycG9zZZRLAYwKYWRkcl9zdGF0ZZRLAYwDZHRplEsCjAtkZWxpbnFfMnlyc5RLAowOaW5x
X2xhc3RfNm10aHOUSwKMFm10aHNfc2luY2VfbGFzdF9kZWxpbnGUSwKMFm10aHNfc2luY2VfbGFz
dF9yZWNvcmSUSwKMCG9wZW5fYWNjlEsCjAdwdWJfcmVjlEsCjAlyZXZvbF9iYWyUSwKMCnJldm9s
X3V0aWyUSwKMCXRvdGFsX2FjY5RLAowTaW5pdGlhbF9saXN0X3N0YXR1c5RLAYwJb3V0X3BybmNw
lEsCjA1vdXRfcHJuY3BfaW52lEsCjAt0b3RhbF9weW1udJRLAowPdG90YWxfcHltbnRfaW52lEsC
jA90b3RhbF9yZWNfcHJuY3CUSwKMDXRvdGFsX3JlY19pbnSUSwKMEnRvdGFsX3JlY19sYXRlX2Zl
ZZRLAowKcmVjb3Zlcmllc5RLAowXY29sbGVjdGlvbl9yZWNvdmVyeV9mZWWUSwKMDGxhc3RfcHlt
bnRfZJRLAYwPbGFzdF9weW1udF9hbW50lEsCjAxuZXh0X3B5bW50X2SUSwGMEmxhc3RfY3JlZGl0
X3B1bGxfZJRLAYwaY29sbGVjdGlvbnNfMTJfbXRoc19leF9tZWSUSwGMG210aHNfc2luY2VfbGFz
dF9tYWpvcl9kZXJvZ5RLAowLcG9saWN5X2NvZGWUSwGMEGFwcGxpY2F0aW9uX3R5cGWUSwGMEGFu
bnVhbF9pbmNfam9pbnSUSwKMCWR0aV9qb2ludJRLAowZdmVyaWZpY2F0aW9uX3N0YXR1c19qb2lu
dJRLAowOYWNjX25vd19kZWxpbnGUSwGMDHRvdF9jb2xsX2FtdJRLAowLdG90X2N1cl9iYWyUSwKM
C29wZW5fYWNjXzZtlEsCjApvcGVuX2lsXzZtlEsCjAtvcGVuX2lsXzEybZRLAowLb3Blbl9pbF8y
NG2USwKMEm10aHNfc2luY2VfcmNudF9pbJRLAowMdG90YWxfYmFsX2lslEsCjAdpbF91dGlslEsC
jAtvcGVuX3J2XzEybZRLAowLb3Blbl9ydl8yNG2USwKMCm1heF9iYWxfYmOUSwKMCGFsbF91dGls
lEsCjBB0b3RhbF9yZXZfaGlfbGltlEsCjAZpbnFfZmmUSwKMC3RvdGFsX2N1X3RslEsCjAxpbnFf
bGFzdF8xMm2USwKMDmVtcF9sZW5ndGhfaW50lEsCjBVlYXJsaWVzdF9jcl9saW5lX2RhdGWUSwSM
G210aHNfc2luY2VfZWFybGllc3RfY3JfbGluZZRLAowIdGVybV9pbnSUSwKMDGlzc3VlX2RfZGF0
ZZRLBIwSbXRoc19zaW5jZV9pc3N1ZV9klEsCaGpLAXVoYn2UKIwJZW1wX3RpdGxllEsDjAN1cmyU
SwOMBGRlc2OUSwOMBXRpdGxllEsDjAh6aXBfY29kZZRLA4wQZWFybGllc3RfY3JfbGluZZRLA3V1
YmgTKYGUfZQoaBZ9lCiMCWNvbG9yX3ZhcpSMCGdvb2RfYmFklEtlhpSMDXNlbGVjdGVkX3ZhcnOU
XZSMC2luc3RhbGxtZW50lEtmhpRhSv3///+GlGgOSwJ1aCB9lCiMCWxvYW5fYW1udJRLAowLZnVu
ZGVkX2FtbnSUSwKMBHRlcm2USwGMCGludF9yYXRllEsCaMxLAowFZ3JhZGWUSwGMCXN1Yl9ncmFk
ZZRLAYwKZW1wX2xlbmd0aJRLAYwOaG9tZV9vd25lcnNoaXCUSwGMCmFubnVhbF9pbmOUSwKME3Zl
cmlmaWNhdGlvbl9zdGF0dXOUSwGMB2lzc3VlX2SUSwGMC2xvYW5fc3RhdHVzlEsBjAdwdXJwb3Nl
lEsBjAphZGRyX3N0YXRllEsBjANkdGmUSwKMC2RlbGlucV8yeXJzlEsCjA5pbnFfbGFzdF82bXRo
c5RLAowWbXRoc19zaW5jZV9sYXN0X2RlbGlucZRLAowWbXRoc19zaW5jZV9sYXN0X3JlY29yZJRL
AowIb3Blbl9hY2OUSwKMB3B1Yl9yZWOUSwKMCXJldm9sX2JhbJRLAowKcmV2b2xfdXRpbJRLAowJ
dG90YWxfYWNjlEsCjBNpbml0aWFsX2xpc3Rfc3RhdHVzlEsBjAlvdXRfcHJuY3CUSwKMC3RvdGFs
X3B5bW50lEsCjA90b3RhbF9yZWNfcHJuY3CUSwKMDXRvdGFsX3JlY19pbnSUSwKMEnRvdGFsX3Jl
Y19sYXRlX2ZlZZRLAowKcmVjb3Zlcmllc5RLAowXY29sbGVjdGlvbl9yZWNvdmVyeV9mZWWUSwKM
DGxhc3RfcHltbnRfZJRLAYwPbGFzdF9weW1udF9hbW50lEsCjBpjb2xsZWN0aW9uc18xMl9tdGhz
X2V4X21lZJRLAYwbbXRoc19zaW5jZV9sYXN0X21ham9yX2Rlcm9nlEsCjBBhbm51YWxfaW5jX2pv
aW50lEsCjAlkdGlfam9pbnSUSwKMGXZlcmlmaWNhdGlvbl9zdGF0dXNfam9pbnSUSwKMDmFjY19u
b3dfZGVsaW5xlEsBjAx0b3RfY29sbF9hbXSUSwKMC3RvdF9jdXJfYmFslEsCjAtvcGVuX2FjY182
bZRLAowKb3Blbl9pbF82bZRLAowLb3Blbl9pbF8xMm2USwKMC29wZW5faWxfMjRtlEsCjBJtdGhz
X3NpbmNlX3JjbnRfaWyUSwKMDHRvdGFsX2JhbF9pbJRLAowHaWxfdXRpbJRLAowLb3Blbl9ydl8x
Mm2USwKMC29wZW5fcnZfMjRtlEsCjAptYXhfYmFsX2JjlEsCjAhhbGxfdXRpbJRLAowQdG90YWxf
cmV2X2hpX2xpbZRLAowGaW5xX2ZplEsCjAt0b3RhbF9jdV90bJRLAowMaW5xX2xhc3RfMTJtlEsC
aMhLAXVoYn2UKIwEZGVzY5RLA4wQZWFybGllc3RfY3JfbGluZZRLA3V1YmV1Lg==
</properties>
		<properties node_id="10" format="pickle">gASVNkgAAAAAAAB9lCiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjAxyZWNlbnRfcGF0aHOUXZQojB5v
cmFuZ2V3aWRnZXQudXRpbHMuZmlsZWRpYWxvZ3OUjApSZWNlbnRQYXRolJOUKYGUfZQojAdhYnNw
YXRolIxHQzovVXNlcnMvR3Jhw7puYSBNb3Rvcy9Eb2N1bWVudHMvcmlzay1jcmVkaXQvbm90ZWJv
b2tzL3Jpc2tfdHJhdGFkby5jc3aUjAZwcmVmaXiUTowHcmVscGF0aJROjAV0aXRsZZSMAJSMBXNo
ZWV0lGgOjAtmaWxlX2Zvcm1hdJROdWJoBimBlH2UKGgJjDUvaG9tZS9ub2lzZS9Eb2N1bWVudG9z
L3Jpc2stY3JlZGl0L25vdGVib29rcy9yaXNrLmNzdpRoC05oDE5oDWgOaA9oDmgQTnViaAYpgZR9
lChoCYw/QzovVXNlcnMvR3Jhw7puYSBNb3Rvcy9Eb2N1bWVudHMvcmlzay1jcmVkaXQvbm90ZWJv
b2tzL3Jpc2suY3N2lGgLTmgMTmgNaA5oD2gOaBBOdWJoBimBlH2UKGgJjGFDOi9VbmliYWxzYXMv
VHJhYmFsaG9zLzIwMjQuMi9JbnRlbGlnZW5jaWEgZG9zIG5lZ29jaW9zL1RFRCAxL2RhZG9zL3Rh
YmVsYV9jdXN0b19kZV92aWRhXzIwMTQuY3N2lGgLTmgMTmgNaA5oD2gOaBBOdWJoBimBlH2UKGgJ
jGFDOi9VbmliYWxzYXMvVHJhYmFsaG9zLzIwMjQuMi9JbnRlbGlnZW5jaWEgZG9zIG5lZ29jaW9z
L1RFRCAxL2RhZG9zL3RhYmVsYV9jdXN0b19kZV92aWRhXzIwMTguY3N2lGgLTmgMTmgNaA5oD2gO
aBBOdWJoBimBlH2UKGgJjGFDOi9VbmliYWxzYXMvVHJhYmFsaG9zLzIwMjQuMi9JbnRlbGlnZW5j
aWEgZG9zIG5lZ29jaW9zL1RFRCAxL2RhZG9zL3RhYmVsYV9jdXN0b19kZV92aWRhXzIwMjEuY3N2
lGgLTmgMTmgNaA5oD2gOaBBOdWJoBimBlH2UKGgJjEFDOi9Vc2Vycy9NcGVkci9Eb3dubG9hZHMv
Q29zdF9vZl9MaXZpbmdfSW5kZXhfYnlfQ291bnRyeV8yMDI0LmNzdpRoC4wHYmFzZWRpcpRoDIwo
Q29zdF9vZl9MaXZpbmdfSW5kZXhfYnlfQ291bnRyeV8yMDI0LmNzdpRoDWgOaA9oDmgQTnViaAYp
gZR9lChoCYxfQzovVXNlcnMvR3Jhw7puYSBNb3Rvcy9BcHBEYXRhL0xvY2FsL1Byb2dyYW1zL09y
YW5nZS9MaWIvc2l0ZS1wYWNrYWdlcy9PcmFuZ2UvZGF0YXNldHMvaXJpcy50YWKUaAuMD3NhbXBs
ZS1kYXRhc2V0c5RoDIwIaXJpcy50YWKUaA1oDmgPaA5oEE51YmgGKYGUfZQoaAmMYkM6L1VzZXJz
L0dyYcO6bmEgTW90b3MvQXBwRGF0YS9Mb2NhbC9Qcm9ncmFtcy9PcmFuZ2UvTGliL3NpdGUtcGFj
a2FnZXMvT3JhbmdlL2RhdGFzZXRzL3RpdGFuaWMudGFilGgLaChoDIwLdGl0YW5pYy50YWKUaA1o
DmgPaA5oEE51YmgGKYGUfZQoaAmMYkM6L1VzZXJzL0dyYcO6bmEgTW90b3MvQXBwRGF0YS9Mb2Nh
bC9Qcm9ncmFtcy9PcmFuZ2UvTGliL3NpdGUtcGFja2FnZXMvT3JhbmdlL2RhdGFzZXRzL2hvdXNp
bmcudGFilGgLaChoDIwLaG91c2luZy50YWKUaA1oDmgPaA5oEE51YmgGKYGUfZQoaAmMaEM6L1Vz
ZXJzL0dyYcO6bmEgTW90b3MvQXBwRGF0YS9Mb2NhbC9Qcm9ncmFtcy9PcmFuZ2UvTGliL3NpdGUt
cGFja2FnZXMvT3JhbmdlL2RhdGFzZXRzL2hlYXJ0X2Rpc2Vhc2UudGFilGgLaChoDIwRaGVhcnRf
ZGlzZWFzZS50YWKUaA1oDmgPaA5oEE51YmgGKYGUfZQoaAmMaUM6L1VzZXJzL0dyYcO6bmEgTW90
b3MvQXBwRGF0YS9Mb2NhbC9Qcm9ncmFtcy9PcmFuZ2UvTGliL3NpdGUtcGFja2FnZXMvT3Jhbmdl
L2RhdGFzZXRzL2Jyb3duLXNlbGVjdGVkLnRhYpRoC2goaAyMEmJyb3duLXNlbGVjdGVkLnRhYpRo
DWgOaA9oDmgQTnViaAYpgZR9lChoCYxeQzovVXNlcnMvR3Jhw7puYSBNb3Rvcy9BcHBEYXRhL0xv
Y2FsL1Byb2dyYW1zL09yYW5nZS9MaWIvc2l0ZS1wYWNrYWdlcy9PcmFuZ2UvZGF0YXNldHMvem9v
LnRhYpRoC2goaAyMB3pvby50YWKUaA1oDmgPaA5oEE51YmWMC3JlY2VudF91cmxzlF2UjBNzYXZl
ZFdpZGdldEdlb21ldHJ5lENCAdnQywADAAAAAAFAAAAAYAAAA8EAAAKDAAABQQAAAH4AAAPAAAAC
ggAAAAAAAAAABQAAAAFBAAAAfgAAA8AAAAKClIwLc2hlZXRfbmFtZXOUfZSMBnNvdXJjZZRLAIwD
dXJslGgOjA1kb21haW5fZWRpdG9ylH2UjAtfX3ZlcnNpb25fX5RLAYwQY29udGV4dF9zZXR0aW5n
c5RdlCiMFW9yYW5nZXdpZGdldC5zZXR0aW5nc5SMB0NvbnRleHSUk5QpgZR9lCiMBnZhbHVlc5R9
lCiMCXZhcmlhYmxlc5RdlGhGfZRoUl2UKF2UKIwJRmVhdHVyZSAxlIwUT3JhbmdlLmRhdGEudmFy
aWFibGWUjBJDb250aW51b3VzVmFyaWFibGWUk5RLAGgOiGVdlCiMCWxvYW5fYW1udJRoWksAaA6I
ZV2UKIwLZnVuZGVkX2FtbnSUaFpLAGgOiGVdlCiMBHRlcm2UaFiMEERpc2NyZXRlVmFyaWFibGWU
k5RLAIwUMzYgbW9udGhzLCA2MCBtb250aHOUiWVdlCiMCGludF9yYXRllGhaSwBoDohlXZQojAtp
bnN0YWxsbWVudJRoWksAaA6IZV2UKIwFZ3JhZGWUaGJLAIwTQSwgQiwgQywgRCwgRSwgRiwgR5SJ
ZV2UKIwJc3ViX2dyYWRllGhiSwCMU0ExLCBBMiwgQTMsIEE0LCBBNSwgQjEsIEIyLCBCMywgQjQs
IEI1LCBDMSwgQzIsIEMzLCBDNCwgQzUsIEQxLCBEMiwgRDMsIEQ0LCBENSwgLi4ulIllXZQojApl
bXBfbGVuZ3RolGhiSwCMYzEgeWVhciwgMiB5ZWFycywgMyB5ZWFycywgNCB5ZWFycywgNSB5ZWFy
cywgNiB5ZWFycywgNyB5ZWFycywgOCB5ZWFycywgOSB5ZWFycywgMTArIHllYXJzLCA8IDEgeWVh
cpSJZV2UKIwOaG9tZV9vd25lcnNoaXCUaGJLAIwTTU9SVEdBR0UsIE9XTiwgUkVOVJSJZV2UKIwK
YW5udWFsX2luY5RoWksAaA6IZV2UKIwTdmVyaWZpY2F0aW9uX3N0YXR1c5RoYksAjCdOb3QgVmVy
aWZpZWQsIFNvdXJjZSBWZXJpZmllZCwgVmVyaWZpZWSUiWVdlCiMB2lzc3VlX2SUaGJLAIwWRGVj
LTExLCBOb3YtMTEsIE9jdC0xMZSJZV2UKIwLbG9hbl9zdGF0dXOUaGJLAIxhQ2hhcmdlZCBPZmYs
IEN1cnJlbnQsIERlZmF1bHQsIEZ1bGx5IFBhaWQsIEluIEdyYWNlIFBlcmlvZCwgTGF0ZSAoMTYt
MzAgZGF5cyksIExhdGUgKDMxLTEyMCBkYXlzKZSJZV2UKIwHcHVycG9zZZRoYksAjJpjYXIsIGNy
ZWRpdF9jYXJkLCBkZWJ0X2NvbnNvbGlkYXRpb24sIGhvbWVfaW1wcm92ZW1lbnQsIGhvdXNlLCBt
YWpvcl9wdXJjaGFzZSwgbWVkaWNhbCwgbW92aW5nLCBvdGhlciwgcmVuZXdhYmxlX2VuZXJneSwg
c21hbGxfYnVzaW5lc3MsIHZhY2F0aW9uLCB3ZWRkaW5nlIllXZQojAphZGRyX3N0YXRllGhiSwCM
U0FLLCBBTCwgQVIsIEFaLCBDQSwgQ08sIENULCBEQywgREUsIEZMLCBHQSwgSEksIElMLCBLUywg
S1ksIExBLCBNQSwgTUQsIE1JLCBNTiwgLi4ulIllXZQojANkdGmUaFpLAGgOiGVdlCiMC2RlbGlu
cV8yeXJzlGhaSwBoDohlXZQojA5pbnFfbGFzdF82bXRoc5RoWksAaA6IZV2UKIwWbXRoc19zaW5j
ZV9sYXN0X2RlbGlucZRoWksAaA6IZV2UKIwWbXRoc19zaW5jZV9sYXN0X3JlY29yZJRoWksAaA6I
ZV2UKIwIb3Blbl9hY2OUaFpLAGgOiGVdlCiMB3B1Yl9yZWOUaFpLAGgOiGVdlCiMCXJldm9sX2Jh
bJRoWksAaA6IZV2UKIwKcmV2b2xfdXRpbJRoWksAaA6IZV2UKIwJdG90YWxfYWNjlGhaSwBoDohl
XZQojBNpbml0aWFsX2xpc3Rfc3RhdHVzlGhiSwCMAWaUiWVdlCiMCW91dF9wcm5jcJRoWksAaA6I
ZV2UKIwLdG90YWxfcHltbnSUaFpLAGgOiGVdlCiMD3RvdGFsX3JlY19wcm5jcJRoWksAaA6IZV2U
KIwNdG90YWxfcmVjX2ludJRoWksAaA6IZV2UKIwSdG90YWxfcmVjX2xhdGVfZmVllGhaSwBoDohl
XZQojApyZWNvdmVyaWVzlGhaSwBoDohlXZQojBdjb2xsZWN0aW9uX3JlY292ZXJ5X2ZlZZRoWksA
aA6IZV2UKIwMbGFzdF9weW1udF9klGhiSwCMo0Fwci0xMiwgQXByLTEzLCBBcHItMTQsIEFwci0x
NSwgQXVnLTEyLCBBdWctMTMsIEF1Zy0xNCwgQXVnLTE1LCBEZWMtMTEsIERlYy0xMiwgRGVjLTEz
LCBEZWMtMTQsIERlYy0xNSwgRmViLTEyLCBGZWItMTMsIEZlYi0xNCwgRmViLTE1LCBKYW4tMTIs
IEphbi0xMywgSmFuLTE0LCAuLi6UiWVdlCiMD2xhc3RfcHltbnRfYW1udJRoWksAaA6IZV2UKIwa
Y29sbGVjdGlvbnNfMTJfbXRoc19leF9tZWSUaGJLAIwDMC4wlIhlXZQojBttdGhzX3NpbmNlX2xh
c3RfbWFqb3JfZGVyb2eUaFpLAGgOiGVdlCiMEGFubnVhbF9pbmNfam9pbnSUaFpLAGgOiGVdlCiM
CWR0aV9qb2ludJRoWksAaA6IZV2UKIwZdmVyaWZpY2F0aW9uX3N0YXR1c19qb2ludJRoWksAaA6I
ZV2UKIwOYWNjX25vd19kZWxpbnGUaGJLAIwDMC4wlIhlXZQojAx0b3RfY29sbF9hbXSUaFpLAGgO
iGVdlCiMC3RvdF9jdXJfYmFslGhaSwBoDohlXZQojAtvcGVuX2FjY182bZRoWksAaA6IZV2UKIwK
b3Blbl9pbF82bZRoWksAaA6IZV2UKIwLb3Blbl9pbF8xMm2UaFpLAGgOiGVdlCiMC29wZW5faWxf
MjRtlGhaSwBoDohlXZQojBJtdGhzX3NpbmNlX3JjbnRfaWyUaFpLAGgOiGVdlCiMDHRvdGFsX2Jh
bF9pbJRoWksAaA6IZV2UKIwHaWxfdXRpbJRoWksAaA6IZV2UKIwLb3Blbl9ydl8xMm2UaFpLAGgO
iGVdlCiMC29wZW5fcnZfMjRtlGhaSwBoDohlXZQojAptYXhfYmFsX2JjlGhaSwBoDohlXZQojAhh
bGxfdXRpbJRoWksAaA6IZV2UKIwQdG90YWxfcmV2X2hpX2xpbZRoWksAaA6IZV2UKIwGaW5xX2Zp
lGhaSwBoDohlXZQojAt0b3RhbF9jdV90bJRoWksAaA6IZV2UKIwMaW5xX2xhc3RfMTJtlGhaSwBo
DohlXZQojAhnb29kX2JhZJRoYksBjAQwLCAxlIhlXZQojA5lbXBfbGVuZ3RoX2ludJRoWksAaA6I
ZV2UKIwVZWFybGllc3RfY3JfbGluZV9kYXRllGhYjAxUaW1lVmFyaWFibGWUk5RLAGgOiGVdlCiM
G210aHNfc2luY2VfZWFybGllc3RfY3JfbGluZZRoWksAaA6IZV2UKIwIdGVybV9pbnSUaFpLAGgO
iGVdlCiMDGlzc3VlX2RfZGF0ZZRo50sAaA6IZV2UKIwSbXRoc19zaW5jZV9pc3N1ZV9klGhaSwBo
DohlXZQojARkZXNjlGhYjA5TdHJpbmdWYXJpYWJsZZSTlEsCaA6JZV2UKIwQZWFybGllc3RfY3Jf
bGluZZRo80sCaA6JZWVzaEhLAXWMCmF0dHJpYnV0ZXOUKGhXSwKGlGhcSwKGlGheSwKGlGhgXZQo
jAkzNiBtb250aHOUjAk2MCBtb250aHOUZYaUaGVLAoaUaGdLAoaUaGldlCiMAUGUjAFClIwBQ5SM
AUSUjAFFlIwBRpSMAUeUZYaUaGxdlCiMAkExlIwCQTKUjAJBM5SMAkE0lIwCQTWUjAJCMZSMAkIy
lIwCQjOUjAJCNJSMAkI1lIwCQzGUjAJDMpSMAkMzlIwCQzSUjAJDNZSMAkQxlIwCRDKUjAJEM5SM
AkQ0lIwCRDWUjAJFMZSMAkUylIwCRTOUjAJFNJSMAkU1lIwCRjGUjAJGMpSMAkYzlIwCRjSUjAJG
NZSMAkcxlIwCRzKUjAJHM5SMAkc0lIwCRzWUZYaUaG9dlCiMBjEgeWVhcpSMBzIgeWVhcnOUjAcz
IHllYXJzlIwHNCB5ZWFyc5SMBzUgeWVhcnOUjAc2IHllYXJzlIwHNyB5ZWFyc5SMBzggeWVhcnOU
jAc5IHllYXJzlIwJMTArIHllYXJzlIwIPCAxIHllYXKUZYaUaHJdlCiMCE1PUlRHQUdFlIwDT1dO
lIwEUkVOVJRlhpRodUsChpRod12UKIwMTm90IFZlcmlmaWVklIwPU291cmNlIFZlcmlmaWVklIwI
VmVyaWZpZWSUZYaUaHpdlCiMBkRlYy0xMZSMBk5vdi0xMZSMBk9jdC0xMZRlhpRofV2UKIwLQ2hh
cmdlZCBPZmaUjAdDdXJyZW50lIwHRGVmYXVsdJSMCkZ1bGx5IFBhaWSUjA9JbiBHcmFjZSBQZXJp
b2SUjBFMYXRlICgxNi0zMCBkYXlzKZSMEkxhdGUgKDMxLTEyMCBkYXlzKZRlhpRogF2UKIwDY2Fy
lIwLY3JlZGl0X2NhcmSUjBJkZWJ0X2NvbnNvbGlkYXRpb26UjBBob21lX2ltcHJvdmVtZW50lIwF
aG91c2WUjA5tYWpvcl9wdXJjaGFzZZSMB21lZGljYWyUjAZtb3ZpbmeUjAVvdGhlcpSMEHJlbmV3
YWJsZV9lbmVyZ3mUjA5zbWFsbF9idXNpbmVzc5SMCHZhY2F0aW9ulIwHd2VkZGluZ5RlhpRog12U
KIwCQUuUjAJBTJSMAkFSlIwCQVqUjAJDQZSMAkNPlIwCQ1SUjAJEQ5SMAkRFlIwCRkyUjAJHQZSM
AkhJlIwCSUyUjAJLU5SMAktZlIwCTEGUjAJNQZSMAk1ElIwCTUmUjAJNTpSMAk1PlIwCTVOUjAJN
VJSMAk5DlIwCTkiUjAJOSpSMAk5NlIwCTlaUjAJOWZSMAk9IlIwCT0uUjAJPUpSMAlBBlIwCUkmU
jAJTQ5SMAlNElIwCVE6UjAJUWJSMAlVUlIwCVkGUjAJWVJSMAldBlIwCV0mUjAJXVpSMAldZlGWG
lGiGSwKGlGiISwKGlGiKSwKGlGiMSwKGlGiOSwKGlGiQSwKGlGiSSwKGlGiUSwKGlGiWSwKGlGiY
SwKGlGiaXZRom2GGlGidSwKGlGifSwKGlGihSwKGlGijSwKGlGilSwKGlGinSwKGlGipSwKGlGir
XZQojAZBcHItMTKUjAZBcHItMTOUjAZBcHItMTSUjAZBcHItMTWUjAZBdWctMTKUjAZBdWctMTOU
jAZBdWctMTSUjAZBdWctMTWUjAZEZWMtMTGUjAZEZWMtMTKUjAZEZWMtMTOUjAZEZWMtMTSUjAZE
ZWMtMTWUjAZGZWItMTKUjAZGZWItMTOUjAZGZWItMTSUjAZGZWItMTWUjAZKYW4tMTKUjAZKYW4t
MTOUjAZKYW4tMTSUjAZKYW4tMTWUjAZKYW4tMTaUjAZKdWwtMTKUjAZKdWwtMTOUjAZKdWwtMTSU
jAZKdWwtMTWUjAZKdW4tMTKUjAZKdW4tMTOUjAZKdW4tMTSUjAZKdW4tMTWUjAZNYXItMTKUjAZN
YXItMTOUjAZNYXItMTSUjAZNYXItMTWUjAZNYXktMTKUjAZNYXktMTOUjAZNYXktMTSUjAZNYXkt
MTWUjAZOb3YtMTGUjAZOb3YtMTKUjAZOb3YtMTOUjAZOb3YtMTSUjAZOb3YtMTWUjAZPY3QtMTKU
jAZPY3QtMTOUjAZPY3QtMTSUjAZPY3QtMTWUjAZTZXAtMTKUjAZTZXAtMTOUjAZTZXAtMTSUjAZT
ZXAtMTWUZYaUaK5LAoaUaLBdlGixYYaUaLNLAoaUaLVLAoaUaLdLAoaUaLlLAoaUaLtdlGi8YYaU
aL5LAoaUaMBLAoaUaMJLAoaUaMRLAoaUaMZLAoaUaMhLAoaUaMpLAoaUaMxLAoaUaM5LAoaUaNBL
AoaUaNJLAoaUaNRLAoaUaNZLAoaUaNhLAoaUaNpLAoaUaNxLAoaUaN5LAoaUaOBdlCiMATCUjAEx
lGWGlGjjSwKGlGjlSwSGlGjpSwKGlGjrSwKGlGjtSwSGlGjvSwKGlHSUjAVtZXRhc5Ro8UsDhpRo
9UsDhpSGlIwKY2xhc3NfdmFyc5QpjBJtb2RpZmllZF92YXJpYWJsZXOUXZR1YmhNKYGUfZQoaFB9
lCiMCXZhcmlhYmxlc5RdlIwNZG9tYWluX2VkaXRvcpR9lGoJAgAAXZQoXZQojAlGZWF0dXJlIDGU
aFpLAGgOiGVdlCiMClVubmFtZWQ6IDCUaFpLAGgOiGVdlCiMAmlklGhaSwBoDohlXZQojAltZW1i
ZXJfaWSUaFpLAGgOiGVdlCiMCWxvYW5fYW1udJRoWksAaA6IZV2UKIwLZnVuZGVkX2FtbnSUaFpL
AGgOiGVdlCiMD2Z1bmRlZF9hbW50X2ludpRoWksAaA6IZV2UKIwEdGVybZRoYksAjBQzNiBtb250
aHMsIDYwIG1vbnRoc5SJZV2UKIwIaW50X3JhdGWUaFpLAGgOiGVdlCiMC2luc3RhbGxtZW50lGha
SwBoDohlXZQojAVncmFkZZRoYksAjBNBLCBCLCBDLCBELCBFLCBGLCBHlIllXZQojAlzdWJfZ3Jh
ZGWUaGJLAIxTQTEsIEEyLCBBMywgQTQsIEE1LCBCMSwgQjIsIEIzLCBCNCwgQjUsIEMxLCBDMiwg
QzMsIEM0LCBDNSwgRDEsIEQyLCBEMywgRDQsIEQ1LCAuLi6UiWVdlCiMCmVtcF9sZW5ndGiUaGJL
AIxjMSB5ZWFyLCAyIHllYXJzLCAzIHllYXJzLCA0IHllYXJzLCA1IHllYXJzLCA2IHllYXJzLCA3
IHllYXJzLCA4IHllYXJzLCA5IHllYXJzLCAxMCsgeWVhcnMsIDwgMSB5ZWFylIllXZQojA5ob21l
X293bmVyc2hpcJRoYksAjBpNT1JUR0FHRSwgT1RIRVIsIE9XTiwgUkVOVJSJZV2UKIwKYW5udWFs
X2luY5RoWksAaA6IZV2UKIwTdmVyaWZpY2F0aW9uX3N0YXR1c5RoYksAjCdOb3QgVmVyaWZpZWQs
IFNvdXJjZSBWZXJpZmllZCwgVmVyaWZpZWSUiWVdlCiMB2lzc3VlX2SUaGJLAIyeQXByLTExLCBB
dWctMTAsIEF1Zy0xMSwgRGVjLTEwLCBEZWMtMTEsIEZlYi0xMSwgSmFuLTExLCBKdWwtMTAsIEp1
bC0xMSwgSnVuLTEwLCBKdW4tMTEsIE1hci0xMSwgTWF5LTEwLCBNYXktMTEsIE5vdi0xMCwgTm92
LTExLCBPY3QtMTAsIE9jdC0xMSwgU2VwLTEwLCBTZXAtMTGUiWVdlCiMC2xvYW5fc3RhdHVzlGhi
SwCMYUNoYXJnZWQgT2ZmLCBDdXJyZW50LCBEZWZhdWx0LCBGdWxseSBQYWlkLCBJbiBHcmFjZSBQ
ZXJpb2QsIExhdGUgKDE2LTMwIGRheXMpLCBMYXRlICgzMS0xMjAgZGF5cymUiWVdlCiMCnB5bW50
X3BsYW6UaGJLAIwEbiwgeZSJZV2UKIwHcHVycG9zZZRoYksAjKdjYXIsIGNyZWRpdF9jYXJkLCBk
ZWJ0X2NvbnNvbGlkYXRpb24sIGVkdWNhdGlvbmFsLCBob21lX2ltcHJvdmVtZW50LCBob3VzZSwg
bWFqb3JfcHVyY2hhc2UsIG1lZGljYWwsIG1vdmluZywgb3RoZXIsIHJlbmV3YWJsZV9lbmVyZ3ks
IHNtYWxsX2J1c2luZXNzLCB2YWNhdGlvbiwgd2VkZGluZ5SJZV2UKIwKYWRkcl9zdGF0ZZRoYksA
jFNBSywgQUwsIEFSLCBBWiwgQ0EsIENPLCBDVCwgREMsIERFLCBGTCwgR0EsIEhJLCBJQSwgSUws
IEtTLCBLWSwgTEEsIE1BLCBNRCwgTUksIC4uLpSJZV2UKIwDZHRplGhaSwBoDohlXZQojAtkZWxp
bnFfMnlyc5RoWksAaA6IZV2UKIwOaW5xX2xhc3RfNm10aHOUaFpLAGgOiGVdlCiMFm10aHNfc2lu
Y2VfbGFzdF9kZWxpbnGUaFpLAGgOiGVdlCiMFm10aHNfc2luY2VfbGFzdF9yZWNvcmSUaFpLAGgO
iGVdlCiMCG9wZW5fYWNjlGhaSwBoDohlXZQojAdwdWJfcmVjlGhaSwBoDohlXZQojAlyZXZvbF9i
YWyUaFpLAGgOiGVdlCiMCnJldm9sX3V0aWyUaFpLAGgOiGVdlCiMCXRvdGFsX2FjY5RoWksAaA6I
ZV2UKIwTaW5pdGlhbF9saXN0X3N0YXR1c5RoYksAaJuJZV2UKIwJb3V0X3BybmNwlGhaSwBoDohl
XZQojA1vdXRfcHJuY3BfaW52lGhaSwBoDohlXZQojAt0b3RhbF9weW1udJRoWksAaA6IZV2UKIwP
dG90YWxfcHltbnRfaW52lGhaSwBoDohlXZQojA90b3RhbF9yZWNfcHJuY3CUaFpLAGgOiGVdlCiM
DXRvdGFsX3JlY19pbnSUaFpLAGgOiGVdlCiMEnRvdGFsX3JlY19sYXRlX2ZlZZRoWksAaA6IZV2U
KIwKcmVjb3Zlcmllc5RoWksAaA6IZV2UKIwXY29sbGVjdGlvbl9yZWNvdmVyeV9mZWWUaFpLAGgO
iGVdlCiMDGxhc3RfcHltbnRfZJRoYksAjKNBcHItMTEsIEFwci0xMiwgQXByLTEzLCBBcHItMTQs
IEFwci0xNSwgQXVnLTEwLCBBdWctMTEsIEF1Zy0xMiwgQXVnLTEzLCBBdWctMTQsIEF1Zy0xNSwg
RGVjLTEwLCBEZWMtMTEsIERlYy0xMiwgRGVjLTEzLCBEZWMtMTQsIERlYy0xNSwgRmViLTExLCBG
ZWItMTIsIEZlYi0xMywgLi4ulIllXZQojA9sYXN0X3B5bW50X2FtbnSUaFpLAGgOiGVdlCiMDG5l
eHRfcHltbnRfZJRoYksAjA5GZWItMTYsIEphbi0xNpSJZV2UKIwSbGFzdF9jcmVkaXRfcHVsbF9k
lGhiSwCMo0Fwci0xMSwgQXByLTEyLCBBcHItMTMsIEFwci0xNCwgQXByLTE1LCBBdWctMTAsIEF1
Zy0xMSwgQXVnLTEyLCBBdWctMTMsIEF1Zy0xNCwgQXVnLTE1LCBEZWMtMTAsIERlYy0xMSwgRGVj
LTEyLCBEZWMtMTMsIERlYy0xNCwgRGVjLTE1LCBGZWItMTEsIEZlYi0xMiwgRmViLTEzLCAuLi6U
iWVdlCiMGmNvbGxlY3Rpb25zXzEyX210aHNfZXhfbWVklGhiSwCMAzAuMJSIZV2UKIwbbXRoc19z
aW5jZV9sYXN0X21ham9yX2Rlcm9nlGhaSwBoDohlXZQojAtwb2xpY3lfY29kZZRoYksAavYBAACI
ZV2UKIwQYXBwbGljYXRpb25fdHlwZZRoYksAjApJTkRJVklEVUFMlIllXZQojBBhbm51YWxfaW5j
X2pvaW50lGhaSwBoDohlXZQojAlkdGlfam9pbnSUaFpLAGgOiGVdlCiMGXZlcmlmaWNhdGlvbl9z
dGF0dXNfam9pbnSUaFpLAGgOiGVdlCiMDmFjY19ub3dfZGVsaW5xlGhiSwCMAzAuMJSIZV2UKIwM
dG90X2NvbGxfYW10lGhaSwBoDohlXZQojAt0b3RfY3VyX2JhbJRoWksAaA6IZV2UKIwLb3Blbl9h
Y2NfNm2UaFpLAGgOiGVdlCiMCm9wZW5faWxfNm2UaFpLAGgOiGVdlCiMC29wZW5faWxfMTJtlGha
SwBoDohlXZQojAtvcGVuX2lsXzI0bZRoWksAaA6IZV2UKIwSbXRoc19zaW5jZV9yY250X2lslGha
SwBoDohlXZQojAx0b3RhbF9iYWxfaWyUaFpLAGgOiGVdlCiMB2lsX3V0aWyUaFpLAGgOiGVdlCiM
C29wZW5fcnZfMTJtlGhaSwBoDohlXZQojAtvcGVuX3J2XzI0bZRoWksAaA6IZV2UKIwKbWF4X2Jh
bF9iY5RoWksAaA6IZV2UKIwIYWxsX3V0aWyUaFpLAGgOiGVdlCiMEHRvdGFsX3Jldl9oaV9saW2U
aFpLAGgOiGVdlCiMBmlucV9maZRoWksAaA6IZV2UKIwLdG90YWxfY3VfdGyUaFpLAGgOiGVdlCiM
DGlucV9sYXN0XzEybZRoWksAaA6IZV2UKIwOZW1wX2xlbmd0aF9pbnSUaFpLAGgOiGVdlCiMFWVh
cmxpZXN0X2NyX2xpbmVfZGF0ZZRo50sAaA6IZV2UKIwbbXRoc19zaW5jZV9lYXJsaWVzdF9jcl9s
aW5llGhaSwBoDohlXZQojAh0ZXJtX2ludJRoWksAaA6IZV2UKIwMaXNzdWVfZF9kYXRllGjnSwBo
DohlXZQojBJtdGhzX3NpbmNlX2lzc3VlX2SUaFpLAGgOiGVdlCiMCGdvb2RfYmFklGhiSwGMBDAs
IDGUiGVdlCiMCWVtcF90aXRsZZRo80sCaA6JZV2UKIwDdXJslGjzSwJoDollXZQojARkZXNjlGjz
SwJoDollXZQojAV0aXRsZZRo80sCaA6JZV2UKIwIemlwX2NvZGWUaPNLAmgOiWVdlCiMEGVhcmxp
ZXN0X2NyX2xpbmWUaPNLAmgOiWVlc2hISwF1aPYoag8CAABLAoaUahECAABLAoaUahMCAABLAoaU
ahUCAABLAoaUahcCAABLAoaUahkCAABLAoaUahsCAABLAoaUah0CAABdlCiMCTM2IG1vbnRoc5SM
CTYwIG1vbnRoc5RlhpRqIAIAAEsChpRqIgIAAEsChpRqJAIAAF2UKGoBAQAAagIBAABqAwEAAGoE
AQAAagUBAABqBgEAAGoHAQAAZYaUaicCAABdlCiMAkExlIwCQTKUjAJBM5SMAkE0lIwCQTWUjAJC
MZSMAkIylIwCQjOUjAJCNJSMAkI1lIwCQzGUjAJDMpSMAkMzlIwCQzSUjAJDNZSMAkQxlIwCRDKU
jAJEM5SMAkQ0lIwCRDWUjAJFMZSMAkUylIwCRTOUjAJFNJSMAkU1lIwCRjGUjAJGMpSMAkYzlIwC
RjSUjAJGNZSMAkcxlIwCRzKUjAJHM5SMAkc0lIwCRzWUZYaUaioCAABdlCiMBjEgeWVhcpSMBzIg
eWVhcnOUjAczIHllYXJzlIwHNCB5ZWFyc5SMBzUgeWVhcnOUjAc2IHllYXJzlIwHNyB5ZWFyc5SM
BzggeWVhcnOUjAc5IHllYXJzlIwJMTArIHllYXJzlIwIPCAxIHllYXKUZYaUai0CAABdlCiMCE1P
UlRHQUdFlIwFT1RIRVKUjANPV06UjARSRU5UlGWGlGowAgAASwKGlGoyAgAAXZQojAxOb3QgVmVy
aWZpZWSUjA9Tb3VyY2UgVmVyaWZpZWSUjAhWZXJpZmllZJRlhpRqNQIAAF2UKIwGQXByLTExlIwG
QXVnLTEwlIwGQXVnLTExlIwGRGVjLTEwlIwGRGVjLTExlIwGRmViLTExlIwGSmFuLTExlIwGSnVs
LTEwlIwGSnVsLTExlIwGSnVuLTEwlIwGSnVuLTExlIwGTWFyLTExlIwGTWF5LTEwlIwGTWF5LTEx
lIwGTm92LTEwlIwGTm92LTExlIwGT2N0LTEwlIwGT2N0LTExlIwGU2VwLTEwlIwGU2VwLTExlGWG
lGo4AgAAXZQojAtDaGFyZ2VkIE9mZpSMB0N1cnJlbnSUjAdEZWZhdWx0lIwKRnVsbHkgUGFpZJSM
D0luIEdyYWNlIFBlcmlvZJSMEUxhdGUgKDE2LTMwIGRheXMplIwSTGF0ZSAoMzEtMTIwIGRheXMp
lGWGlGo7AgAAXZQojAFulIwBeZRlhpRqPgIAAF2UKIwDY2FylIwLY3JlZGl0X2NhcmSUjBJkZWJ0
X2NvbnNvbGlkYXRpb26UjAtlZHVjYXRpb25hbJSMEGhvbWVfaW1wcm92ZW1lbnSUjAVob3VzZZSM
Dm1ham9yX3B1cmNoYXNllIwHbWVkaWNhbJSMBm1vdmluZ5SMBW90aGVylIwQcmVuZXdhYmxlX2Vu
ZXJneZSMDnNtYWxsX2J1c2luZXNzlIwIdmFjYXRpb26UjAd3ZWRkaW5nlGWGlGpBAgAAXZQojAJB
S5SMAkFMlIwCQVKUjAJBWpSMAkNBlIwCQ0+UjAJDVJSMAkRDlIwCREWUjAJGTJSMAkdBlIwCSEmU
jAJJQZSMAklMlIwCS1OUjAJLWZSMAkxBlIwCTUGUjAJNRJSMAk1JlIwCTU6UjAJNT5SMAk1TlIwC
TVSUjAJOQ5SMAk5IlIwCTkqUjAJOTZSMAk5WlIwCTlmUjAJPSJSMAk9LlIwCT1KUjAJQQZSMAlJJ
lIwCU0OUjAJTRJSMAlROlIwCVFiUjAJVVJSMAlZBlIwCVlSUjAJXQZSMAldJlIwCV1aUjAJXWZRl
hpRqRAIAAEsChpRqRgIAAEsChpRqSAIAAEsChpRqSgIAAEsChpRqTAIAAEsChpRqTgIAAEsChpRq
UAIAAEsChpRqUgIAAEsChpRqVAIAAEsChpRqVgIAAEsChpRqWAIAAF2UaJthhpRqWgIAAEsChpRq
XAIAAEsChpRqXgIAAEsChpRqYAIAAEsChpRqYgIAAEsChpRqZAIAAEsChpRqZgIAAEsChpRqaAIA
AEsChpRqagIAAEsChpRqbAIAAF2UKIwGQXByLTExlIwGQXByLTEylIwGQXByLTEzlIwGQXByLTE0
lIwGQXByLTE1lIwGQXVnLTEwlIwGQXVnLTExlIwGQXVnLTEylIwGQXVnLTEzlIwGQXVnLTE0lIwG
QXVnLTE1lIwGRGVjLTEwlIwGRGVjLTExlIwGRGVjLTEylIwGRGVjLTEzlIwGRGVjLTE0lIwGRGVj
LTE1lIwGRmViLTExlIwGRmViLTEylIwGRmViLTEzlIwGRmViLTE0lIwGRmViLTE1lIwGSmFuLTEx
lIwGSmFuLTEylIwGSmFuLTEzlIwGSmFuLTE0lIwGSmFuLTE1lIwGSmFuLTE2lIwGSnVsLTEwlIwG
SnVsLTExlIwGSnVsLTEylIwGSnVsLTEzlIwGSnVsLTE0lIwGSnVsLTE1lIwGSnVuLTExlIwGSnVu
LTEylIwGSnVuLTEzlIwGSnVuLTE0lIwGSnVuLTE1lIwGTWFyLTExlIwGTWFyLTEylIwGTWFyLTEz
lIwGTWFyLTE0lIwGTWFyLTE1lIwGTWF5LTExlIwGTWF5LTEylIwGTWF5LTEzlIwGTWF5LTE0lIwG
TWF5LTE1lIwGTm92LTEwlIwGTm92LTExlIwGTm92LTEylIwGTm92LTEzlIwGTm92LTE0lIwGTm92
LTE1lIwGT2N0LTEwlIwGT2N0LTExlIwGT2N0LTEylIwGT2N0LTEzlIwGT2N0LTE0lIwGT2N0LTE1
lIwGU2VwLTEwlIwGU2VwLTExlIwGU2VwLTEylIwGU2VwLTEzlIwGU2VwLTE0lIwGU2VwLTE1lGWG
lGpvAgAASwKGlGpxAgAAXZQojAZGZWItMTaUjAZKYW4tMTaUZYaUanQCAABdlCiMBkFwci0xMZSM
BkFwci0xMpSMBkFwci0xM5SMBkFwci0xNJSMBkFwci0xNZSMBkF1Zy0xMJSMBkF1Zy0xMZSMBkF1
Zy0xMpSMBkF1Zy0xM5SMBkF1Zy0xNJSMBkF1Zy0xNZSMBkRlYy0xMJSMBkRlYy0xMZSMBkRlYy0x
MpSMBkRlYy0xM5SMBkRlYy0xNJSMBkRlYy0xNZSMBkZlYi0xMZSMBkZlYi0xMpSMBkZlYi0xM5SM
BkZlYi0xNJSMBkZlYi0xNZSMBkphbi0xMZSMBkphbi0xMpSMBkphbi0xM5SMBkphbi0xNJSMBkph
bi0xNZSMBkphbi0xNpSMBkp1bC0xMJSMBkp1bC0xMZSMBkp1bC0xMpSMBkp1bC0xM5SMBkp1bC0x
NJSMBkp1bC0xNZSMBkp1bi0xMJSMBkp1bi0xMZSMBkp1bi0xMpSMBkp1bi0xM5SMBkp1bi0xNJSM
Bkp1bi0xNZSMBk1hci0xMZSMBk1hci0xMpSMBk1hci0xM5SMBk1hci0xNJSMBk1hci0xNZSMBk1h
eS0xMZSMBk1heS0xMpSMBk1heS0xM5SMBk1heS0xNJSMBk1heS0xNZSMBk5vdi0xMJSMBk5vdi0x
MZSMBk5vdi0xMpSMBk5vdi0xM5SMBk5vdi0xNJSMBk5vdi0xNZSMBk9jdC0xMJSMBk9jdC0xMZSM
Bk9jdC0xMpSMBk9jdC0xM5SMBk9jdC0xNJSMBk9jdC0xNZSMBlNlcC0xMJSMBlNlcC0xMZSMBlNl
cC0xMpSMBlNlcC0xM5SMBlNlcC0xNJSMBlNlcC0xNZRlhpRqdwIAAF2UangCAABhhpRqegIAAEsC
hpRqfAIAAF2UavYBAABhhpRqfgIAAF2Uan8CAABhhpRqgQIAAEsChpRqgwIAAEsChpRqhQIAAEsC
hpRqhwIAAF2UaogCAABhhpRqigIAAEsChpRqjAIAAEsChpRqjgIAAEsChpRqkAIAAEsChpRqkgIA
AEsChpRqlAIAAEsChpRqlgIAAEsChpRqmAIAAEsChpRqmgIAAEsChpRqnAIAAEsChpRqngIAAEsC
hpRqoAIAAEsChpRqogIAAEsChpRqpAIAAEsChpRqpgIAAEsChpRqqAIAAEsChpRqqgIAAEsChpRq
rAIAAEsChpRqrgIAAEsEhpRqsAIAAEsChpRqsgIAAEsChpRqtAIAAEsEhpRqtgIAAEsChpRquAIA
AF2UKGr1AQAAavYBAABlhpR0lGr/AQAAKGq7AgAASwOGlGq9AgAASwOGlGq/AgAASwOGlGrBAgAA
SwOGlGrDAgAASwOGlGrFAgAASwOGlHSUagMCAAApagQCAABdlHViaE0pgZR9lChoUH2UKIwJdmFy
aWFibGVzlF2UjA1kb21haW5fZWRpdG9ylH2UakwEAABdlChdlCiMCWxvYW5fYW1udJRoWksAaA6I
ZV2UKIwLZnVuZGVkX2FtbnSUaFpLAGgOiGVdlCiMBHRlcm2UaGJLAIwUMzYgbW9udGhzLCA2MCBt
b250aHOUiWVdlCiMCGludF9yYXRllGhaSwBoDohlXZQojAtpbnN0YWxsbWVudJRoWksAaA6IZV2U
KIwFZ3JhZGWUaGJLAIwTQSwgQiwgQywgRCwgRSwgRiwgR5SJZV2UKIwJc3ViX2dyYWRllGhiSwCM
U0ExLCBBMiwgQTMsIEE0LCBBNSwgQjEsIEIyLCBCMywgQjQsIEI1LCBDMSwgQzIsIEMzLCBDNCwg
QzUsIEQxLCBEMiwgRDMsIEQ0LCBENSwgLi4ulIllXZQojAplbXBfbGVuZ3RolGhiSwCMYzEgeWVh
ciwgMiB5ZWFycywgMyB5ZWFycywgNCB5ZWFycywgNSB5ZWFycywgNiB5ZWFycywgNyB5ZWFycywg
OCB5ZWFycywgOSB5ZWFycywgMTArIHllYXJzLCA8IDEgeWVhcpSJZV2UKIwOaG9tZV9vd25lcnNo
aXCUaGJLAIwTTU9SVEdBR0UsIE9XTiwgUkVOVJSJZV2UKIwKYW5udWFsX2luY5RoWksAaA6IZV2U
KIwTdmVyaWZpY2F0aW9uX3N0YXR1c5RoYksAjCdOb3QgVmVyaWZpZWQsIFNvdXJjZSBWZXJpZmll
ZCwgVmVyaWZpZWSUiWVdlCiMB2lzc3VlX2SUaGJLAIwWRGVjLTExLCBOb3YtMTEsIE9jdC0xMZSJ
ZV2UKIwLbG9hbl9zdGF0dXOUaGJLAIxhQ2hhcmdlZCBPZmYsIEN1cnJlbnQsIERlZmF1bHQsIEZ1
bGx5IFBhaWQsIEluIEdyYWNlIFBlcmlvZCwgTGF0ZSAoMTYtMzAgZGF5cyksIExhdGUgKDMxLTEy
MCBkYXlzKZSJZV2UKIwHcHVycG9zZZRoYksAjJpjYXIsIGNyZWRpdF9jYXJkLCBkZWJ0X2NvbnNv
bGlkYXRpb24sIGhvbWVfaW1wcm92ZW1lbnQsIGhvdXNlLCBtYWpvcl9wdXJjaGFzZSwgbWVkaWNh
bCwgbW92aW5nLCBvdGhlciwgcmVuZXdhYmxlX2VuZXJneSwgc21hbGxfYnVzaW5lc3MsIHZhY2F0
aW9uLCB3ZWRkaW5nlIllXZQojAphZGRyX3N0YXRllGhiSwCMU0FLLCBBTCwgQVIsIEFaLCBDQSwg
Q08sIENULCBEQywgREUsIEZMLCBHQSwgSEksIElMLCBLUywgS1ksIExBLCBNQSwgTUQsIE1JLCBN
TiwgLi4ulIllXZQojANkdGmUaFpLAGgOiGVdlCiMC2RlbGlucV8yeXJzlGhaSwBoDohlXZQojA5p
bnFfbGFzdF82bXRoc5RoWksAaA6IZV2UKIwWbXRoc19zaW5jZV9sYXN0X2RlbGlucZRoWksAaA6I
ZV2UKIwWbXRoc19zaW5jZV9sYXN0X3JlY29yZJRoWksAaA6IZV2UKIwIb3Blbl9hY2OUaFpLAGgO
iGVdlCiMB3B1Yl9yZWOUaFpLAGgOiGVdlCiMCXJldm9sX2JhbJRoWksAaA6IZV2UKIwKcmV2b2xf
dXRpbJRoWksAaA6IZV2UKIwJdG90YWxfYWNjlGhaSwBoDohlXZQojBNpbml0aWFsX2xpc3Rfc3Rh
dHVzlGhiSwBom4llXZQojAlvdXRfcHJuY3CUaFpLAGgOiGVdlCiMC3RvdGFsX3B5bW50lGhaSwBo
DohlXZQojA90b3RhbF9yZWNfcHJuY3CUaFpLAGgOiGVdlCiMDXRvdGFsX3JlY19pbnSUaFpLAGgO
iGVdlCiMEnRvdGFsX3JlY19sYXRlX2ZlZZRoWksAaA6IZV2UKIwKcmVjb3Zlcmllc5RoWksAaA6I
ZV2UKIwXY29sbGVjdGlvbl9yZWNvdmVyeV9mZWWUaFpLAGgOiGVdlCiMDGxhc3RfcHltbnRfZJRo
YksAjKNBcHItMTIsIEFwci0xMywgQXByLTE0LCBBcHItMTUsIEF1Zy0xMiwgQXVnLTEzLCBBdWct
MTQsIEF1Zy0xNSwgRGVjLTExLCBEZWMtMTIsIERlYy0xMywgRGVjLTE0LCBEZWMtMTUsIEZlYi0x
MiwgRmViLTEzLCBGZWItMTQsIEZlYi0xNSwgSmFuLTEyLCBKYW4tMTMsIEphbi0xNCwgLi4ulIll
XZQojA9sYXN0X3B5bW50X2FtbnSUaFpLAGgOiGVdlCiMGmNvbGxlY3Rpb25zXzEyX210aHNfZXhf
bWVklGhiSwCMAzAuMJSIZV2UKIwbbXRoc19zaW5jZV9sYXN0X21ham9yX2Rlcm9nlGhaSwBoDohl
XZQojBBhbm51YWxfaW5jX2pvaW50lGhaSwBoDohlXZQojAlkdGlfam9pbnSUaFpLAGgOiGVdlCiM
GXZlcmlmaWNhdGlvbl9zdGF0dXNfam9pbnSUaFpLAGgOiGVdlCiMDmFjY19ub3dfZGVsaW5xlGhi
SwCMAzAuMJSIZV2UKIwMdG90X2NvbGxfYW10lGhaSwBoDohlXZQojAt0b3RfY3VyX2JhbJRoWksA
aA6IZV2UKIwLb3Blbl9hY2NfNm2UaFpLAGgOiGVdlCiMCm9wZW5faWxfNm2UaFpLAGgOiGVdlCiM
C29wZW5faWxfMTJtlGhaSwBoDohlXZQojAtvcGVuX2lsXzI0bZRoWksAaA6IZV2UKIwSbXRoc19z
aW5jZV9yY250X2lslGhaSwBoDohlXZQojAx0b3RhbF9iYWxfaWyUaFpLAGgOiGVdlCiMB2lsX3V0
aWyUaFpLAGgOiGVdlCiMC29wZW5fcnZfMTJtlGhaSwBoDohlXZQojAtvcGVuX3J2XzI0bZRoWksA
aA6IZV2UKIwKbWF4X2JhbF9iY5RoWksAaA6IZV2UKIwIYWxsX3V0aWyUaFpLAGgOiGVdlCiMEHRv
dGFsX3Jldl9oaV9saW2UaFpLAGgOiGVdlCiMBmlucV9maZRoWksAaA6IZV2UKIwLdG90YWxfY3Vf
dGyUaFpLAGgOiGVdlCiMDGlucV9sYXN0XzEybZRoWksAaA6IZV2UKIwIZ29vZF9iYWSUaGJLAYwE
MCwgMZSIZV2UKIwEZGVzY5Ro80sCaA6JZV2UKIwQZWFybGllc3RfY3JfbGluZZRo80sCaA6JZWVz
aEhLAXVo9iiMCWxvYW5fYW1udJRLAoaUjAtmdW5kZWRfYW1udJRLAoaUjAR0ZXJtlF2UKIwJMzYg
bW9udGhzlIwJNjAgbW9udGhzlGWGlIwIaW50X3JhdGWUSwKGlIwLaW5zdGFsbG1lbnSUSwKGlIwF
Z3JhZGWUXZQoagEBAABqAgEAAGoDAQAAagQBAABqBQEAAGoGAQAAagcBAABlhpSMCXN1Yl9ncmFk
ZZRdlCiMAkExlIwCQTKUjAJBM5SMAkE0lIwCQTWUjAJCMZSMAkIylIwCQjOUjAJCNJSMAkI1lIwC
QzGUjAJDMpSMAkMzlIwCQzSUjAJDNZSMAkQxlIwCRDKUjAJEM5SMAkQ0lIwCRDWUjAJFMZSMAkUy
lIwCRTOUjAJFNJSMAkU1lIwCRjGUjAJGMpSMAkYzlIwCRjSUjAJGNZSMAkcxlIwCRzKUjAJHM5SM
Akc0lIwCRzWUZYaUjAplbXBfbGVuZ3RolF2UKIwGMSB5ZWFylIwHMiB5ZWFyc5SMBzMgeWVhcnOU
jAc0IHllYXJzlIwHNSB5ZWFyc5SMBzYgeWVhcnOUjAc3IHllYXJzlIwHOCB5ZWFyc5SMBzkgeWVh
cnOUjAkxMCsgeWVhcnOUjAg8IDEgeWVhcpRlhpSMDmhvbWVfb3duZXJzaGlwlF2UKIwITU9SVEdB
R0WUjANPV06UjARSRU5UlGWGlIwKYW5udWFsX2luY5RLAoaUjBN2ZXJpZmljYXRpb25fc3RhdHVz
lF2UKIwMTm90IFZlcmlmaWVklIwPU291cmNlIFZlcmlmaWVklIwIVmVyaWZpZWSUZYaUjAdpc3N1
ZV9klF2UKIwGRGVjLTExlIwGTm92LTExlIwGT2N0LTExlGWGlIwLbG9hbl9zdGF0dXOUXZQojAtD
aGFyZ2VkIE9mZpSMB0N1cnJlbnSUjAdEZWZhdWx0lIwKRnVsbHkgUGFpZJSMD0luIEdyYWNlIFBl
cmlvZJSMEUxhdGUgKDE2LTMwIGRheXMplIwSTGF0ZSAoMzEtMTIwIGRheXMplGWGlIwHcHVycG9z
ZZRdlCiMA2NhcpSMC2NyZWRpdF9jYXJklIwSZGVidF9jb25zb2xpZGF0aW9ulIwQaG9tZV9pbXBy
b3ZlbWVudJSMBWhvdXNllIwObWFqb3JfcHVyY2hhc2WUjAdtZWRpY2FslIwGbW92aW5nlIwFb3Ro
ZXKUjBByZW5ld2FibGVfZW5lcmd5lIwOc21hbGxfYnVzaW5lc3OUjAh2YWNhdGlvbpSMB3dlZGRp
bmeUZYaUjAphZGRyX3N0YXRllF2UKIwCQUuUjAJBTJSMAkFSlIwCQVqUjAJDQZSMAkNPlIwCQ1SU
jAJEQ5SMAkRFlIwCRkyUjAJHQZSMAkhJlIwCSUyUjAJLU5SMAktZlIwCTEGUjAJNQZSMAk1ElIwC
TUmUjAJNTpSMAk1PlIwCTVOUjAJNVJSMAk5DlIwCTkiUjAJOSpSMAk5NlIwCTlaUjAJOWZSMAk9I
lIwCT0uUjAJPUpSMAlBBlIwCUkmUjAJTQ5SMAlNElIwCVE6UjAJUWJSMAlVUlIwCVkGUjAJWVJSM
AldBlIwCV0mUjAJXVpSMAldZlGWGlIwDZHRplEsChpSMC2RlbGlucV8yeXJzlEsChpSMDmlucV9s
YXN0XzZtdGhzlEsChpSMFm10aHNfc2luY2VfbGFzdF9kZWxpbnGUSwKGlIwWbXRoc19zaW5jZV9s
YXN0X3JlY29yZJRLAoaUjAhvcGVuX2FjY5RLAoaUjAdwdWJfcmVjlEsChpSMCXJldm9sX2JhbJRL
AoaUjApyZXZvbF91dGlslEsChpSMCXRvdGFsX2FjY5RLAoaUjBNpbml0aWFsX2xpc3Rfc3RhdHVz
lF2UaJthhpSMCW91dF9wcm5jcJRLAoaUjAt0b3RhbF9weW1udJRLAoaUjA90b3RhbF9yZWNfcHJu
Y3CUSwKGlIwNdG90YWxfcmVjX2ludJRLAoaUjBJ0b3RhbF9yZWNfbGF0ZV9mZWWUSwKGlIwKcmVj
b3Zlcmllc5RLAoaUjBdjb2xsZWN0aW9uX3JlY292ZXJ5X2ZlZZRLAoaUjAxsYXN0X3B5bW50X2SU
XZQojAZBcHItMTKUjAZBcHItMTOUjAZBcHItMTSUjAZBcHItMTWUjAZBdWctMTKUjAZBdWctMTOU
jAZBdWctMTSUjAZBdWctMTWUjAZEZWMtMTGUjAZEZWMtMTKUjAZEZWMtMTOUjAZEZWMtMTSUjAZE
ZWMtMTWUjAZGZWItMTKUjAZGZWItMTOUjAZGZWItMTSUjAZGZWItMTWUjAZKYW4tMTKUjAZKYW4t
MTOUjAZKYW4tMTSUjAZKYW4tMTWUjAZKYW4tMTaUjAZKdWwtMTKUjAZKdWwtMTOUjAZKdWwtMTSU
jAZKdWwtMTWUjAZKdW4tMTKUjAZKdW4tMTOUjAZKdW4tMTSUjAZKdW4tMTWUjAZNYXItMTKUjAZN
YXItMTOUjAZNYXItMTSUjAZNYXItMTWUjAZNYXktMTKUjAZNYXktMTOUjAZNYXktMTSUjAZNYXkt
MTWUjAZOb3YtMTGUjAZOb3YtMTKUjAZOb3YtMTOUjAZOb3YtMTSUjAZOb3YtMTWUjAZPY3QtMTKU
jAZPY3QtMTOUjAZPY3QtMTSUjAZPY3QtMTWUjAZTZXAtMTKUjAZTZXAtMTOUjAZTZXAtMTSUjAZT
ZXAtMTWUZYaUjA9sYXN0X3B5bW50X2FtbnSUSwKGlIwaY29sbGVjdGlvbnNfMTJfbXRoc19leF9t
ZWSUXZSMAzAuMJRhhpSMG210aHNfc2luY2VfbGFzdF9tYWpvcl9kZXJvZ5RLAoaUjBBhbm51YWxf
aW5jX2pvaW50lEsChpSMCWR0aV9qb2ludJRLAoaUjBl2ZXJpZmljYXRpb25fc3RhdHVzX2pvaW50
lEsChpSMDmFjY19ub3dfZGVsaW5xlF2UjAMwLjCUYYaUjAx0b3RfY29sbF9hbXSUSwKGlIwLdG90
X2N1cl9iYWyUSwKGlIwLb3Blbl9hY2NfNm2USwKGlIwKb3Blbl9pbF82bZRLAoaUjAtvcGVuX2ls
XzEybZRLAoaUjAtvcGVuX2lsXzI0bZRLAoaUjBJtdGhzX3NpbmNlX3JjbnRfaWyUSwKGlIwMdG90
YWxfYmFsX2lslEsChpSMB2lsX3V0aWyUSwKGlIwLb3Blbl9ydl8xMm2USwKGlIwLb3Blbl9ydl8y
NG2USwKGlIwKbWF4X2JhbF9iY5RLAoaUjAhhbGxfdXRpbJRLAoaUjBB0b3RhbF9yZXZfaGlfbGlt
lEsChpSMBmlucV9maZRLAoaUjAt0b3RhbF9jdV90bJRLAoaUjAxpbnFfbGFzdF8xMm2USwKGlIwI
Z29vZF9iYWSUXZQoavUBAABq9gEAAGWGlHSUav8BAACMBGRlc2OUSwOGlIwQZWFybGllc3RfY3Jf
bGluZZRLA4aUhpRqAwIAAClqBAIAAF2UdWJldS4=
</properties>
		<properties node_id="11" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x07\x80\x00\x00\x01\x0e\x00\x00\r\x16\x00\x00\x02\xeb\x00\x00\x07\x80\x00\x00\x01\x0e\x00\x00\r\x16\x00\x00\x02\xeb\x00\x00\x00\x01\x00\x00\x00\x00\x07\x80\x00\x00\x07\x80\x00\x00\x01\x0e\x00\x00\r\x16\x00\x00\x02\xeb', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="12" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x07\x80\x00\x00\x00\x00\x00\x00\x0e\xff\x00\x00\x047\x00\x00\x07\x80\x00\x00\x00%\x00\x00\x0e\xff\x00\x00\x047\x00\x00\x00\x01\x02\x00\x00\x00\x07\x80\x00\x00\x07\x80\x00\x00\x00%\x00\x00\x0e\xff\x00\x00\x047', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="13" format="pickle">gASVhRgAAAAAAAB9lCiMC2F1dG9fY29tbWl0lIiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBNpZ25v
cmVfbmV3X2ZlYXR1cmVzlImME3NhdmVkV2lkZ2V0R2VvbWV0cnmUQ0IB2dDLAAMAAAAAB4AAAAAL
AAALAwAAAq8AAAeAAAAAMAAACwMAAAKvAAAAAQAAAAAHgAAAB4AAAAAwAAALAwAAAq+UjBJ1c2Vf
aW5wdXRfZmVhdHVyZXOUiYwLX192ZXJzaW9uX1+USwGMEGNvbnRleHRfc2V0dGluZ3OUXZQojBVv
cmFuZ2V3aWRnZXQuc2V0dGluZ3OUjAdDb250ZXh0lJOUKYGUfZQojAZ2YWx1ZXOUfZQojBFkb21h
aW5fcm9sZV9oaW50c5R9lCiMC2Z1bmRlZF9hbW50lEsChpSMCWF2YWlsYWJsZZRLAIaUjAtpbnN0
YWxsbWVudJRLAoaUaBVLAYaUjApyZXZvbF91dGlslEsChpRoFUsChpSMCW91dF9wcm5jcJRLAoaU
aBVLA4aUjAt0b3RhbF9weW1udJRLAoaUaBVLBIaUjA90b3RhbF9yZWNfcHJuY3CUSwKGlGgVSwWG
lIwNdG90YWxfcmVjX2ludJRLAoaUaBVLBoaUjBJ0b3RhbF9yZWNfbGF0ZV9mZWWUSwKGlGgVSweG
lIwWbXRoc19zaW5jZV9sYXN0X3JlY29yZJRLAoaUaBVLCIaUjBZtdGhzX3NpbmNlX2xhc3RfZGVs
aW5xlEsChpRoFUsJhpSMCnJlY292ZXJpZXOUSwKGlGgVSwqGlIwXY29sbGVjdGlvbl9yZWNvdmVy
eV9mZWWUSwKGlGgVSwuGlIwMaW5xX2xhc3RfMTJtlEsChpRoFUsMhpSMD2xhc3RfcHltbnRfYW1u
dJRLAoaUaBVLDYaUjBpjb2xsZWN0aW9uc18xMl9tdGhzX2V4X21lZJRLAYaUaBVLDoaUjAhhbGxf
dXRpbJRLAoaUaBVLD4aUjAx0b3RfY29sbF9hbXSUSwKGlGgVSxCGlIwLdG90YWxfY3VfdGyUSwKG
lGgVSxGGlIwLZGVsaW5xXzJ5cnOUSwKGlGgVSxKGlIwOYWNjX25vd19kZWxpbnGUSwGGlGgVSxOG
lIwKbWF4X2JhbF9iY5RLAoaUaBVLFIaUjAZpbnFfZmmUSwKGlGgVSxWGlIwQdG90YWxfcmV2X2hp
X2xpbZRLAoaUaBVLFoaUjAtsb2FuX3N0YXR1c5RLAYaUaBVLF4aUjAdwdWJfcmVjlEsChpRoFUsY
hpSMG210aHNfc2luY2VfbGFzdF9tYWpvcl9kZXJvZ5RLAoaUaBVLGYaUjBBhbm51YWxfaW5jX2pv
aW50lEsChpRoFUsahpSMBGRlc2OUSwOGlGgVSxuGlIwQZWFybGllc3RfY3JfbGluZZRLA4aUaBVL
HIaUjAlkdGlfam9pbnSUSwKGlGgVSx2GlIwMdG90YWxfYmFsX2lslEsChpRoFUsehpSMC29wZW5f
cnZfMjRtlEsChpRoFUsfhpSMB2lsX3V0aWyUSwKGlGgVSyCGlIwLb3Blbl9ydl8xMm2USwKGlGgV
SyGGlIwSbXRoc19zaW5jZV9yY250X2lslEsChpRoFUsihpSMGXZlcmlmaWNhdGlvbl9zdGF0dXNf
am9pbnSUSwKGlGgVSyOGlIwLdG90X2N1cl9iYWyUSwKGlGgVSySGlIwLb3Blbl9hY2NfNm2USwKG
lGgVSyWGlIwLb3Blbl9pbF8yNG2USwKGlGgVSyaGlIwLb3Blbl9pbF8xMm2USwKGlGgVSyeGlIwK
b3Blbl9pbF82bZRLAoaUaBVLKIaUjAlGZWF0dXJlIDGUSwKGlIwJYXR0cmlidXRllEsAhpSMCWxv
YW5fYW1udJRLAoaUaJFLAYaUjAR0ZXJtlEsBhpRokUsChpSMCGludF9yYXRllEsChpRokUsDhpSM
BWdyYWRllEsBhpRokUsEhpSMCXN1Yl9ncmFkZZRLAYaUaJFLBYaUjAplbXBfbGVuZ3RolEsBhpRo
kUsGhpSMDmhvbWVfb3duZXJzaGlwlEsBhpRokUsHhpSMCmFubnVhbF9pbmOUSwKGlGiRSwiGlIwT
dmVyaWZpY2F0aW9uX3N0YXR1c5RLAYaUaJFLCYaUjAdpc3N1ZV9klEsBhpRokUsKhpSMB3B1cnBv
c2WUSwGGlGiRSwuGlIwKYWRkcl9zdGF0ZZRLAYaUaJFLDIaUjANkdGmUSwKGlGiRSw2GlIwOaW5x
X2xhc3RfNm10aHOUSwKGlGiRSw6GlIwIb3Blbl9hY2OUSwKGlGiRSw+GlIwJcmV2b2xfYmFslEsC
hpRokUsQhpSMCXRvdGFsX2FjY5RLAoaUaJFLEYaUjBNpbml0aWFsX2xpc3Rfc3RhdHVzlEsBhpRo
kUsShpSMDGxhc3RfcHltbnRfZJRLAYaUaJFLE4aUjA5lbXBfbGVuZ3RoX2ludJRLAoaUaJFLFIaU
jBVlYXJsaWVzdF9jcl9saW5lX2RhdGWUSwSGlGiRSxWGlIwbbXRoc19zaW5jZV9lYXJsaWVzdF9j
cl9saW5llEsChpRokUsWhpSMCHRlcm1faW50lEsChpRokUsXhpSMDGlzc3VlX2RfZGF0ZZRLBIaU
aJFLGIaUjBJtdGhzX3NpbmNlX2lzc3VlX2SUSwKGlGiRSxmGlIwIZ29vZF9iYWSUSwGGlIwFY2xh
c3OUSwCGlHVK/v///4aUaAdLAXWMCmF0dHJpYnV0ZXOUfZQojAlGZWF0dXJlIDGUSwKMCWxvYW5f
YW1udJRLAowLZnVuZGVkX2FtbnSUSwKMBHRlcm2USwGMCGludF9yYXRllEsCjAtpbnN0YWxsbWVu
dJRLAowFZ3JhZGWUSwGMCXN1Yl9ncmFkZZRLAYwKZW1wX2xlbmd0aJRLAYwOaG9tZV9vd25lcnNo
aXCUSwGMCmFubnVhbF9pbmOUSwKME3ZlcmlmaWNhdGlvbl9zdGF0dXOUSwGMB2lzc3VlX2SUSwGM
C2xvYW5fc3RhdHVzlEsBjAdwdXJwb3NllEsBjAphZGRyX3N0YXRllEsBjANkdGmUSwKMC2RlbGlu
cV8yeXJzlEsCjA5pbnFfbGFzdF82bXRoc5RLAowWbXRoc19zaW5jZV9sYXN0X2RlbGlucZRLAowW
bXRoc19zaW5jZV9sYXN0X3JlY29yZJRLAowIb3Blbl9hY2OUSwKMB3B1Yl9yZWOUSwKMCXJldm9s
X2JhbJRLAowKcmV2b2xfdXRpbJRLAowJdG90YWxfYWNjlEsCjBNpbml0aWFsX2xpc3Rfc3RhdHVz
lEsBjAlvdXRfcHJuY3CUSwKMC3RvdGFsX3B5bW50lEsCjA90b3RhbF9yZWNfcHJuY3CUSwKMDXRv
dGFsX3JlY19pbnSUSwKMEnRvdGFsX3JlY19sYXRlX2ZlZZRLAowKcmVjb3Zlcmllc5RLAowXY29s
bGVjdGlvbl9yZWNvdmVyeV9mZWWUSwKMDGxhc3RfcHltbnRfZJRLAYwPbGFzdF9weW1udF9hbW50
lEsCjBpjb2xsZWN0aW9uc18xMl9tdGhzX2V4X21lZJRLAYwbbXRoc19zaW5jZV9sYXN0X21ham9y
X2Rlcm9nlEsCjBBhbm51YWxfaW5jX2pvaW50lEsCjAlkdGlfam9pbnSUSwKMGXZlcmlmaWNhdGlv
bl9zdGF0dXNfam9pbnSUSwKMDmFjY19ub3dfZGVsaW5xlEsBjAx0b3RfY29sbF9hbXSUSwKMC3Rv
dF9jdXJfYmFslEsCjAtvcGVuX2FjY182bZRLAowKb3Blbl9pbF82bZRLAowLb3Blbl9pbF8xMm2U
SwKMC29wZW5faWxfMjRtlEsCjBJtdGhzX3NpbmNlX3JjbnRfaWyUSwKMDHRvdGFsX2JhbF9pbJRL
AowHaWxfdXRpbJRLAowLb3Blbl9ydl8xMm2USwKMC29wZW5fcnZfMjRtlEsCjAptYXhfYmFsX2Jj
lEsCjAhhbGxfdXRpbJRLAowQdG90YWxfcmV2X2hpX2xpbZRLAowGaW5xX2ZplEsCjAt0b3RhbF9j
dV90bJRLAowMaW5xX2xhc3RfMTJtlEsCjA5lbXBfbGVuZ3RoX2ludJRLAowVZWFybGllc3RfY3Jf
bGluZV9kYXRllEsEjBttdGhzX3NpbmNlX2VhcmxpZXN0X2NyX2xpbmWUSwKMCHRlcm1faW50lEsC
jAxpc3N1ZV9kX2RhdGWUSwSMEm10aHNfc2luY2VfaXNzdWVfZJRLAowIZ29vZF9iYWSUSwF1jAVt
ZXRhc5R9lCiMBGRlc2OUSwOMEGVhcmxpZXN0X2NyX2xpbmWUSwN1dWJoDCmBlH2UKGgPfZQojBFk
b21haW5fcm9sZV9oaW50c5R9lCiMC2Z1bmRlZF9hbW50lEsChpSMCWF2YWlsYWJsZZRLAIaUjAtp
bnN0YWxsbWVudJRLAoaUajIBAABLAYaUjApyZXZvbF91dGlslEsChpRqMgEAAEsChpSMAmlklEsC
hpRqMgEAAEsDhpSMClVubmFtZWQ6IDCUSwKGlGoyAQAASwSGlIwJRmVhdHVyZSAxlEsChpRqMgEA
AEsFhpSMCW91dF9wcm5jcJRLAoaUajIBAABLBoaUjAt0b3RhbF9weW1udJRLAoaUajIBAABLB4aU
jA90b3RhbF9yZWNfcHJuY3CUSwKGlGoyAQAASwiGlIwNdG90YWxfcmVjX2ludJRLAoaUajIBAABL
CYaUjBJ0b3RhbF9yZWNfbGF0ZV9mZWWUSwKGlGoyAQAASwqGlIwWbXRoc19zaW5jZV9sYXN0X3Jl
Y29yZJRLAoaUajIBAABLC4aUjAllbXBfdGl0bGWUSwOGlGoyAQAASwyGlIwIemlwX2NvZGWUSwOG
lGoyAQAASw2GlIwWbXRoc19zaW5jZV9sYXN0X2RlbGlucZRLAoaUajIBAABLDoaUjAV0aXRsZZRL
A4aUajIBAABLD4aUjAN1cmyUSwOGlGoyAQAASxCGlIwKcmVjb3Zlcmllc5RLAoaUajIBAABLEYaU
jBdjb2xsZWN0aW9uX3JlY292ZXJ5X2ZlZZRLAoaUajIBAABLEoaUjAxpbnFfbGFzdF8xMm2USwKG
lGoyAQAASxOGlIwPbGFzdF9weW1udF9hbW50lEsChpRqMgEAAEsUhpSMGmNvbGxlY3Rpb25zXzEy
X210aHNfZXhfbWVklEsBhpRqMgEAAEsVhpSMCGFsbF91dGlslEsChpRqMgEAAEsWhpSMDHRvdF9j
b2xsX2FtdJRLAoaUajIBAABLF4aUjAt0b3RhbF9jdV90bJRLAoaUajIBAABLGIaUjAtkZWxpbnFf
Mnlyc5RLAoaUajIBAABLGYaUjA5hY2Nfbm93X2RlbGlucZRLAYaUajIBAABLGoaUjAptYXhfYmFs
X2JjlEsChpRqMgEAAEsbhpSMBmlucV9maZRLAoaUajIBAABLHIaUjBB0b3RhbF9yZXZfaGlfbGlt
lEsChpRqMgEAAEsdhpSMC2xvYW5fc3RhdHVzlEsBhpRqMgEAAEsehpSMB3B1Yl9yZWOUSwKGlGoy
AQAASx+GlIwbbXRoc19zaW5jZV9sYXN0X21ham9yX2Rlcm9nlEsChpRqMgEAAEsghpSMEGFubnVh
bF9pbmNfam9pbnSUSwKGlGoyAQAASyGGlIwEZGVzY5RLA4aUajIBAABLIoaUjBBlYXJsaWVzdF9j
cl9saW5llEsDhpRqMgEAAEsjhpSMCWR0aV9qb2ludJRLAoaUajIBAABLJIaUjAx0b3RhbF9iYWxf
aWyUSwKGlGoyAQAASyWGlIwLb3Blbl9ydl8yNG2USwKGlGoyAQAASyaGlIwHaWxfdXRpbJRLAoaU
ajIBAABLJ4aUjAtvcGVuX3J2XzEybZRLAoaUajIBAABLKIaUjBJtdGhzX3NpbmNlX3JjbnRfaWyU
SwKGlGoyAQAASymGlIwZdmVyaWZpY2F0aW9uX3N0YXR1c19qb2ludJRLAoaUajIBAABLKoaUjAt0
b3RfY3VyX2JhbJRLAoaUajIBAABLK4aUjAtvcGVuX2FjY182bZRLAoaUajIBAABLLIaUjAtvcGVu
X2lsXzI0bZRLAoaUajIBAABLLYaUjAtvcGVuX2lsXzEybZRLAoaUajIBAABLLoaUjApvcGVuX2ls
XzZtlEsChpRqMgEAAEsvhpSMCWxvYW5fYW1udJRLAoaUjAlhdHRyaWJ1dGWUSwCGlIwEdGVybZRL
AYaUasMBAABLAYaUjAltZW1iZXJfaWSUSwKGlGrDAQAASwKGlIwIaW50X3JhdGWUSwKGlGrDAQAA
SwOGlIwFZ3JhZGWUSwGGlGrDAQAASwSGlIwJc3ViX2dyYWRllEsBhpRqwwEAAEsFhpSMD2Z1bmRl
ZF9hbW50X2ludpRLAoaUasMBAABLBoaUjAplbXBfbGVuZ3RolEsBhpRqwwEAAEsHhpSMDmhvbWVf
b3duZXJzaGlwlEsBhpRqwwEAAEsIhpSMCmFubnVhbF9pbmOUSwKGlGrDAQAASwmGlIwTdmVyaWZp
Y2F0aW9uX3N0YXR1c5RLAYaUasMBAABLCoaUjAdpc3N1ZV9klEsBhpRqwwEAAEsLhpSMB3B1cnBv
c2WUSwGGlGrDAQAASwyGlIwKYWRkcl9zdGF0ZZRLAYaUasMBAABLDYaUjANkdGmUSwKGlGrDAQAA
Sw6GlIwOaW5xX2xhc3RfNm10aHOUSwKGlGrDAQAASw+GlIwIb3Blbl9hY2OUSwKGlGrDAQAASxCG
lIwJcmV2b2xfYmFslEsChpRqwwEAAEsRhpSMCXRvdGFsX2FjY5RLAoaUasMBAABLEoaUjApweW1u
dF9wbGFulEsBhpRqwwEAAEsThpSME2luaXRpYWxfbGlzdF9zdGF0dXOUSwGGlGrDAQAASxSGlIwM
bGFzdF9weW1udF9klEsBhpRqwwEAAEsVhpSMDmVtcF9sZW5ndGhfaW50lEsChpRqwwEAAEsWhpSM
FWVhcmxpZXN0X2NyX2xpbmVfZGF0ZZRLBIaUasMBAABLF4aUjBttdGhzX3NpbmNlX2VhcmxpZXN0
X2NyX2xpbmWUSwKGlGrDAQAASxiGlIwIdGVybV9pbnSUSwKGlGrDAQAASxmGlIwMaXNzdWVfZF9k
YXRllEsEhpRqwwEAAEsahpSMEm10aHNfc2luY2VfaXNzdWVfZJRLAoaUasMBAABLG4aUjA1vdXRf
cHJuY3BfaW52lEsChpRqwwEAAEschpSMD3RvdGFsX3B5bW50X2ludpRLAoaUasMBAABLHYaUjAxu
ZXh0X3B5bW50X2SUSwGGlGrDAQAASx6GlIwSbGFzdF9jcmVkaXRfcHVsbF9klEsBhpRqwwEAAEsf
hpSMC3BvbGljeV9jb2RllEsBhpRqwwEAAEsghpSMEGFwcGxpY2F0aW9uX3R5cGWUSwGGlGrDAQAA
SyGGlIwIZ29vZF9iYWSUSwGGlIwFY2xhc3OUSwCGlHVK/v///4aUaAdLAXVo432UKGpAAQAASwJq
PQEAAEsCajoBAABLAmrIAQAASwJqwQEAAEsCajABAABLAmrUAQAASwJqxQEAAEsBassBAABLAmo0
AQAASwJqzgEAAEsBatEBAABLAWrXAQAASwFq2gEAAEsBat0BAABLAmrgAQAASwFq4wEAAEsBaosB
AABLAWr7AQAASwFq5gEAAEsBaukBAABLAWrsAQAASwJqfAEAAEsCau8BAABLAmpbAQAASwJqUgEA
AEsCavIBAABLAmqOAQAASwJq9QEAAEsCajcBAABLAmr4AQAASwJq/gEAAEsBakMBAABLAmoWAgAA
SwJqRgEAAEsCahkCAABLAmpJAQAASwJqTAEAAEsCak8BAABLAmpkAQAASwJqZwEAAEsCagECAABL
AWptAQAASwJqHAIAAEsBah8CAABLAWpwAQAASwFqkQEAAEsCaiICAABLAWolAgAASwFqlAEAAEsC
ap0BAABLAmqvAQAASwJqfwEAAEsBanYBAABLAmqyAQAASwJqtQEAAEsCar4BAABLAmq7AQAASwJq
uAEAAEsCaqwBAABLAmqgAQAASwJqpgEAAEsCaqkBAABLAmqjAQAASwJqggEAAEsCanMBAABLAmqI
AQAASwJqhQEAAEsCankBAABLAmpqAQAASwJqBAIAAEsCagcCAABLBGoKAgAASwJqDQIAAEsCahAC
AABLBGoTAgAASwJqKAIAAEsBdWonAQAAfZQoalUBAABLA2phAQAASwNqlwEAAEsDal4BAABLA2pY
AQAASwNqmgEAAEsDdXViZXUu
</properties>
		<properties node_id="14" format="pickle">gASVXh8AAAAAAAB9lCiMC2F1dG9fY29tbWl0lIiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBNpZ25v
cmVfbmV3X2ZlYXR1cmVzlImME3NhdmVkV2lkZ2V0R2VvbWV0cnmUQ0IB2dDLAAMAAP///aUAAADO
////ZgAAAnD///2mAAAA4////2UAAAJvAAAAAQAAAAAHgP///aYAAADj////ZQAAAm+UjBJ1c2Vf
aW5wdXRfZmVhdHVyZXOUiYwLX192ZXJzaW9uX1+USwGMEGNvbnRleHRfc2V0dGluZ3OUXZQojBVv
cmFuZ2V3aWRnZXQuc2V0dGluZ3OUjAdDb250ZXh0lJOUKYGUfZQojAZ2YWx1ZXOUfZQojBFkb21h
aW5fcm9sZV9oaW50c5R9lCiMBHRlcm2USwGGlIwJYXZhaWxhYmxllEsAhpSMCUZlYXR1cmUgMZRL
AoaUaBVLAYaUjAVncmFkZZRLAYaUaBVLAoaUjAlzdWJfZ3JhZGWUSwGGlGgVSwOGlIwKZW1wX2xl
bmd0aJRLAYaUaBVLBIaUjA5ob21lX293bmVyc2hpcJRLAYaUaBVLBYaUjBN2ZXJpZmljYXRpb25f
c3RhdHVzlEsBhpRoFUsGhpSMB2lzc3VlX2SUSwGGlGgVSweGlIwKYWRkcl9zdGF0ZZRLAYaUaBVL
CIaUjAdwdXJwb3NllEsBhpRoFUsJhpSME2luaXRpYWxfbGlzdF9zdGF0dXOUSwGGlGgVSwqGlIwM
bGFzdF9weW1udF9klEsBhpRoFUsLhpSMFWVhcmxpZXN0X2NyX2xpbmVfZGF0ZZRLBIaUaBVLDIaU
jAxpc3N1ZV9kX2RhdGWUSwSGlGgVSw2GlIwJbG9hbl9hbW50lEsChpSMCWF0dHJpYnV0ZZRLAIaU
jAhpbnRfcmF0ZZRLAoaUaEBLAYaUjAphbm51YWxfaW5jlEsChpRoQEsChpSMA2R0aZRLAoaUaEBL
A4aUjA5pbnFfbGFzdF82bXRoc5RLAoaUaEBLBIaUjAhvcGVuX2FjY5RLAoaUaEBLBYaUjAlyZXZv
bF9iYWyUSwKGlGhASwaGlIwJdG90YWxfYWNjlEsChpRoQEsHhpSMDmVtcF9sZW5ndGhfaW50lEsC
hpRoQEsIhpSMG210aHNfc2luY2VfZWFybGllc3RfY3JfbGluZZRLAoaUaEBLCYaUjAh0ZXJtX2lu
dJRLAoaUaEBLCoaUjBJtdGhzX3NpbmNlX2lzc3VlX2SUSwKGlGhASwuGlIwIZ29vZF9iYWSUSwGG
lIwFY2xhc3OUSwCGlHVK/v///4aUaAdLAXWMCmF0dHJpYnV0ZXOUfZQojAlGZWF0dXJlIDGUSwKM
CWxvYW5fYW1udJRLAowEdGVybZRLAYwIaW50X3JhdGWUSwKMBWdyYWRllEsBjAlzdWJfZ3JhZGWU
SwGMCmVtcF9sZW5ndGiUSwGMDmhvbWVfb3duZXJzaGlwlEsBjAphbm51YWxfaW5jlEsCjBN2ZXJp
ZmljYXRpb25fc3RhdHVzlEsBjAdpc3N1ZV9klEsBjAdwdXJwb3NllEsBjAphZGRyX3N0YXRllEsB
jANkdGmUSwKMDmlucV9sYXN0XzZtdGhzlEsCjAhvcGVuX2FjY5RLAowJcmV2b2xfYmFslEsCjAl0
b3RhbF9hY2OUSwKME2luaXRpYWxfbGlzdF9zdGF0dXOUSwGMDGxhc3RfcHltbnRfZJRLAYwOZW1w
X2xlbmd0aF9pbnSUSwKMFWVhcmxpZXN0X2NyX2xpbmVfZGF0ZZRLBIwbbXRoc19zaW5jZV9lYXJs
aWVzdF9jcl9saW5llEsCjAh0ZXJtX2ludJRLAowMaXNzdWVfZF9kYXRllEsEjBJtdGhzX3NpbmNl
X2lzc3VlX2SUSwKMCGdvb2RfYmFklEsBdYwFbWV0YXOUfZR1YmgMKYGUfZQoaA99lCiMEWRvbWFp
bl9yb2xlX2hpbnRzlH2UKIwEdGVybZRLAYaUjAlhdmFpbGFibGWUSwCGlIwFZ3JhZGWUSwGGlGiO
SwGGlIwJc3ViX2dyYWRllEsBhpRojksChpSMCW1lbWJlcl9pZJRLAoaUaI5LA4aUjAplbXBfbGVu
Z3RolEsBhpRojksEhpSMDmhvbWVfb3duZXJzaGlwlEsBhpRojksFhpSME3ZlcmlmaWNhdGlvbl9z
dGF0dXOUSwGGlGiOSwaGlIwKcHltbnRfcGxhbpRLAYaUaI5LB4aUjAtwb2xpY3lfY29kZZRLAYaU
aI5LCIaUjBJsYXN0X2NyZWRpdF9wdWxsX2SUSwGGlGiOSwmGlIwMbmV4dF9weW1udF9klEsBhpRo
jksKhpSMB2lzc3VlX2SUSwGGlGiOSwuGlIwQYXBwbGljYXRpb25fdHlwZZRLAYaUaI5LDIaUjAph
ZGRyX3N0YXRllEsBhpRojksNhpSMB3B1cnBvc2WUSwGGlGiOSw6GlIwTaW5pdGlhbF9saXN0X3N0
YXR1c5RLAYaUaI5LD4aUjAxsYXN0X3B5bW50X2SUSwGGlGiOSxCGlIwVZWFybGllc3RfY3JfbGlu
ZV9kYXRllEsEhpRojksRhpSMDGlzc3VlX2RfZGF0ZZRLBIaUaI5LEoaUjAlsb2FuX2FtbnSUSwKG
lIwJYXR0cmlidXRllEsAhpSMCGludF9yYXRllEsChpRoyEsBhpSMCmFubnVhbF9pbmOUSwKGlGjI
SwKGlIwDZHRplEsChpRoyEsDhpSMDmlucV9sYXN0XzZtdGhzlEsChpRoyEsEhpSMCG9wZW5fYWNj
lEsChpRoyEsFhpSMD2Z1bmRlZF9hbW50X2ludpRLAoaUaMhLBoaUjAlyZXZvbF9iYWyUSwKGlGjI
SweGlIwJdG90YWxfYWNjlEsChpRoyEsIhpSMDmVtcF9sZW5ndGhfaW50lEsChpRoyEsJhpSMG210
aHNfc2luY2VfZWFybGllc3RfY3JfbGluZZRLAoaUaMhLCoaUjAh0ZXJtX2ludJRLAoaUaMhLC4aU
jBJtdGhzX3NpbmNlX2lzc3VlX2SUSwKGlGjISwyGlIwNb3V0X3BybmNwX2ludpRLAoaUaMhLDYaU
jA90b3RhbF9weW1udF9pbnaUSwKGlGjISw6GlIwIZ29vZF9iYWSUSwGGlIwFY2xhc3OUSwCGlHVK
/v///4aUaAdLAXVoaH2UKGjGSwJojEsBaJZLAmjKSwJokEsBaJNLAWjZSwJomUsBaJxLAWjNSwJo
n0sBaK5LAWi3SwFotEsBaNBLAmjTSwJo1ksCaNxLAmjfSwJooksBaLpLAWi9SwFo4ksCaMBLBGjl
SwJo6EsCaMNLBGjrSwJo7ksCaPFLAmirSwFoqEsBaKVLAWixSwFo9EsBdWiFfZR1YmgMKYGUfZQo
aA99lChoin2UKGiMSwGGlGiOSwCGlGiQSwGGlGiOSwGGlGiTSwGGlGiOSwKGlGiZSwGGlGiOSwOG
lGicSwGGlGiOSwSGlGifSwGGlGiOSwWGlGiuSwGGlGiOSwaGlGi0SwGGlGiOSweGlGi3SwGGlGiO
SwiGlGi6SwGGlGiOSwmGlGi9SwGGlGiOSwqGlGjASwSGlGiOSwuGlGjDSwSGlGiOSwyGlGj0SwGG
lGiOSw2GlGjGSwKGlGjISwCGlGjKSwKGlGjISwGGlGiWSwKGlGjISwKGlGjNSwKGlGjISwOGlGjQ
SwKGlGjISwSGlGjTSwKGlGjISwWGlGjWSwKGlGjISwaGlGjZSwKGlGjISweGlGjcSwKGlGjISwiG
lGjfSwKGlGjISwmGlGjiSwKGlGjISwqGlGjlSwKGlGjISwuGlGjoSwKGlGjISwyGlGjrSwKGlGjI
Sw2GlGiiSwGGlGjISw6GlGjuSwKGlGjISw+GlGjxSwKGlGjISxCGlGirSwGGlGjISxGGlGioSwGG
lGjISxKGlGilSwGGlGjISxOGlGixSwGGlGjISxSGlIwIemlwX2NvZGWUSwOGlIwEbWV0YZRLAIaU
dUr+////hpRoB0sBdWhofZQoaMZLAmiMSwFolksCaMpLAmiQSwFok0sBaNlLAmiZSwFonEsBaM1L
AmifSwForksBaLdLAWi0SwFo0EsCaNNLAmjWSwJo3EsCaN9LAmiiSwFouksBaL1LAWjiSwJowEsE
aOVLAmjoSwJow0sEaOtLAmjuSwJo8UsCaKtLAWioSwFopUsBaLFLAWj0SwF1aIV9lGpFAQAASwNz
dWJoDCmBlH2UKGgPfZQoaIp9lChojEsBhpRojksAhpRokEsBhpRojksBhpRok0sBhpRojksChpRo
mUsBhpRojksDhpRonEsBhpRojksEhpRon0sBhpRojksFhpRorksBhpRojksGhpRotEsBhpRojksH
hpRot0sBhpRojksIhpRouksBhpRojksJhpRovUsBhpRojksKhpRowEsEhpRojksLhpRow0sEhpRo
jksMhpRo9EsBhpRojksNhpRoxksChpRoyEsAhpRoyksChpRoyEsBhpRolksChpRoyEsChpRozUsC
hpRoyEsDhpRo0EsChpRoyEsEhpRo00sChpRoyEsFhpRo1ksChpRoyEsGhpRo2UsChpRoyEsHhpRo
3EsChpRoyEsIhpRo30sChpRoyEsJhpRo4ksChpRoyEsKhpRo5UsChpRoyEsLhpRo6EsChpRoyEsM
hpRo60sChpRoyEsNhpRooksBhpRoyEsOhpRo7ksChpRoyEsPhpRo8UsChpRoyEsQhpRoq0sBhpRo
yEsRhpRoqEsBhpRoyEsShpRopUsBhpRoyEsThpRosUsBhpRoyEsUhpSMCWVtcF90aXRsZZRLA4aU
akcBAABLAIaUakUBAABLA4aUakcBAABLAYaUdUr+////hpRoB0sBdWhofZQoaMZLAmiMSwFolksC
aMpLAmiQSwFok0sBaNlLAmiZSwFonEsBaM1LAmifSwForksBaLdLAWi0SwFo0EsCaNNLAmjWSwJo
3EsCaN9LAmiiSwFouksBaL1LAWjiSwJowEsEaOVLAmjoSwJow0sEaOtLAmjuSwJo8UsCaKtLAWio
SwFopUsBaLFLAWj0SwF1aIV9lChqlgEAAEsDakUBAABLA3V1YmgMKYGUfZQoaA99lChoin2UKGiM
SwGGlGiOSwCGlGiQSwGGlGiOSwGGlGiTSwGGlGiOSwKGlGiZSwGGlGiOSwOGlGicSwGGlGiOSwSG
lGifSwGGlGiOSwWGlGiuSwGGlGiOSwaGlGi0SwGGlGiOSweGlGi3SwGGlGiOSwiGlGi6SwGGlGiO
SwmGlGi9SwGGlGiOSwqGlGjASwSGlGiOSwuGlGjDSwSGlGiOSwyGlGj0SwGGlGiOSw2GlGjGSwKG
lGjISwCGlGjKSwKGlGjISwGGlGiWSwKGlGjISwKGlGjNSwKGlGjISwOGlGjQSwKGlGjISwSGlGjT
SwKGlGjISwWGlGjWSwKGlGjISwaGlGjZSwKGlGjISweGlGjcSwKGlGjISwiGlGjfSwKGlGjISwmG
lGjiSwKGlGjISwqGlGjlSwKGlGjISwuGlGjoSwKGlGjISwyGlGjrSwKGlGjISw2GlGiiSwGGlGjI
Sw6GlGjuSwKGlGjISw+GlGjxSwKGlGjISxCGlGirSwGGlGjISxGGlGioSwGGlGjISxKGlGilSwGG
lGjISxOGlGixSwGGlGjISxSGlGqWAQAASwOGlGpHAQAASwCGlIwFdGl0bGWUSwOGlGpHAQAASwGG
lGpFAQAASwOGlGpHAQAASwKGlHVK/v///4aUaAdLAXVoaH2UKGjGSwJojEsBaJZLAmjKSwJokEsB
aJNLAWjZSwJomUsBaJxLAWjNSwJon0sBaK5LAWi3SwFotEsBaNBLAmjTSwJo1ksCaNxLAmjfSwJo
oksBaLpLAWi9SwFo4ksCaMBLBGjlSwJo6EsCaMNLBGjrSwJo7ksCaPFLAmirSwFoqEsBaKVLAWix
SwFo9EsBdWiFfZQoapYBAABLA2rqAQAASwNqRQEAAEsDdXViaAwpgZR9lChoD32UKGiKfZQoaIxL
AYaUaI5LAIaUaJBLAYaUaI5LAYaUaJNLAYaUaI5LAoaUaJlLAYaUaI5LA4aUaJxLAYaUaI5LBIaU
aJ9LAYaUaI5LBYaUaK5LAYaUaI5LBoaUaLRLAYaUaI5LB4aUaLdLAYaUaI5LCIaUaLpLAYaUaI5L
CYaUaL1LAYaUaI5LCoaUaMBLBIaUaI5LC4aUaMNLBIaUaI5LDIaUaPRLAYaUaI5LDYaUaMZLAoaU
aMhLAIaUaMpLAoaUaMhLAYaUaJZLAoaUaMhLAoaUaM1LAoaUaMhLA4aUaNBLAoaUaMhLBIaUaNNL
AoaUaMhLBYaUaNZLAoaUaMhLBoaUaNlLAoaUaMhLB4aUaNxLAoaUaMhLCIaUaN9LAoaUaMhLCYaU
aOJLAoaUaMhLCoaUaOVLAoaUaMhLC4aUaOhLAoaUaMhLDIaUaOtLAoaUaMhLDYaUaKJLAYaUaMhL
DoaUaO5LAoaUaMhLD4aUaPFLAoaUaMhLEIaUaKtLAYaUaMhLEYaUaKhLAYaUaMhLEoaUaKVLAYaU
aMhLE4aUaLFLAYaUaMhLFIaUapYBAABLA4aUakcBAABLAIaUjAN1cmyUSwOGlGpHAQAASwGGlGrq
AQAASwOGlGpHAQAASwKGlGpFAQAASwOGlGpHAQAASwOGlHVK/v///4aUaAdLAXVoaH2UKGjGSwJo
jEsBaJZLAmjKSwJokEsBaJNLAWjZSwJomUsBaJxLAWjNSwJon0sBaK5LAWi3SwFotEsBaNBLAmjT
SwJo1ksCaNxLAmjfSwJooksBaLpLAWi9SwFo4ksCaMBLBGjlSwJo6EsCaMNLBGjrSwJo7ksCaPFL
AmirSwFoqEsBaKVLAWixSwFo9EsBdWiFfZQoapYBAABLA2o+AgAASwNq6gEAAEsDakUBAABLA3V1
YmgMKYGUfZQoaA99lChoin2UKGiMSwGGlGiOSwCGlGiQSwGGlGiOSwGGlGiTSwGGlGiOSwKGlGiZ
SwGGlGiOSwOGlGicSwGGlGiOSwSGlGifSwGGlGiOSwWGlGiuSwGGlGiOSwaGlGi0SwGGlGiOSweG
lGi3SwGGlGiOSwiGlGi6SwGGlGiOSwmGlGi9SwGGlGiOSwqGlGjASwSGlGiOSwuGlGjDSwSGlGiO
SwyGlGj0SwGGlGiOSw2GlGjGSwKGlGjISwCGlIwCaWSUSwKGlGjISwGGlGjKSwKGlGjISwKGlGjN
SwKGlGjISwOGlGiWSwKGlGjISwSGlGjQSwKGlGjISwWGlGjTSwKGlGjISwaGlGjWSwKGlGjISweG
lGjcSwKGlGjISwiGlGjZSwKGlGjISwmGlGjfSwKGlGjISwqGlGjiSwKGlGjISwuGlGjlSwKGlGjI
SwyGlGjoSwKGlGjISw2GlGjrSwKGlGjISw6GlGiiSwGGlGjISw+GlGjuSwKGlGjISxCGlGjxSwKG
lGjISxGGlGirSwGGlGjISxKGlGioSwGGlGjISxOGlGilSwGGlGjISxSGlGixSwGGlGjISxWGlGqW
AQAASwOGlGpHAQAASwCGlGo+AgAASwOGlGpHAQAASwGGlGrqAQAASwOGlGpHAQAASwKGlGpFAQAA
SwOGlGpHAQAASwOGlHVK/v///4aUaAdLAXVoaH2UKGjGSwJqagIAAEsCaIxLAWiWSwJoyksCaJBL
AWiTSwFo2UsCaJlLAWicSwFozUsCaJ9LAWiuSwFot0sBaLRLAWjQSwJo00sCaNZLAmjcSwJo30sC
aKJLAWi6SwFovUsBaOJLAmjASwRo5UsCaOhLAmjDSwRo60sCaO5LAmjxSwJoq0sBaKhLAWilSwFo
sUsBaPRLAXVohX2UKGqWAQAASwNqPgIAAEsDauoBAABLA2pFAQAASwN1dWJoDCmBlH2UKGgPfZQo
aIp9lChojEsBhpRojksAhpRokEsBhpRojksBhpRok0sBhpRojksChpRomUsBhpRojksDhpRonEsB
hpRojksEhpRon0sBhpRojksFhpRorksBhpRojksGhpRotEsBhpRojksHhpRot0sBhpRojksIhpRo
9EsBhpRojksJhpRoxksChpRoyEsAhpSMClVubmFtZWQ6IDCUSwKGlGjISwGGlGjKSwKGlGjISwKG
lGjNSwKGlGjISwOGlGpqAgAASwKGlGjISwSGlGjQSwKGlGjISwWGlGjTSwKGlGjISwaGlGiWSwKG
lGjISweGlGjWSwKGlGjISwiGlGjcSwKGlGjISwmGlGjfSwKGlGjISwqGlGjZSwKGlGjISwuGlGii
SwGGlGjISwyGlGi6SwGGlGjISw2GlGi9SwGGlGjISw6GlGjiSwKGlGjISw+GlGjASwSGlGjISxCG
lGjlSwKGlGjISxGGlGjoSwKGlGjISxKGlGjDSwSGlGjISxOGlGjrSwKGlGjISxSGlGjuSwKGlGjI
SxWGlGjxSwKGlGjISxaGlGirSwGGlGjISxeGlGioSwGGlGjISxiGlGilSwGGlGjISxmGlGixSwGG
lGjISxqGlGqWAQAASwOGlGpHAQAASwCGlGo+AgAASwOGlGpHAQAASwGGlGrqAQAASwOGlGpHAQAA
SwKGlGpFAQAASwOGlGpHAQAASwOGlHVK/v///4aUaAdLAXVoaH2UKGq6AgAASwJoxksCamoCAABL
AmiMSwFolksCaMpLAmiQSwFok0sBaNlLAmiZSwFonEsBaM1LAmifSwForksBaLdLAWi0SwFo0EsC
aNNLAmjWSwJo3EsCaN9LAmiiSwFouksBaL1LAWjiSwJowEsEaOVLAmjoSwJow0sEaOtLAmjuSwJo
8UsCaKtLAWioSwFopUsBaLFLAWj0SwF1aIV9lChqlgEAAEsDaj4CAABLA2rqAQAASwNqRQEAAEsD
dXViaAwpgZR9lChoD32UKGiKfZQoaIxLAYaUaI5LAIaUjAlGZWF0dXJlIDGUSwKGlGiOSwGGlGiQ
SwGGlGiOSwKGlGiTSwGGlGiOSwOGlGiZSwGGlGiOSwSGlGicSwGGlGiOSwWGlGifSwGGlGiOSwaG
lGiuSwGGlGiOSweGlGi0SwGGlGiOSwiGlGi3SwGGlGiOSwmGlGj0SwGGlGiOSwqGlGjGSwKGlGjI
SwCGlGq6AgAASwKGlGjISwGGlGjKSwKGlGjISwKGlGjNSwKGlGjISwOGlGpqAgAASwKGlGjISwSG
lGjQSwKGlGjISwWGlGjTSwKGlGjISwaGlGiWSwKGlGjISweGlGjWSwKGlGjISwiGlGjcSwKGlGjI
SwmGlGjfSwKGlGjISwqGlGjZSwKGlGjISwuGlGiiSwGGlGjISwyGlGi6SwGGlGjISw2GlGi9SwGG
lGjISw6GlGjiSwKGlGjISw+GlGjASwSGlGjISxCGlGjlSwKGlGjISxGGlGjoSwKGlGjISxKGlGjD
SwSGlGjISxOGlGjrSwKGlGjISxSGlGjuSwKGlGjISxWGlGjxSwKGlGjISxaGlGirSwGGlGjISxeG
lGioSwGGlGjISxiGlGilSwGGlGjISxmGlGixSwGGlGjISxqGlGqWAQAASwOGlGpHAQAASwCGlGo+
AgAASwOGlGpHAQAASwGGlGrqAQAASwOGlGpHAQAASwKGlGpFAQAASwOGlGpHAQAASwOGlHVK/v//
/4aUaAdLAXVoaH2UKGoAAwAASwJqugIAAEsCaMZLAmpqAgAASwJojEsBaJZLAmjKSwJokEsBaJNL
AWjZSwJomUsBaJxLAWjNSwJon0sBaK5LAWi3SwFotEsBaNBLAmjTSwJo1ksCaNxLAmjfSwJooksB
aLpLAWi9SwFo4ksCaMBLBGjlSwJo6EsCaMNLBGjrSwJo7ksCaPFLAmirSwFoqEsBaKVLAWixSwFo
9EsBdWiFfZQoapYBAABLA2o+AgAASwNq6gEAAEsDakUBAABLA3V1YmgMKYGUfZQoaA99lChoin2U
KGiMSwGGlGiOSwCGlGoAAwAASwKGlGiOSwGGlGiQSwGGlGiOSwKGlGiTSwGGlGiOSwOGlGiZSwGG
lGiOSwSGlGicSwGGlGiOSwWGlGifSwGGlGiOSwaGlGiuSwGGlGiOSweGlGi0SwGGlGiOSwiGlGi3
SwGGlGiOSwmGlGj0SwGGlGiOSwqGlGjGSwKGlGjISwCGlGq6AgAASwKGlGjISwGGlGjKSwKGlGjI
SwKGlGjNSwKGlGjISwOGlGpqAgAASwKGlGjISwSGlGjQSwKGlGjISwWGlGjTSwKGlGjISwaGlGiW
SwKGlGjISweGlGjWSwKGlGjISwiGlGjcSwKGlGjISwmGlGjfSwKGlGjISwqGlGjZSwKGlGjISwuG
lGqWAQAASwOGlGpHAQAASwCGlGo+AgAASwOGlGpHAQAASwGGlGrqAQAASwOGlGpHAQAASwKGlGpF
AQAASwOGlGpHAQAASwOGlHVK/v///4aUaAdLAXVoaH2UKGoAAwAASwJqugIAAEsCaMZLAmpqAgAA
SwJojEsBaJZLAmjKSwJokEsBaJNLAWjZSwJomUsBaJxLAWjNSwJon0sBaK5LAWi3SwFotEsBaNBL
AmjTSwJo1ksCaNxLAmjfSwJo9EsBdWiFfZQoapYBAABLA2o+AgAASwNq6gEAAEsDakUBAABLA3V1
YmV1Lg==
</properties>
		<properties node_id="15" format="pickle">gASVUh8AAAAAAAB9lCiMC2F1dG9fY29tbWl0lIiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBNpZ25v
cmVfbmV3X2ZlYXR1cmVzlImME3NhdmVkV2lkZ2V0R2VvbWV0cnmUQ0IB2dDLAAMAAAAAB4AAAAC3
AAALAwAAA1sAAAeAAAAA3AAACwMAAANbAAAAAQAAAAAHgAAAB4AAAADcAAALAwAAA1uUjBJ1c2Vf
aW5wdXRfZmVhdHVyZXOUiYwLX192ZXJzaW9uX1+USwGMEGNvbnRleHRfc2V0dGluZ3OUXZQojBVv
cmFuZ2V3aWRnZXQuc2V0dGluZ3OUjAdDb250ZXh0lJOUKYGUfZQojAZ2YWx1ZXOUfZQojBFkb21h
aW5fcm9sZV9oaW50c5R9lCiMCUZlYXR1cmUgMZRLAoaUjAlhdmFpbGFibGWUSwCGlIwJbG9hbl9h
bW50lEsChpRoFUsBhpSMCGludF9yYXRllEsChpRoFUsChpSMCmFubnVhbF9pbmOUSwKGlGgVSwOG
lIwDZHRplEsChpRoFUsEhpSMDmlucV9sYXN0XzZtdGhzlEsChpRoFUsFhpSMCG9wZW5fYWNjlEsC
hpRoFUsGhpSMCXJldm9sX2JhbJRLAoaUaBVLB4aUjAl0b3RhbF9hY2OUSwKGlGgVSwiGlIwOZW1w
X2xlbmd0aF9pbnSUSwKGlGgVSwmGlIwVZWFybGllc3RfY3JfbGluZV9kYXRllEsEhpRoFUsKhpSM
G210aHNfc2luY2VfZWFybGllc3RfY3JfbGluZZRLAoaUaBVLC4aUjAxpc3N1ZV9kX2RhdGWUSwSG
lGgVSwyGlIwSbXRoc19zaW5jZV9pc3N1ZV9klEsChpRoFUsNhpSMCHRlcm1faW50lEsChpRoFUsO
hpSMCGdvb2RfYmFklEsBhpRoFUsPhpSMBHRlcm2USwGGlIwJYXR0cmlidXRllEsAhpSMBWdyYWRl
lEsBhpRoRksBhpSMCXN1Yl9ncmFkZZRLAYaUaEZLAoaUjAplbXBfbGVuZ3RolEsBhpRoRksDhpSM
DmhvbWVfb3duZXJzaGlwlEsBhpRoRksEhpSME3ZlcmlmaWNhdGlvbl9zdGF0dXOUSwGGlGhGSwWG
lIwHaXNzdWVfZJRLAYaUaEZLBoaUjAdwdXJwb3NllEsBhpRoRksHhpSMCmFkZHJfc3RhdGWUSwGG
lGhGSwiGlIwTaW5pdGlhbF9saXN0X3N0YXR1c5RLAYaUaEZLCYaUjAxsYXN0X3B5bW50X2SUSwGG
lGhGSwqGlHVK/v///4aUaAdLAXWMCmF0dHJpYnV0ZXOUfZQojAlGZWF0dXJlIDGUSwKMCWxvYW5f
YW1udJRLAowEdGVybZRLAYwIaW50X3JhdGWUSwKMBWdyYWRllEsBjAlzdWJfZ3JhZGWUSwGMCmVt
cF9sZW5ndGiUSwGMDmhvbWVfb3duZXJzaGlwlEsBjAphbm51YWxfaW5jlEsCjBN2ZXJpZmljYXRp
b25fc3RhdHVzlEsBjAdpc3N1ZV9klEsBjAdwdXJwb3NllEsBjAphZGRyX3N0YXRllEsBjANkdGmU
SwKMDmlucV9sYXN0XzZtdGhzlEsCjAhvcGVuX2FjY5RLAowJcmV2b2xfYmFslEsCjAl0b3RhbF9h
Y2OUSwKME2luaXRpYWxfbGlzdF9zdGF0dXOUSwGMDGxhc3RfcHltbnRfZJRLAYwOZW1wX2xlbmd0
aF9pbnSUSwKMFWVhcmxpZXN0X2NyX2xpbmVfZGF0ZZRLBIwbbXRoc19zaW5jZV9lYXJsaWVzdF9j
cl9saW5llEsCjAh0ZXJtX2ludJRLAowMaXNzdWVfZF9kYXRllEsEjBJtdGhzX3NpbmNlX2lzc3Vl
X2SUSwKMCGdvb2RfYmFklEsBdYwFbWV0YXOUfZR1YmgMKYGUfZQoaA99lCiMEWRvbWFpbl9yb2xl
X2hpbnRzlH2UKIwNb3V0X3BybmNwX2ludpRLAoaUjAlhdmFpbGFibGWUSwCGlIwPdG90YWxfcHlt
bnRfaW52lEsChpRojUsBhpSMBHRlcm2USwGGlGiNSwKGlIwPZnVuZGVkX2FtbnRfaW52lEsChpRo
jUsDhpSMBWdyYWRllEsBhpRojUsEhpSMCmFubnVhbF9pbmOUSwKGlGiNSwWGlIwHaXNzdWVfZJRL
AYaUaI1LBoaUjAltZW1iZXJfaWSUSwKGlGiNSweGlIwQYXBwbGljYXRpb25fdHlwZZRLAYaUaI1L
CIaUjANkdGmUSwKGlGiNSwmGlIwOaW5xX2xhc3RfNm10aHOUSwKGlGiNSwqGlIwJbG9hbl9hbW50
lEsChpRojUsLhpSMC3BvbGljeV9jb2RllEsBhpRojUsMhpSMCGludF9yYXRllEsChpRojUsNhpSM
CG9wZW5fYWNjlEsChpRojUsOhpSMCXJldm9sX2JhbJRLAoaUaI1LD4aUjAl0b3RhbF9hY2OUSwKG
lGiNSxCGlIwOZW1wX2xlbmd0aF9pbnSUSwKGlGiNSxGGlIwVZWFybGllc3RfY3JfbGluZV9kYXRl
lEsEhpRojUsShpSMG210aHNfc2luY2VfZWFybGllc3RfY3JfbGluZZRLAoaUaI1LE4aUjAxpc3N1
ZV9kX2RhdGWUSwSGlGiNSxSGlIwSbXRoc19zaW5jZV9pc3N1ZV9klEsChpRojUsVhpSMCHRlcm1f
aW50lEsChpRojUsWhpSMCGdvb2RfYmFklEsBhpRojUsXhpSMCXN1Yl9ncmFkZZRLAYaUjAlhdHRy
aWJ1dGWUSwCGlIwKZW1wX2xlbmd0aJRLAYaUaNZLAYaUjA5ob21lX293bmVyc2hpcJRLAYaUaNZL
AoaUjBN2ZXJpZmljYXRpb25fc3RhdHVzlEsBhpRo1ksDhpSMB3B1cnBvc2WUSwGGlGjWSwSGlIwK
YWRkcl9zdGF0ZZRLAYaUaNZLBYaUjBNpbml0aWFsX2xpc3Rfc3RhdHVzlEsBhpRo1ksGhpSMDGxh
c3RfcHltbnRfZJRLAYaUaNZLB4aUjApweW1udF9wbGFulEsBhpRo1ksIhpSMDG5leHRfcHltbnRf
ZJRLAYaUaNZLCYaUjBJsYXN0X2NyZWRpdF9wdWxsX2SUSwGGlGjWSwqGlHVK/v///4aUaAdLAXVo
Z32UKGitSwJokksBaKFLAmizSwJomEsBaNRLAWiVSwJo2EsBaNtLAWibSwJo3ksBaJ5LAWjhSwFo
5EsBaKdLAmiqSwJotksCaLlLAmi8SwJo7UsBaOdLAWjqSwFov0sCaMJLBGjFSwJozksCaMhLBGjL
SwJoi0sCaI9LAmjwSwFo80sBaLBLAWikSwFo0UsBdWiEfZR1YmgMKYGUfZQoaA99lChoiX2UKGit
SwKGlGiNSwCGlGizSwKGlGiNSwGGlGibSwKGlGiNSwKGlGinSwKGlGiNSwOGlGiqSwKGlGiNSwSG
lGi2SwKGlGiNSwWGlGi5SwKGlGiNSwaGlGi8SwKGlGiNSweGlGi/SwKGlGiNSwiGlGjCSwSGlGiN
SwmGlGjFSwKGlGiNSwqGlGjISwSGlGiNSwuGlGjLSwKGlGiNSwyGlGjOSwKGlGiNSw2GlGjRSwGG
lGiNSw6GlGiSSwGGlGjWSwCGlGiYSwGGlGjWSwGGlGihSwKGlGjWSwKGlGjUSwGGlGjWSwOGlGjY
SwGGlGjWSwSGlGjbSwGGlGjWSwWGlGjeSwGGlGjWSwaGlGiVSwKGlGjWSweGlGieSwGGlGjWSwiG
lGjhSwGGlGjWSwmGlGjkSwGGlGjWSwqGlGjnSwGGlGjWSwuGlGjqSwGGlGjWSwyGlGjtSwGGlGjW
Sw2GlGiLSwKGlGjWSw6GlGiPSwKGlGjWSw+GlGjwSwGGlGjWSxCGlGjzSwGGlGjWSxGGlGiwSwGG
lGjWSxKGlGikSwGGlGjWSxOGlIwIemlwX2NvZGWUSwOGlIwEbWV0YZRLAIaUdUr+////hpRoB0sB
dWhnfZQoaK1LAmiSSwFooUsCaLNLAmiYSwFo1EsBaJVLAmjYSwFo20sBaJtLAmjeSwFonksBaOFL
AWjkSwFop0sCaKpLAmi2SwJouUsCaLxLAmjtSwFo50sBaOpLAWi/SwJowksEaMVLAmjOSwJoyEsE
aMtLAmiLSwJoj0sCaPBLAWjzSwFosEsBaKRLAWjRSwF1aIR9lGpDAQAASwNzdWJoDCmBlH2UKGgP
fZQoaIl9lChorUsChpRojUsAhpRos0sChpRojUsBhpRom0sChpRojUsChpRop0sChpRojUsDhpRo
qksChpRojUsEhpRotksChpRojUsFhpRouUsChpRojUsGhpRovEsChpRojUsHhpRov0sChpRojUsI
hpRowksEhpRojUsJhpRoxUsChpRojUsKhpRoyEsEhpRojUsLhpRoy0sChpRojUsMhpRozksChpRo
jUsNhpRo0UsBhpRojUsOhpRokksBhpRo1ksAhpRomEsBhpRo1ksBhpRooUsChpRo1ksChpRo1EsB
hpRo1ksDhpRo2EsBhpRo1ksEhpRo20sBhpRo1ksFhpRo3ksBhpRo1ksGhpRolUsChpRo1ksHhpRo
nksBhpRo1ksIhpRo4UsBhpRo1ksJhpRo5EsBhpRo1ksKhpRo50sBhpRo1ksLhpRo6ksBhpRo1ksM
hpRo7UsBhpRo1ksNhpRoi0sChpRo1ksOhpRoj0sChpRo1ksPhpRo8EsBhpRo1ksQhpRo80sBhpRo
1ksRhpRosEsBhpRo1ksShpRopEsBhpRo1ksThpSMCWVtcF90aXRsZZRLA4aUakUBAABLAIaUakMB
AABLA4aUakUBAABLAYaUdUr+////hpRoB0sBdWhnfZQoaK1LAmiSSwFooUsCaLNLAmiYSwFo1EsB
aJVLAmjYSwFo20sBaJtLAmjeSwFonksBaOFLAWjkSwFop0sCaKpLAmi2SwJouUsCaLxLAmjtSwFo
50sBaOpLAWi/SwJowksEaMVLAmjOSwJoyEsEaMtLAmiLSwJoj0sCaPBLAWjzSwFosEsBaKRLAWjR
SwF1aIR9lChqlAEAAEsDakMBAABLA3V1YmgMKYGUfZQoaA99lChoiX2UKGitSwKGlGiNSwCGlGiz
SwKGlGiNSwGGlGibSwKGlGiNSwKGlGinSwKGlGiNSwOGlGiqSwKGlGiNSwSGlGi2SwKGlGiNSwWG
lGi5SwKGlGiNSwaGlGi8SwKGlGiNSweGlGi/SwKGlGiNSwiGlGjCSwSGlGiNSwmGlGjFSwKGlGiN
SwqGlGjISwSGlGiNSwuGlGjLSwKGlGiNSwyGlGjOSwKGlGiNSw2GlGjRSwGGlGiNSw6GlGiSSwGG
lGjWSwCGlGiYSwGGlGjWSwGGlGihSwKGlGjWSwKGlGjUSwGGlGjWSwOGlGjYSwGGlGjWSwSGlGjb
SwGGlGjWSwWGlGjeSwGGlGjWSwaGlGiVSwKGlGjWSweGlGieSwGGlGjWSwiGlGjhSwGGlGjWSwmG
lGjkSwGGlGjWSwqGlGjnSwGGlGjWSwuGlGjqSwGGlGjWSwyGlGjtSwGGlGjWSw2GlGiLSwKGlGjW
Sw6GlGiPSwKGlGjWSw+GlGjwSwGGlGjWSxCGlGjzSwGGlGjWSxGGlGiwSwGGlGjWSxKGlGikSwGG
lGjWSxOGlGqUAQAASwOGlGpFAQAASwCGlIwFdGl0bGWUSwOGlGpFAQAASwGGlGpDAQAASwOGlGpF
AQAASwKGlHVK/v///4aUaAdLAXVoZ32UKGitSwJokksBaKFLAmizSwJomEsBaNRLAWiVSwJo2EsB
aNtLAWibSwJo3ksBaJ5LAWjhSwFo5EsBaKdLAmiqSwJotksCaLlLAmi8SwJo7UsBaOdLAWjqSwFo
v0sCaMJLBGjFSwJozksCaMhLBGjLSwJoi0sCaI9LAmjwSwFo80sBaLBLAWikSwFo0UsBdWiEfZQo
apQBAABLA2roAQAASwNqQwEAAEsDdXViaAwpgZR9lChoD32UKGiJfZQoaK1LAoaUaI1LAIaUaLNL
AoaUaI1LAYaUaJtLAoaUaI1LAoaUaKdLAoaUaI1LA4aUaKpLAoaUaI1LBIaUaLZLAoaUaI1LBYaU
aLlLAoaUaI1LBoaUaLxLAoaUaI1LB4aUaL9LAoaUaI1LCIaUaMJLBIaUaI1LCYaUaMVLAoaUaI1L
CoaUaMhLBIaUaI1LC4aUaMtLAoaUaI1LDIaUaM5LAoaUaI1LDYaUaNFLAYaUaI1LDoaUaJJLAYaU
aNZLAIaUaJhLAYaUaNZLAYaUaKFLAoaUaNZLAoaUaNRLAYaUaNZLA4aUaNhLAYaUaNZLBIaUaNtL
AYaUaNZLBYaUaN5LAYaUaNZLBoaUaJVLAoaUaNZLB4aUaJ5LAYaUaNZLCIaUaOFLAYaUaNZLCYaU
aORLAYaUaNZLCoaUaOdLAYaUaNZLC4aUaOpLAYaUaNZLDIaUaO1LAYaUaNZLDYaUaItLAoaUaNZL
DoaUaI9LAoaUaNZLD4aUaPBLAYaUaNZLEIaUaPNLAYaUaNZLEYaUaLBLAYaUaNZLEoaUaKRLAYaU
aNZLE4aUapQBAABLA4aUakUBAABLAIaUjAN1cmyUSwOGlGpFAQAASwGGlGroAQAASwOGlGpFAQAA
SwKGlGpDAQAASwOGlGpFAQAASwOGlHVK/v///4aUaAdLAXVoZ32UKGitSwJokksBaKFLAmizSwJo
mEsBaNRLAWiVSwJo2EsBaNtLAWibSwJo3ksBaJ5LAWjhSwFo5EsBaKdLAmiqSwJotksCaLlLAmi8
SwJo7UsBaOdLAWjqSwFov0sCaMJLBGjFSwJozksCaMhLBGjLSwJoi0sCaI9LAmjwSwFo80sBaLBL
AWikSwFo0UsBdWiEfZQoapQBAABLA2o8AgAASwNq6AEAAEsDakMBAABLA3V1YmgMKYGUfZQoaA99
lChoiX2UKGitSwKGlGiNSwCGlGizSwKGlGiNSwGGlGibSwKGlGiNSwKGlGinSwKGlGiNSwOGlGiq
SwKGlGiNSwSGlGi2SwKGlGiNSwWGlGi5SwKGlGiNSwaGlGi8SwKGlGiNSweGlGi/SwKGlGiNSwiG
lGjCSwSGlGiNSwmGlGjFSwKGlGiNSwqGlGjISwSGlGiNSwuGlGjLSwKGlGiNSwyGlGjOSwKGlGiN
Sw2GlGjRSwGGlGiNSw6GlGiSSwGGlGjWSwCGlIwCaWSUSwKGlGjWSwGGlGiYSwGGlGjWSwKGlGjU
SwGGlGjWSwOGlGihSwKGlGjWSwSGlGjYSwGGlGjWSwWGlGjbSwGGlGjWSwaGlGjeSwGGlGjWSweG
lGieSwGGlGjWSwiGlGiVSwKGlGjWSwmGlGjhSwGGlGjWSwqGlGjkSwGGlGjWSwuGlGjnSwGGlGjW
SwyGlGjqSwGGlGjWSw2GlGjtSwGGlGjWSw6GlGiLSwKGlGjWSw+GlGiPSwKGlGjWSxCGlGjwSwGG
lGjWSxGGlGjzSwGGlGjWSxKGlGiwSwGGlGjWSxOGlGikSwGGlGjWSxSGlGqUAQAASwOGlGpFAQAA
SwCGlGo8AgAASwOGlGpFAQAASwGGlGroAQAASwOGlGpFAQAASwKGlGpDAQAASwOGlGpFAQAASwOG
lHVK/v///4aUaAdLAXVoZ32UKGitSwJqagIAAEsCaJJLAWihSwJos0sCaJhLAWjUSwFolUsCaNhL
AWjbSwFom0sCaN5LAWieSwFo4UsBaORLAWinSwJoqksCaLZLAmi5SwJovEsCaO1LAWjnSwFo6ksB
aL9LAmjCSwRoxUsCaM5LAmjISwRoy0sCaItLAmiPSwJo8EsBaPNLAWiwSwFopEsBaNFLAXVohH2U
KGqUAQAASwNqPAIAAEsDaugBAABLA2pDAQAASwN1dWJoDCmBlH2UKGgPfZQoaIl9lChorUsChpRo
jUsAhpRos0sChpRojUsBhpRom0sChpRojUsChpRop0sChpRojUsDhpRoqksChpRojUsEhpRotksC
hpRojUsFhpRouUsChpRojUsGhpRovEsChpRojUsHhpRo0UsBhpRojUsIhpRokksBhpRo1ksAhpSM
ClVubmFtZWQ6IDCUSwKGlGjWSwGGlGiYSwGGlGjWSwKGlGjUSwGGlGjWSwOGlGpqAgAASwKGlGjW
SwSGlGjYSwGGlGjWSwWGlGjbSwGGlGjWSwaGlGihSwKGlGjWSweGlGjeSwGGlGjWSwiGlGieSwGG
lGjWSwmGlGjhSwGGlGjWSwqGlGjkSwGGlGjWSwuGlGiVSwKGlGjWSwyGlGjtSwGGlGjWSw2GlGjn
SwGGlGjWSw6GlGjqSwGGlGjWSw+GlGi/SwKGlGjWSxCGlGjCSwSGlGjWSxGGlGjFSwKGlGjWSxKG
lGjOSwKGlGjWSxOGlGjISwSGlGjWSxSGlGjLSwKGlGjWSxWGlGiLSwKGlGjWSxaGlGiPSwKGlGjW
SxeGlGjwSwGGlGjWSxiGlGjzSwGGlGjWSxmGlGiwSwGGlGjWSxqGlGikSwGGlGjWSxuGlGqUAQAA
SwOGlGpFAQAASwCGlGo8AgAASwOGlGpFAQAASwGGlGroAQAASwOGlGpFAQAASwKGlGpDAQAASwOG
lGpFAQAASwOGlHVK/v///4aUaAdLAXVoZ32UKGq2AgAASwJorUsCamoCAABLAmiSSwFooUsCaLNL
AmiYSwFo1EsBaJVLAmjYSwFo20sBaJtLAmjeSwFonksBaOFLAWjkSwFop0sCaKpLAmi2SwJouUsC
aLxLAmjtSwFo50sBaOpLAWi/SwJowksEaMVLAmjOSwJoyEsEaMtLAmiLSwJoj0sCaPBLAWjzSwFo
sEsBaKRLAWjRSwF1aIR9lChqlAEAAEsDajwCAABLA2roAQAASwNqQwEAAEsDdXViaAwpgZR9lCho
D32UKGiJfZQojAlGZWF0dXJlIDGUSwKGlGiNSwCGlGitSwKGlGiNSwGGlGizSwKGlGiNSwKGlGib
SwKGlGiNSwOGlGinSwKGlGiNSwSGlGiqSwKGlGiNSwWGlGi2SwKGlGiNSwaGlGi5SwKGlGiNSweG
lGi8SwKGlGiNSwiGlGjRSwGGlGiNSwmGlGiSSwGGlGjWSwCGlGq2AgAASwKGlGjWSwGGlGiYSwGG
lGjWSwKGlGjUSwGGlGjWSwOGlGpqAgAASwKGlGjWSwSGlGjYSwGGlGjWSwWGlGjbSwGGlGjWSwaG
lGihSwKGlGjWSweGlGjeSwGGlGjWSwiGlGieSwGGlGjWSwmGlGjhSwGGlGjWSwqGlGjkSwGGlGjW
SwuGlGiVSwKGlGjWSwyGlGjtSwGGlGjWSw2GlGjnSwGGlGjWSw6GlGjqSwGGlGjWSw+GlGi/SwKG
lGjWSxCGlGjCSwSGlGjWSxGGlGjFSwKGlGjWSxKGlGjOSwKGlGjWSxOGlGjISwSGlGjWSxSGlGjL
SwKGlGjWSxWGlGiLSwKGlGjWSxaGlGiPSwKGlGjWSxeGlGjwSwGGlGjWSxiGlGjzSwGGlGjWSxmG
lGiwSwGGlGjWSxqGlGikSwGGlGjWSxuGlGqUAQAASwOGlGpFAQAASwCGlGo8AgAASwOGlGpFAQAA
SwGGlGroAQAASwOGlGpFAQAASwKGlGpDAQAASwOGlGpFAQAASwOGlHVK/v///4aUaAdLAXVoZ32U
KGr8AgAASwJqtgIAAEsCaK1LAmpqAgAASwJokksBaKFLAmizSwJomEsBaNRLAWiVSwJo2EsBaNtL
AWibSwJo3ksBaJ5LAWjhSwFo5EsBaKdLAmiqSwJotksCaLlLAmi8SwJo7UsBaOdLAWjqSwFov0sC
aMJLBGjFSwJozksCaMhLBGjLSwJoi0sCaI9LAmjwSwFo80sBaLBLAWikSwFo0UsBdWiEfZQoapQB
AABLA2o8AgAASwNq6AEAAEsDakMBAABLA3V1YmgMKYGUfZQoaA99lChoiX2UKGr8AgAASwKGlGiN
SwCGlGitSwKGlGiNSwGGlGizSwKGlGiNSwKGlGibSwKGlGiNSwOGlGinSwKGlGiNSwSGlGiqSwKG
lGiNSwWGlGi2SwKGlGiNSwaGlGi5SwKGlGiNSweGlGi8SwKGlGiNSwiGlGjRSwGGlGiNSwmGlGiS
SwGGlGjWSwCGlGq2AgAASwKGlGjWSwGGlGiYSwGGlGjWSwKGlGjUSwGGlGjWSwOGlGpqAgAASwKG
lGjWSwSGlGjYSwGGlGjWSwWGlGjbSwGGlGjWSwaGlGihSwKGlGjWSweGlGjeSwGGlGjWSwiGlGie
SwGGlGjWSwmGlGjhSwGGlGjWSwqGlGjkSwGGlGjWSwuGlGiVSwKGlGjWSwyGlGqUAQAASwOGlGpF
AQAASwCGlGo8AgAASwOGlGpFAQAASwGGlGroAQAASwOGlGpFAQAASwKGlGpDAQAASwOGlGpFAQAA
SwOGlHVK/v///4aUaAdLAXVoZ32UKGr8AgAASwJqtgIAAEsCaK1LAmpqAgAASwJokksBaKFLAmiz
SwJomEsBaNRLAWiVSwJo2EsBaNtLAWibSwJo3ksBaJ5LAWjhSwFo5EsBaKdLAmiqSwJotksCaLlL
Ami8SwJo0UsBdWiEfZQoapQBAABLA2o8AgAASwNq6AEAAEsDakMBAABLA3V1YmV1Lg==
</properties>
		<properties node_id="16" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 3, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xf8\x7f\xff\xff\xff\xca\x00\x00\x00\x00\x00\x00\x03\xd0\xff\xff\xf8}\xff\xff\xff\xd1\xff\xff\xfd{\x00\x00\x02o\x00\x00\x00\x01\x02\x00\x00\x00\x07\x80\xff\xff\xf8\x80\xff\xff\xff\xdf\xff\xff\xff\xff\x00\x00\x03\xcf', 'scriptLibrary': [{'name': 'Table from numpy', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': 'import matplotlib.pyplot as plt\nimport pandas as pd\nfrom Orange.data import Table, Domain, ContinuousVariable\n\n# Convertendo os dados de entrada do Orange para um DataFrame do Pandas\ndata = pd.DataFrame(in_data.X, columns=[var.name for var in in_data.domain.attributes])\ntarget = pd.Series(in_data.Y, name=in_data.domain.class_var.name)\n\n# Verifique se os dados possuem as variáveis "grade", "Good", "Bad" e "WoE"\nif \'grade\' in data.columns and \'WoE\' in data.columns and \'Good\' in data.columns and \'Bad\' in data.columns:\n    \n    # Definir as categorias (grade), WoE e as taxas de inadimplência (Good e Bad)\n    categories = data[\'grade\']\n    woe = data[\'WoE\'].astype(\'float\')\n    good_row = data[\'Good\'].astype(\'float\')  # Substituir pela sua variável de bons pagadores\n    bad_row = data[\'Bad\'].astype(\'float\')  # Substituir pela sua variável de maus pagadores\n\n    # Criação da figura com subplots\n    fig, ax = plt.subplots(1, 2, figsize=(12, 6))\n\n    # Gráfico de barras empilhadas para taxa de inadimplência\n    bad_bars = ax[0].barh(y=categories, width=bad_row, color=\'#8d0801\', label=\'Bad\')\n    good_bars = ax[0].barh(y=categories, width=good_row, left=bad_row, color=\'#8a817c\', label=\'Good\')\n\n    # Anotando valores percentuais dentro de cada barra\n    for good_bar, bad_bar, good_rate, bad_rate in zip(good_bars, bad_bars, good_row, bad_row):\n        x_position_good = good_bar.get_x() + good_bar.get_width() / 2\n        x_position_bad = bad_bar.get_x() + bad_bar.get_width() / 2  \n        y_position = good_bar.get_y() + good_bar.get_height() / 2\n\n        ax[0].text(x_position_good, y_position, f\'{good_rate:.2f}%\', ha=\'center\', va=\'center\', color=\'white\', fontsize=10)\n        ax[0].text(x_position_bad, y_position, f\'{bad_rate:.2f}%\', ha=\'center\', va=\'center\', color=\'white\', fontsize=10)\n\n    ax[0].set_title(\'Default rate by Grade\')\n    ax[0].invert_yaxis()\n    ax[0].grid(False)\n    ax[0].legend(bbox_to_anchor=(-0.2, 1.1), loc=\'upper left\')\n\n    # Gráfico de linha para WoE\n    ax[1].plot(categories, woe, marker=\'o\', linestyle=\'--\')\n    ax[1].set_title(\'WoE by Grade\')\n    ax[1].set_xticks(categories.unique())\n    \n    plt.tight_layout()\n    plt.show()\n\n# Convertendo o DataFrame de volta para uma tabela do Orange\ndomain = Domain([ContinuousVariable(col) for col in data.columns])\nout_data = Table.from_numpy(domain, data.to_numpy())\n', 'filename': None}], 'scriptText': 'from Orange.data import Table, Domain, DiscreteVariable, ContinuousVariable\nfrom Orange.preprocess import Preprocess\nimport numpy as np\n\nclass CatOneHotEncoder(Preprocess):\n    def __init__(self, reference_categories=None):\n        self.reference_categories = reference_categories or [\n            \'&gt;28.1K\', \'60\', \'&gt;22.0\', \'G\',\n            \'G1_F5_G5_G3_G2_F4_F3_G4_F2\',\n            \'0\', \'OTHER_NONE_RENT_ANY\', \'&lt;=20.0K\',\n            \'Verified\', \'small_business_educational_renewable_energy_moving\',\n            \'NE_IA_NV_HI_FL\', \'&gt;28.0\', \'4-33\', \'&lt;=4.0\',\n            \'&lt;=6.0\', \'&lt;=2.0K\', \'&lt;=8.0\', \'f\', \'missing\', \'&lt;=151.0\'\n        ]\n\n    def __call__(self, data):\n        X = Table(data)\n        domain = data.domain\n        new_attrs = []\n        attr_mapping = {}\n\n        for attr in domain.attributes:\n            if isinstance(attr, DiscreteVariable):\n                reference_category = next((cat for cat in attr.values if cat in self.reference_categories), attr.values[-1])\n                attr_mapping[attr.name] = []\n                for value in attr.values:\n                    if value != reference_category:\n                        new_attr = ContinuousVariable.make(f"{attr.name}_{value}")\n                        new_attrs.append(new_attr)\n                        attr_mapping[attr.name].append((value, new_attr))\n            else:\n                new_attrs.append(attr)\n\n        new_domain = Domain(new_attrs, domain.class_vars, domain.metas)\n        new_X = np.zeros((len(X), len(new_attrs)), dtype=float)\n\n        for i, instance in enumerate(X):\n            col_idx = 0\n            for attr in domain.attributes:\n                if isinstance(attr, DiscreteVariable):\n                    value = instance[attr]\n                    if not np.isnan(value):\n                        for orig_value, new_attr in attr_mapping[attr.name]:\n                            if attr.values[int(value)] == orig_value:\n                                new_X[i, col_idx] = 1\n                            col_idx += 1\n                else:\n                    new_X[i, col_idx] = instance[attr]\n                    col_idx += 1\n\n        return Table(new_domain, new_X, X.Y, X.metas)\n\n# Uso no widget "Python Script" do Orange:\ncat_one_hot_encoder = CatOneHotEncoder()\nout_data = cat_one_hot_encoder(in_data)', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xac\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="17" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xf8\x7f\xff\xff\xff\xca\x00\x00\x00\x00\x00\x00\x03\xd0\xff\xff\xf8\x80\xff\xff\xff\xdf\xff\xff\xff\xff\x00\x00\x03\xcf\x00\x00\x00\x01\x02\x00\x00\x00\x07\x80\xff\xff\xf8\x80\xff\xff\xff\xdf\xff\xff\xff\xff\x00\x00\x03\xcf', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="18" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xf8\x7f\xff\xff\xff\xca\x00\x00\x00\x00\x00\x00\x03\xd0\xff\xff\xf8\x80\xff\xff\xff\xdf\xff\xff\xff\xff\x00\x00\x03\xcf\x00\x00\x00\x01\x02\x00\x00\x00\x07\x80\xff\xff\xf8\x80\xff\xff\xff\xdf\xff\xff\xff\xff\x00\x00\x03\xcf', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="19" format="pickle">gASVoJEAAAAAAAB9lCiMCmF1dG9fYXBwbHmUiIwSY29udHJvbEFyZWFWaXNpYmxllIiMB21lcmdp
bmeUSwCME3NhdmVkV2lkZ2V0R2VvbWV0cnmUQ0IB2dDLAAMAAP///XUAAAFH////WAAAAkX///12
AAABXP///1cAAAJEAAAAAQAAAAAHgP///XYAAAFc////VwAAAkSUjAtfX3ZlcnNpb25fX5RLAowQ
Y29udGV4dF9zZXR0aW5nc5RdlCiMFW9yYW5nZXdpZGdldC5zZXR0aW5nc5SMB0NvbnRleHSUk5Qp
gZR9lCiMBnZhbHVlc5R9lCiMCmF0dHJfcGFpcnOUXZRdlCiMCVJvdyBpbmRleJRLZIaUaBNLZIaU
ZWFoBksCdYwKdmFyaWFibGVzMZR9lCiMBHRlcm2US2WMBWdyYWRllEtljAlzdWJfZ3JhZGWUS2WM
CmVtcF9sZW5ndGiUS2WMDmhvbWVfb3duZXJzaGlwlEtljBN2ZXJpZmljYXRpb25fc3RhdHVzlEtl
jAdpc3N1ZV9klEtljAdwdXJwb3NllEtljAphZGRyX3N0YXRllEtljBNpbml0aWFsX2xpc3Rfc3Rh
dHVzlEtljAxsYXN0X3B5bW50X2SUS2V1jAp2YXJpYWJsZXMylH2UKIwIaW50X3JhdGWUS2WMCHRl
cm1faW50lEtljAphbm51YWxfaW5jlEtljA5pbnFfbGFzdF82bXRoc5RLZYwDZHRplEtljAlsb2Fu
X2FtbnSUS2WMEm10aHNfc2luY2VfaXNzdWVfZJRLZYwOZW1wX2xlbmd0aF9pbnSUS2WMCG9wZW5f
YWNjlEtljBttdGhzX3NpbmNlX2VhcmxpZXN0X2NyX2xpbmWUS2WMCGdvb2RfYmFklEtldXViaAsp
gZR9lChoDn2UKGgQXZRdlChoE0tkhpRoE0tkhpRlYWgGSwJ1aBZ9lChoJUtlaCZLZWgnS2VoKEtl
aClLZWgqS2VoK0tlaCxLZWgtS2VoLktlaC9LZXVoI32UKGgYS2VoGUtlaBpLZWgbS2VoHEtlaB1L
ZWgeS2VoH0tlaCBLZWghS2VoIktldXViaAspgZR9lChoDn2UKGgQXZRdlChoE0tkhpRoE0tkhpRl
YWgGSwJ1aBZ9lChoKktmaCVLZmgnS2ZoKUtmaChLZmgtS2aMCXJldm9sX2JhbJRLZowJdG90YWxf
YWNjlEtmaCxLZmguS2ZoJktmaCtLZmgvS2V1aCN9lChoGEtlaBlLZWgaS2VoG0tlaBxLZWgdS2Vo
HktlaB9LZWggS2VoIUtlaCJLZXV1YmgLKYGUfZQoaA59lChoEF2UXZQoaBNLZIaUaBNLZIaUZWFo
BksCdWgWfZQoaCpLZmglS2ZoJ0tmaClLZmgoS2ZoLUtmaEFLZmhCS2ZoLEtmaC5LZmgmS2ZoK0tm
aC9LZXVoI32UKIwOdGVybV8zNiBtb250aHOUS2aMB2dyYWRlX0GUS2aMB2dyYWRlX0KUS2aMB2dy
YWRlX0OUS2aMB2dyYWRlX0SUS2aMB2dyYWRlX0WUS2aMB2dyYWRlX0aUS2aMDHN1Yl9ncmFkZV9B
MZRLZowMc3ViX2dyYWRlX0EylEtmjAxzdWJfZ3JhZGVfQTOUS2aMDHN1Yl9ncmFkZV9BNJRLZowM
c3ViX2dyYWRlX0E1lEtmjAxzdWJfZ3JhZGVfQjGUS2aMDHN1Yl9ncmFkZV9CMpRLZowMc3ViX2dy
YWRlX0IzlEtmjAxzdWJfZ3JhZGVfQjSUS2aMDHN1Yl9ncmFkZV9CNZRLZowMc3ViX2dyYWRlX0Mx
lEtmjAxzdWJfZ3JhZGVfQzKUS2aMDHN1Yl9ncmFkZV9DM5RLZowMc3ViX2dyYWRlX0M0lEtmjAxz
dWJfZ3JhZGVfQzWUS2aMDHN1Yl9ncmFkZV9EMZRLZowMc3ViX2dyYWRlX0QylEtmjAxzdWJfZ3Jh
ZGVfRDOUS2aMDHN1Yl9ncmFkZV9ENJRLZowMc3ViX2dyYWRlX0Q1lEtmjAxzdWJfZ3JhZGVfRTGU
S2aMDHN1Yl9ncmFkZV9FMpRLZowMc3ViX2dyYWRlX0UzlEtmjAxzdWJfZ3JhZGVfRTSUS2aMDHN1
Yl9ncmFkZV9FNZRLZowMc3ViX2dyYWRlX0YxlEtmjAxzdWJfZ3JhZGVfRjKUS2aMDHN1Yl9ncmFk
ZV9GM5RLZowMc3ViX2dyYWRlX0Y0lEtmjAxzdWJfZ3JhZGVfRjWUS2aMDHN1Yl9ncmFkZV9HMZRL
ZowMc3ViX2dyYWRlX0cylEtmjAxzdWJfZ3JhZGVfRzOUS2aMDHN1Yl9ncmFkZV9HNJRLZowRZW1w
X2xlbmd0aF8xIHllYXKUS2aMEmVtcF9sZW5ndGhfMiB5ZWFyc5RLZowSZW1wX2xlbmd0aF8zIHll
YXJzlEtmjBJlbXBfbGVuZ3RoXzQgeWVhcnOUS2aMEmVtcF9sZW5ndGhfNSB5ZWFyc5RLZowSZW1w
X2xlbmd0aF82IHllYXJzlEtmjBJlbXBfbGVuZ3RoXzcgeWVhcnOUS2aMEmVtcF9sZW5ndGhfOCB5
ZWFyc5RLZowSZW1wX2xlbmd0aF85IHllYXJzlEtmjBRlbXBfbGVuZ3RoXzEwKyB5ZWFyc5RLZowX
aG9tZV9vd25lcnNoaXBfTU9SVEdBR0WUS2aMEmhvbWVfb3duZXJzaGlwX09XTpRLZowgdmVyaWZp
Y2F0aW9uX3N0YXR1c19Ob3QgVmVyaWZpZWSUS2aMI3ZlcmlmaWNhdGlvbl9zdGF0dXNfU291cmNl
IFZlcmlmaWVklEtmjA5pc3N1ZV9kX0RlYy0xMZRLZowOaXNzdWVfZF9Ob3YtMTGUS2aMC3B1cnBv
c2VfY2FylEtmjBNwdXJwb3NlX2NyZWRpdF9jYXJklEtmjBpwdXJwb3NlX2RlYnRfY29uc29saWRh
dGlvbpRLZowYcHVycG9zZV9ob21lX2ltcHJvdmVtZW50lEtmjA1wdXJwb3NlX2hvdXNllEtmjBZw
dXJwb3NlX21ham9yX3B1cmNoYXNllEtmjA9wdXJwb3NlX21lZGljYWyUS2aMDnB1cnBvc2VfbW92
aW5nlEtmjA1wdXJwb3NlX290aGVylEtmjBhwdXJwb3NlX3JlbmV3YWJsZV9lbmVyZ3mUS2aMFnB1
cnBvc2Vfc21hbGxfYnVzaW5lc3OUS2aMEHB1cnBvc2VfdmFjYXRpb26US2aMDWFkZHJfc3RhdGVf
QUuUS2aMDWFkZHJfc3RhdGVfQUyUS2aMDWFkZHJfc3RhdGVfQVKUS2aMDWFkZHJfc3RhdGVfQVqU
S2aMDWFkZHJfc3RhdGVfQ0GUS2aMDWFkZHJfc3RhdGVfQ0+US2aMDWFkZHJfc3RhdGVfQ1SUS2aM
DWFkZHJfc3RhdGVfREOUS2aMDWFkZHJfc3RhdGVfREWUS2aMDWFkZHJfc3RhdGVfRkyUS2aMDWFk
ZHJfc3RhdGVfR0GUS2aMDWFkZHJfc3RhdGVfSEmUS2aMDWFkZHJfc3RhdGVfSUyUS2aMDWFkZHJf
c3RhdGVfS1OUS2aMDWFkZHJfc3RhdGVfS1mUS2aMDWFkZHJfc3RhdGVfTEGUS2aMDWFkZHJfc3Rh
dGVfTUGUS2aMDWFkZHJfc3RhdGVfTUSUS2aMDWFkZHJfc3RhdGVfTUmUS2aMDWFkZHJfc3RhdGVf
TU6US2aMDWFkZHJfc3RhdGVfTU+US2aMDWFkZHJfc3RhdGVfTVOUS2aMDWFkZHJfc3RhdGVfTVSU
S2aMDWFkZHJfc3RhdGVfTkOUS2aMDWFkZHJfc3RhdGVfTkiUS2aMDWFkZHJfc3RhdGVfTkqUS2aM
DWFkZHJfc3RhdGVfTk2US2aMDWFkZHJfc3RhdGVfTlaUS2aMDWFkZHJfc3RhdGVfTlmUS2aMDWFk
ZHJfc3RhdGVfT0iUS2aMDWFkZHJfc3RhdGVfT0uUS2aMDWFkZHJfc3RhdGVfT1KUS2aMDWFkZHJf
c3RhdGVfUEGUS2aMDWFkZHJfc3RhdGVfUkmUS2aMDWFkZHJfc3RhdGVfU0OUS2aMDWFkZHJfc3Rh
dGVfU0SUS2aMDWFkZHJfc3RhdGVfVE6US2aMDWFkZHJfc3RhdGVfVFiUS2aMDWFkZHJfc3RhdGVf
VVSUS2aMDWFkZHJfc3RhdGVfVkGUS2aMDWFkZHJfc3RhdGVfVlSUS2aMDWFkZHJfc3RhdGVfV0GU
S2aMDWFkZHJfc3RhdGVfV0mUS2aMDWFkZHJfc3RhdGVfV1aUS2aME2xhc3RfcHltbnRfZF9BcHIt
MTKUS2aME2xhc3RfcHltbnRfZF9BcHItMTOUS2aME2xhc3RfcHltbnRfZF9BcHItMTSUS2aME2xh
c3RfcHltbnRfZF9BcHItMTWUS2aME2xhc3RfcHltbnRfZF9BdWctMTKUS2aME2xhc3RfcHltbnRf
ZF9BdWctMTOUS2aME2xhc3RfcHltbnRfZF9BdWctMTSUS2aME2xhc3RfcHltbnRfZF9BdWctMTWU
S2aME2xhc3RfcHltbnRfZF9EZWMtMTGUS2aME2xhc3RfcHltbnRfZF9EZWMtMTKUS2aME2xhc3Rf
cHltbnRfZF9EZWMtMTOUS2aME2xhc3RfcHltbnRfZF9EZWMtMTSUS2aME2xhc3RfcHltbnRfZF9E
ZWMtMTWUS2aME2xhc3RfcHltbnRfZF9GZWItMTKUS2aME2xhc3RfcHltbnRfZF9GZWItMTOUS2aM
E2xhc3RfcHltbnRfZF9GZWItMTSUS2aME2xhc3RfcHltbnRfZF9GZWItMTWUS2aME2xhc3RfcHlt
bnRfZF9KYW4tMTKUS2aME2xhc3RfcHltbnRfZF9KYW4tMTOUS2aME2xhc3RfcHltbnRfZF9KYW4t
MTSUS2aME2xhc3RfcHltbnRfZF9KYW4tMTWUS2aME2xhc3RfcHltbnRfZF9KYW4tMTaUS2aME2xh
c3RfcHltbnRfZF9KdWwtMTKUS2aME2xhc3RfcHltbnRfZF9KdWwtMTOUS2aME2xhc3RfcHltbnRf
ZF9KdWwtMTSUS2aME2xhc3RfcHltbnRfZF9KdWwtMTWUS2aME2xhc3RfcHltbnRfZF9KdW4tMTKU
S2aME2xhc3RfcHltbnRfZF9KdW4tMTOUS2aME2xhc3RfcHltbnRfZF9KdW4tMTSUS2aME2xhc3Rf
cHltbnRfZF9KdW4tMTWUS2aME2xhc3RfcHltbnRfZF9NYXItMTKUS2aME2xhc3RfcHltbnRfZF9N
YXItMTOUS2aME2xhc3RfcHltbnRfZF9NYXItMTSUS2aME2xhc3RfcHltbnRfZF9NYXItMTWUS2aM
E2xhc3RfcHltbnRfZF9NYXktMTKUS2aME2xhc3RfcHltbnRfZF9NYXktMTOUS2aME2xhc3RfcHlt
bnRfZF9NYXktMTSUS2aME2xhc3RfcHltbnRfZF9NYXktMTWUS2aME2xhc3RfcHltbnRfZF9Ob3Yt
MTGUS2aME2xhc3RfcHltbnRfZF9Ob3YtMTKUS2aME2xhc3RfcHltbnRfZF9Ob3YtMTOUS2aME2xh
c3RfcHltbnRfZF9Ob3YtMTSUS2aME2xhc3RfcHltbnRfZF9Ob3YtMTWUS2aME2xhc3RfcHltbnRf
ZF9PY3QtMTKUS2aME2xhc3RfcHltbnRfZF9PY3QtMTOUS2aME2xhc3RfcHltbnRfZF9PY3QtMTSU
S2aME2xhc3RfcHltbnRfZF9PY3QtMTWUS2aME2xhc3RfcHltbnRfZF9TZXAtMTKUS2aME2xhc3Rf
cHltbnRfZF9TZXAtMTOUS2aME2xhc3RfcHltbnRfZF9TZXAtMTSUS2Z1dWJoCymBlH2UKGgOfZQo
aBBdlF2UKGgTS2SGlGgTS2SGlGVhaAZLAnVoFn2UKGgqS2ZoJUtmaCdLZmgpS2ZoKEtmaC1LZmhB
S2ZoQktmaCxLZmguS2ZoJktmaCtLZnVoI32UKGhNS2ZoTktmaE9LZmhQS2ZoUUtmaFJLZmhTS2Zo
VEtmaFVLZmhWS2ZoV0tmaFhLZmhZS2ZoWktmaFtLZmhcS2ZoXUtmaF5LZmhfS2ZoYEtmaGFLZmhi
S2ZoY0tmaGRLZmhlS2ZoZktmaGdLZmhoS2ZoaUtmaGpLZmhrS2ZobEtmaG1LZmhuS2Zob0tmaHBL
ZmhxS2ZocktmaHNLZmh0S2ZodUtmaHZLZmh3S2ZoeEtmaHlLZmh6S2Zoe0tmaHxLZmh9S2Zofktm
aH9LZmiAS2ZogUtmaIJLZmiDS2ZohEtmaIVLZmiGS2Zoh0tmaIhLZmiJS2ZoiktmaItLZmiMS2Zo
jUtmaI5LZmiPS2ZokEtmaJFLZmiSS2Zok0tmaJRLZmiVS2ZolktmaJdLZmiYS2ZomUtmaJpLZmib
S2ZonEtmaJ1LZmieS2Zon0tmaKBLZmihS2ZooktmaKNLZmikS2ZopUtmaKZLZminS2ZoqEtmaKlL
ZmiqS2Zoq0tmaKxLZmitS2ZorktmaK9LZmiwS2ZosUtmaLJLZmizS2ZotEtmaLVLZmi2S2Zot0tm
aLhLZmi5S2ZouktmaLtLZmi8S2ZovUtmaL5LZmi/S2ZowEtmaMFLZmjCS2Zow0tmaMRLZmjFS2Zo
xktmaMdLZmjIS2ZoyUtmaMpLZmjLS2ZozEtmaM1LZmjOS2Zoz0tmaNBLZmjRS2Zo0ktmaNNLZmjU
S2Zo1UtmaNZLZmjXS2Zo2EtmaNlLZmjaS2Zo20tmaNxLZmjdS2Zo3ktmaN9LZmjgS2Zo4UtmaOJL
ZmjjS2Zo5EtmaOVLZmjmS2Zo50tmaOhLZmjpS2Zo6ktmaOtLZmjsS2Zo7UtmaO5LZmjvS2Z1dWJo
CymBlH2UKGgOfZQojAphdHRyX3BhaXJzlF2UXZQojAlSb3cgaW5kZXiUS2SGlGj/S2SGlGVhaAZL
AnVoFn2UKIwJbG9hbl9hbW50lEtljAhpbnRfcmF0ZZRLZYwKYW5udWFsX2luY5RLZYwDZHRplEtl
jA5pbnFfbGFzdF82bXRoc5RLZYwIb3Blbl9hY2OUS2WMD2Z1bmRlZF9hbW50X2ludpRLZYwJcmV2
b2xfYmFslEtljAl0b3RhbF9hY2OUS2WMDmVtcF9sZW5ndGhfaW50lEtljBttdGhzX3NpbmNlX2Vh
cmxpZXN0X2NyX2xpbmWUS2WMCHRlcm1faW50lEtljBJtdGhzX3NpbmNlX2lzc3VlX2SUS2WMDW91
dF9wcm5jcF9pbnaUS2WMD3RvdGFsX3B5bW50X2ludpRLZYwIZ29vZF9iYWSUS2V1aCN9lCiMDHN1
Yl9ncmFkZV9BMZRLZowMc3ViX2dyYWRlX0EylEtmjAxzdWJfZ3JhZGVfQTOUS2aMDHN1Yl9ncmFk
ZV9BNJRLZowMc3ViX2dyYWRlX0E1lEtmjAxzdWJfZ3JhZGVfQjGUS2aMDHN1Yl9ncmFkZV9CMpRL
ZowMc3ViX2dyYWRlX0IzlEtmjAxzdWJfZ3JhZGVfQjSUS2aMDHN1Yl9ncmFkZV9CNZRLZowMc3Vi
X2dyYWRlX0MxlEtmjAxzdWJfZ3JhZGVfQzKUS2aMDHN1Yl9ncmFkZV9DM5RLZowMc3ViX2dyYWRl
X0M0lEtmjAxzdWJfZ3JhZGVfQzWUS2aMDHN1Yl9ncmFkZV9EMZRLZowMc3ViX2dyYWRlX0QylEtm
jAxzdWJfZ3JhZGVfRDOUS2aMDHN1Yl9ncmFkZV9ENJRLZowMc3ViX2dyYWRlX0Q1lEtmjAxzdWJf
Z3JhZGVfRTGUS2aMDHN1Yl9ncmFkZV9FMpRLZowMc3ViX2dyYWRlX0UzlEtmjAxzdWJfZ3JhZGVf
RTSUS2aMDHN1Yl9ncmFkZV9FNZRLZowMc3ViX2dyYWRlX0YxlEtmjAxzdWJfZ3JhZGVfRjKUS2aM
DHN1Yl9ncmFkZV9GM5RLZowMc3ViX2dyYWRlX0Y0lEtmjAxzdWJfZ3JhZGVfRjWUS2aMDHN1Yl9n
cmFkZV9HMZRLZowMc3ViX2dyYWRlX0cylEtmjAxzdWJfZ3JhZGVfRzOUS2aMDHN1Yl9ncmFkZV9H
NJRLZowRZW1wX2xlbmd0aF8xIHllYXKUS2aMEmVtcF9sZW5ndGhfMiB5ZWFyc5RLZowSZW1wX2xl
bmd0aF8zIHllYXJzlEtmjBJlbXBfbGVuZ3RoXzQgeWVhcnOUS2aMEmVtcF9sZW5ndGhfNSB5ZWFy
c5RLZowSZW1wX2xlbmd0aF82IHllYXJzlEtmjBJlbXBfbGVuZ3RoXzcgeWVhcnOUS2aMEmVtcF9s
ZW5ndGhfOCB5ZWFyc5RLZowSZW1wX2xlbmd0aF85IHllYXJzlEtmjBRlbXBfbGVuZ3RoXzEwKyB5
ZWFyc5RLZowXaG9tZV9vd25lcnNoaXBfTU9SVEdBR0WUS2aMFGhvbWVfb3duZXJzaGlwX09USEVS
lEtmjBJob21lX293bmVyc2hpcF9PV06US2aMIHZlcmlmaWNhdGlvbl9zdGF0dXNfTm90IFZlcmlm
aWVklEtmjCN2ZXJpZmljYXRpb25fc3RhdHVzX1NvdXJjZSBWZXJpZmllZJRLZowLcHVycG9zZV9j
YXKUS2aME3B1cnBvc2VfY3JlZGl0X2NhcmSUS2aMGnB1cnBvc2VfZGVidF9jb25zb2xpZGF0aW9u
lEtmjBNwdXJwb3NlX2VkdWNhdGlvbmFslEtmjBhwdXJwb3NlX2hvbWVfaW1wcm92ZW1lbnSUS2aM
DXB1cnBvc2VfaG91c2WUS2aMFnB1cnBvc2VfbWFqb3JfcHVyY2hhc2WUS2aMD3B1cnBvc2VfbWVk
aWNhbJRLZowOcHVycG9zZV9tb3ZpbmeUS2aMDXB1cnBvc2Vfb3RoZXKUS2aMGHB1cnBvc2VfcmVu
ZXdhYmxlX2VuZXJneZRLZowWcHVycG9zZV9zbWFsbF9idXNpbmVzc5RLZowQcHVycG9zZV92YWNh
dGlvbpRLZowNYWRkcl9zdGF0ZV9BS5RLZowNYWRkcl9zdGF0ZV9BTJRLZowNYWRkcl9zdGF0ZV9B
UpRLZowNYWRkcl9zdGF0ZV9BWpRLZowNYWRkcl9zdGF0ZV9DQZRLZowNYWRkcl9zdGF0ZV9DT5RL
ZowNYWRkcl9zdGF0ZV9DVJRLZowNYWRkcl9zdGF0ZV9EQ5RLZowNYWRkcl9zdGF0ZV9ERZRLZowN
YWRkcl9zdGF0ZV9GTJRLZowNYWRkcl9zdGF0ZV9HQZRLZowNYWRkcl9zdGF0ZV9ISZRLZowNYWRk
cl9zdGF0ZV9JQZRLZowNYWRkcl9zdGF0ZV9JTJRLZowNYWRkcl9zdGF0ZV9LU5RLZowNYWRkcl9z
dGF0ZV9LWZRLZowNYWRkcl9zdGF0ZV9MQZRLZowNYWRkcl9zdGF0ZV9NQZRLZowNYWRkcl9zdGF0
ZV9NRJRLZowNYWRkcl9zdGF0ZV9NSZRLZowNYWRkcl9zdGF0ZV9NTpRLZowNYWRkcl9zdGF0ZV9N
T5RLZowNYWRkcl9zdGF0ZV9NU5RLZowNYWRkcl9zdGF0ZV9NVJRLZowNYWRkcl9zdGF0ZV9OQ5RL
ZowNYWRkcl9zdGF0ZV9OSJRLZowNYWRkcl9zdGF0ZV9OSpRLZowNYWRkcl9zdGF0ZV9OTZRLZowN
YWRkcl9zdGF0ZV9OVpRLZowNYWRkcl9zdGF0ZV9OWZRLZowNYWRkcl9zdGF0ZV9PSJRLZowNYWRk
cl9zdGF0ZV9PS5RLZowNYWRkcl9zdGF0ZV9PUpRLZowNYWRkcl9zdGF0ZV9QQZRLZowNYWRkcl9z
dGF0ZV9SSZRLZowNYWRkcl9zdGF0ZV9TQ5RLZowNYWRkcl9zdGF0ZV9TRJRLZowNYWRkcl9zdGF0
ZV9UTpRLZowNYWRkcl9zdGF0ZV9UWJRLZowNYWRkcl9zdGF0ZV9VVJRLZowNYWRkcl9zdGF0ZV9W
QZRLZowNYWRkcl9zdGF0ZV9WVJRLZowNYWRkcl9zdGF0ZV9XQZRLZowNYWRkcl9zdGF0ZV9XSZRL
ZowNYWRkcl9zdGF0ZV9XVpRLZowTbGFzdF9weW1udF9kX0Fwci0xMZRLZowTbGFzdF9weW1udF9k
X0Fwci0xMpRLZowTbGFzdF9weW1udF9kX0Fwci0xM5RLZowTbGFzdF9weW1udF9kX0Fwci0xNJRL
ZowTbGFzdF9weW1udF9kX0Fwci0xNZRLZowTbGFzdF9weW1udF9kX0F1Zy0xMJRLZowTbGFzdF9w
eW1udF9kX0F1Zy0xMZRLZowTbGFzdF9weW1udF9kX0F1Zy0xMpRLZowTbGFzdF9weW1udF9kX0F1
Zy0xM5RLZowTbGFzdF9weW1udF9kX0F1Zy0xNJRLZowTbGFzdF9weW1udF9kX0F1Zy0xNZRLZowT
bGFzdF9weW1udF9kX0RlYy0xMJRLZowTbGFzdF9weW1udF9kX0RlYy0xMZRLZowTbGFzdF9weW1u
dF9kX0RlYy0xMpRLZowTbGFzdF9weW1udF9kX0RlYy0xM5RLZowTbGFzdF9weW1udF9kX0RlYy0x
NJRLZowTbGFzdF9weW1udF9kX0RlYy0xNZRLZowTbGFzdF9weW1udF9kX0ZlYi0xMZRLZowTbGFz
dF9weW1udF9kX0ZlYi0xMpRLZowTbGFzdF9weW1udF9kX0ZlYi0xM5RLZowTbGFzdF9weW1udF9k
X0ZlYi0xNJRLZowTbGFzdF9weW1udF9kX0ZlYi0xNZRLZowTbGFzdF9weW1udF9kX0phbi0xMZRL
ZowTbGFzdF9weW1udF9kX0phbi0xMpRLZowTbGFzdF9weW1udF9kX0phbi0xM5RLZowTbGFzdF9w
eW1udF9kX0phbi0xNJRLZowTbGFzdF9weW1udF9kX0phbi0xNZRLZowTbGFzdF9weW1udF9kX0ph
bi0xNpRLZowTbGFzdF9weW1udF9kX0p1bC0xMJRLZowTbGFzdF9weW1udF9kX0p1bC0xMZRLZowT
bGFzdF9weW1udF9kX0p1bC0xMpRLZowTbGFzdF9weW1udF9kX0p1bC0xM5RLZowTbGFzdF9weW1u
dF9kX0p1bC0xNJRLZowTbGFzdF9weW1udF9kX0p1bC0xNZRLZowTbGFzdF9weW1udF9kX0p1bi0x
MZRLZowTbGFzdF9weW1udF9kX0p1bi0xMpRLZowTbGFzdF9weW1udF9kX0p1bi0xM5RLZowTbGFz
dF9weW1udF9kX0p1bi0xNJRLZowTbGFzdF9weW1udF9kX0p1bi0xNZRLZowTbGFzdF9weW1udF9k
X01hci0xMZRLZowTbGFzdF9weW1udF9kX01hci0xMpRLZowTbGFzdF9weW1udF9kX01hci0xM5RL
ZowTbGFzdF9weW1udF9kX01hci0xNJRLZowTbGFzdF9weW1udF9kX01hci0xNZRLZowTbGFzdF9w
eW1udF9kX01heS0xMZRLZowTbGFzdF9weW1udF9kX01heS0xMpRLZowTbGFzdF9weW1udF9kX01h
eS0xM5RLZowTbGFzdF9weW1udF9kX01heS0xNJRLZowTbGFzdF9weW1udF9kX01heS0xNZRLZowT
bGFzdF9weW1udF9kX05vdi0xMJRLZowTbGFzdF9weW1udF9kX05vdi0xMZRLZowTbGFzdF9weW1u
dF9kX05vdi0xMpRLZowTbGFzdF9weW1udF9kX05vdi0xM5RLZowTbGFzdF9weW1udF9kX05vdi0x
NJRLZowTbGFzdF9weW1udF9kX05vdi0xNZRLZowTbGFzdF9weW1udF9kX09jdC0xMJRLZowTbGFz
dF9weW1udF9kX09jdC0xMZRLZowTbGFzdF9weW1udF9kX09jdC0xMpRLZowTbGFzdF9weW1udF9k
X09jdC0xM5RLZowTbGFzdF9weW1udF9kX09jdC0xNJRLZowTbGFzdF9weW1udF9kX09jdC0xNZRL
ZowTbGFzdF9weW1udF9kX1NlcC0xMJRLZowTbGFzdF9weW1udF9kX1NlcC0xMZRLZowTbGFzdF9w
eW1udF9kX1NlcC0xMpRLZowTbGFzdF9weW1udF9kX1NlcC0xM5RLZowTbGFzdF9weW1udF9kX1Nl
cC0xNJRLZowMcHltbnRfcGxhbl9ulEtmjBNuZXh0X3B5bW50X2RfRmViLTE2lEtmjBlsYXN0X2Ny
ZWRpdF9wdWxsX2RfQXByLTExlEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfQXByLTEylEtmjBlsYXN0
X2NyZWRpdF9wdWxsX2RfQXByLTEzlEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfQXByLTE0lEtmjBls
YXN0X2NyZWRpdF9wdWxsX2RfQXByLTE1lEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfQXVnLTEwlEtm
jBlsYXN0X2NyZWRpdF9wdWxsX2RfQXVnLTExlEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfQXVnLTEy
lEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfQXVnLTEzlEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfQXVn
LTE0lEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfQXVnLTE1lEtmjBlsYXN0X2NyZWRpdF9wdWxsX2Rf
RGVjLTEwlEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfRGVjLTExlEtmjBlsYXN0X2NyZWRpdF9wdWxs
X2RfRGVjLTEylEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfRGVjLTEzlEtmjBlsYXN0X2NyZWRpdF9w
dWxsX2RfRGVjLTE0lEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfRGVjLTE1lEtmjBlsYXN0X2NyZWRp
dF9wdWxsX2RfRmViLTExlEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfRmViLTEylEtmjBlsYXN0X2Ny
ZWRpdF9wdWxsX2RfRmViLTEzlEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfRmViLTE0lEtmjBlsYXN0
X2NyZWRpdF9wdWxsX2RfRmViLTE1lEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfSmFuLTExlEtmjBls
YXN0X2NyZWRpdF9wdWxsX2RfSmFuLTEylEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfSmFuLTEzlEtm
jBlsYXN0X2NyZWRpdF9wdWxsX2RfSmFuLTE0lEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfSmFuLTE1
lEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfSmFuLTE2lEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfSnVs
LTEwlEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfSnVsLTExlEtmjBlsYXN0X2NyZWRpdF9wdWxsX2Rf
SnVsLTEylEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfSnVsLTEzlEtmjBlsYXN0X2NyZWRpdF9wdWxs
X2RfSnVsLTE0lEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfSnVsLTE1lEtmjBlsYXN0X2NyZWRpdF9w
dWxsX2RfSnVuLTEwlEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfSnVuLTExlEtmjBlsYXN0X2NyZWRp
dF9wdWxsX2RfSnVuLTEylEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfSnVuLTEzlEtmjBlsYXN0X2Ny
ZWRpdF9wdWxsX2RfSnVuLTE0lEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfSnVuLTE1lEtmjBlsYXN0
X2NyZWRpdF9wdWxsX2RfTWFyLTExlEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfTWFyLTEylEtmjBls
YXN0X2NyZWRpdF9wdWxsX2RfTWFyLTEzlEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfTWFyLTE0lEtm
jBlsYXN0X2NyZWRpdF9wdWxsX2RfTWFyLTE1lEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfTWF5LTEx
lEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfTWF5LTEylEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfTWF5
LTEzlEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfTWF5LTE0lEtmjBlsYXN0X2NyZWRpdF9wdWxsX2Rf
TWF5LTE1lEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfTm92LTEwlEtmjBlsYXN0X2NyZWRpdF9wdWxs
X2RfTm92LTExlEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfTm92LTEylEtmjBlsYXN0X2NyZWRpdF9w
dWxsX2RfTm92LTEzlEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfTm92LTE0lEtmjBlsYXN0X2NyZWRp
dF9wdWxsX2RfTm92LTE1lEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfT2N0LTEwlEtmjBlsYXN0X2Ny
ZWRpdF9wdWxsX2RfT2N0LTExlEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfT2N0LTEylEtmjBlsYXN0
X2NyZWRpdF9wdWxsX2RfT2N0LTEzlEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfT2N0LTE0lEtmjBls
YXN0X2NyZWRpdF9wdWxsX2RfT2N0LTE1lEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfU2VwLTEwlEtm
jBlsYXN0X2NyZWRpdF9wdWxsX2RfU2VwLTExlEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfU2VwLTEy
lEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfU2VwLTEzlEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfU2Vw
LTE0lEtmdXViaAspgZR9lChoDn2UKIwKYXR0cl9wYWlyc5RdlF2UKGj/S2SGlGj/S2SGlGVhaAZL
AnVoFn2UKIwJbG9hbl9hbW50lEtljAhpbnRfcmF0ZZRLZYwKYW5udWFsX2luY5RLZYwDZHRplEtl
jA5pbnFfbGFzdF82bXRoc5RLZYwIb3Blbl9hY2OUS2WMD2Z1bmRlZF9hbW50X2ludpRLZYwJcmV2
b2xfYmFslEtljAl0b3RhbF9hY2OUS2WMDmVtcF9sZW5ndGhfaW50lEtljBttdGhzX3NpbmNlX2Vh
cmxpZXN0X2NyX2xpbmWUS2WMCHRlcm1faW50lEtljBJtdGhzX3NpbmNlX2lzc3VlX2SUS2WMDW91
dF9wcm5jcF9pbnaUS2WMD3RvdGFsX3B5bW50X2ludpRLZYwIZ29vZF9iYWSUS2V1aCN9lCiMCXN1
Yl9ncmFkZZRLZYwKZW1wX2xlbmd0aJRLZYwOaG9tZV9vd25lcnNoaXCUS2WME3ZlcmlmaWNhdGlv
bl9zdGF0dXOUS2WMB3B1cnBvc2WUS2WMCmFkZHJfc3RhdGWUS2WME2luaXRpYWxfbGlzdF9zdGF0
dXOUS2WMDGxhc3RfcHltbnRfZJRLZYwKcHltbnRfcGxhbpRLZYwMbmV4dF9weW1udF9klEtljBJs
YXN0X2NyZWRpdF9wdWxsX2SUS2V1dWJoCymBlH2UKGgOfZQoaPxdlF2UKIwJUm93IGluZGV4lEtk
hpRqMAIAAEtkhpRlYWgGSwJ1aBZ9lChqAwEAAEtlagQBAABLZWoFAQAAS2VqBgEAAEtlagcBAABL
ZWoIAQAAS2VqCQEAAEtlagoBAABLZWoLAQAAS2VqDAEAAEtlag0BAABLZWoOAQAAS2VqDwEAAEtl
ahABAABLZWoRAQAAS2VqEgEAAEtldWgjfZQojA50ZXJtXzM2IG1vbnRoc5RLZowMc3ViX2dyYWRl
X0ExlEtmjAxzdWJfZ3JhZGVfQTKUS2aMDHN1Yl9ncmFkZV9BM5RLZowMc3ViX2dyYWRlX0E0lEtm
jAxzdWJfZ3JhZGVfQTWUS2aMDHN1Yl9ncmFkZV9CMZRLZowMc3ViX2dyYWRlX0IylEtmjAxzdWJf
Z3JhZGVfQjOUS2aMDHN1Yl9ncmFkZV9CNJRLZowMc3ViX2dyYWRlX0I1lEtmjAxzdWJfZ3JhZGVf
QzGUS2aMDHN1Yl9ncmFkZV9DMpRLZowMc3ViX2dyYWRlX0MzlEtmjAxzdWJfZ3JhZGVfQzSUS2aM
DHN1Yl9ncmFkZV9DNZRLZowMc3ViX2dyYWRlX0QxlEtmjAxzdWJfZ3JhZGVfRDKUS2aMDHN1Yl9n
cmFkZV9EM5RLZowMc3ViX2dyYWRlX0Q0lEtmjAxzdWJfZ3JhZGVfRDWUS2aMDHN1Yl9ncmFkZV9F
MZRLZowMc3ViX2dyYWRlX0UylEtmjAxzdWJfZ3JhZGVfRTOUS2aMDHN1Yl9ncmFkZV9FNJRLZowM
c3ViX2dyYWRlX0U1lEtmjAxzdWJfZ3JhZGVfRjGUS2aMDHN1Yl9ncmFkZV9GMpRLZowMc3ViX2dy
YWRlX0YzlEtmjAxzdWJfZ3JhZGVfRjSUS2aMDHN1Yl9ncmFkZV9GNZRLZowMc3ViX2dyYWRlX0cx
lEtmjAxzdWJfZ3JhZGVfRzKUS2aMDHN1Yl9ncmFkZV9HM5RLZowMc3ViX2dyYWRlX0c0lEtmjBFl
bXBfbGVuZ3RoXzEgeWVhcpRLZowSZW1wX2xlbmd0aF8yIHllYXJzlEtmjBJlbXBfbGVuZ3RoXzMg
eWVhcnOUS2aMEmVtcF9sZW5ndGhfNCB5ZWFyc5RLZowSZW1wX2xlbmd0aF81IHllYXJzlEtmjBJl
bXBfbGVuZ3RoXzYgeWVhcnOUS2aMEmVtcF9sZW5ndGhfNyB5ZWFyc5RLZowSZW1wX2xlbmd0aF84
IHllYXJzlEtmjBJlbXBfbGVuZ3RoXzkgeWVhcnOUS2aMFGVtcF9sZW5ndGhfMTArIHllYXJzlEtm
jBdob21lX293bmVyc2hpcF9NT1JUR0FHRZRLZowUaG9tZV9vd25lcnNoaXBfT1RIRVKUS2aMEmhv
bWVfb3duZXJzaGlwX09XTpRLZowgdmVyaWZpY2F0aW9uX3N0YXR1c19Ob3QgVmVyaWZpZWSUS2aM
I3ZlcmlmaWNhdGlvbl9zdGF0dXNfU291cmNlIFZlcmlmaWVklEtmjAtwdXJwb3NlX2NhcpRLZowT
cHVycG9zZV9jcmVkaXRfY2FyZJRLZowacHVycG9zZV9kZWJ0X2NvbnNvbGlkYXRpb26US2aME3B1
cnBvc2VfZWR1Y2F0aW9uYWyUS2aMGHB1cnBvc2VfaG9tZV9pbXByb3ZlbWVudJRLZowNcHVycG9z
ZV9ob3VzZZRLZowWcHVycG9zZV9tYWpvcl9wdXJjaGFzZZRLZowPcHVycG9zZV9tZWRpY2FslEtm
jA5wdXJwb3NlX21vdmluZ5RLZowNcHVycG9zZV9vdGhlcpRLZowYcHVycG9zZV9yZW5ld2FibGVf
ZW5lcmd5lEtmjBZwdXJwb3NlX3NtYWxsX2J1c2luZXNzlEtmjBBwdXJwb3NlX3ZhY2F0aW9ulEtm
jA1hZGRyX3N0YXRlX0FLlEtmjA1hZGRyX3N0YXRlX0FMlEtmjA1hZGRyX3N0YXRlX0FSlEtmjA1h
ZGRyX3N0YXRlX0FalEtmjA1hZGRyX3N0YXRlX0NBlEtmjA1hZGRyX3N0YXRlX0NPlEtmjA1hZGRy
X3N0YXRlX0NUlEtmjA1hZGRyX3N0YXRlX0RDlEtmjA1hZGRyX3N0YXRlX0RFlEtmjA1hZGRyX3N0
YXRlX0ZMlEtmjA1hZGRyX3N0YXRlX0dBlEtmjA1hZGRyX3N0YXRlX0hJlEtmjA1hZGRyX3N0YXRl
X0lBlEtmjA1hZGRyX3N0YXRlX0lMlEtmjA1hZGRyX3N0YXRlX0tTlEtmjA1hZGRyX3N0YXRlX0tZ
lEtmjA1hZGRyX3N0YXRlX0xBlEtmjA1hZGRyX3N0YXRlX01BlEtmjA1hZGRyX3N0YXRlX01ElEtm
jA1hZGRyX3N0YXRlX01JlEtmjA1hZGRyX3N0YXRlX01OlEtmjA1hZGRyX3N0YXRlX01PlEtmjA1h
ZGRyX3N0YXRlX01TlEtmjA1hZGRyX3N0YXRlX01UlEtmjA1hZGRyX3N0YXRlX05DlEtmjA1hZGRy
X3N0YXRlX05IlEtmjA1hZGRyX3N0YXRlX05KlEtmjA1hZGRyX3N0YXRlX05NlEtmjA1hZGRyX3N0
YXRlX05WlEtmjA1hZGRyX3N0YXRlX05ZlEtmjA1hZGRyX3N0YXRlX09IlEtmjA1hZGRyX3N0YXRl
X09LlEtmjA1hZGRyX3N0YXRlX09SlEtmjA1hZGRyX3N0YXRlX1BBlEtmjA1hZGRyX3N0YXRlX1JJ
lEtmjA1hZGRyX3N0YXRlX1NDlEtmjA1hZGRyX3N0YXRlX1NElEtmjA1hZGRyX3N0YXRlX1ROlEtm
jA1hZGRyX3N0YXRlX1RYlEtmjA1hZGRyX3N0YXRlX1VUlEtmjA1hZGRyX3N0YXRlX1ZBlEtmjA1h
ZGRyX3N0YXRlX1ZUlEtmjA1hZGRyX3N0YXRlX1dBlEtmjA1hZGRyX3N0YXRlX1dJlEtmjA1hZGRy
X3N0YXRlX1dWlEtmjBNsYXN0X3B5bW50X2RfQXByLTExlEtmjBNsYXN0X3B5bW50X2RfQXByLTEy
lEtmjBNsYXN0X3B5bW50X2RfQXByLTEzlEtmjBNsYXN0X3B5bW50X2RfQXByLTE0lEtmjBNsYXN0
X3B5bW50X2RfQXByLTE1lEtmjBNsYXN0X3B5bW50X2RfQXVnLTEwlEtmjBNsYXN0X3B5bW50X2Rf
QXVnLTExlEtmjBNsYXN0X3B5bW50X2RfQXVnLTEylEtmjBNsYXN0X3B5bW50X2RfQXVnLTEzlEtm
jBNsYXN0X3B5bW50X2RfQXVnLTE0lEtmjBNsYXN0X3B5bW50X2RfQXVnLTE1lEtmjBNsYXN0X3B5
bW50X2RfRGVjLTEwlEtmjBNsYXN0X3B5bW50X2RfRGVjLTExlEtmjBNsYXN0X3B5bW50X2RfRGVj
LTEylEtmjBNsYXN0X3B5bW50X2RfRGVjLTEzlEtmjBNsYXN0X3B5bW50X2RfRGVjLTE0lEtmjBNs
YXN0X3B5bW50X2RfRGVjLTE1lEtmjBNsYXN0X3B5bW50X2RfRmViLTExlEtmjBNsYXN0X3B5bW50
X2RfRmViLTEylEtmjBNsYXN0X3B5bW50X2RfRmViLTEzlEtmjBNsYXN0X3B5bW50X2RfRmViLTE0
lEtmjBNsYXN0X3B5bW50X2RfRmViLTE1lEtmjBNsYXN0X3B5bW50X2RfSmFuLTExlEtmjBNsYXN0
X3B5bW50X2RfSmFuLTEylEtmjBNsYXN0X3B5bW50X2RfSmFuLTEzlEtmjBNsYXN0X3B5bW50X2Rf
SmFuLTE0lEtmjBNsYXN0X3B5bW50X2RfSmFuLTE1lEtmjBNsYXN0X3B5bW50X2RfSmFuLTE2lEtm
jBNsYXN0X3B5bW50X2RfSnVsLTEwlEtmjBNsYXN0X3B5bW50X2RfSnVsLTExlEtmjBNsYXN0X3B5
bW50X2RfSnVsLTEylEtmjBNsYXN0X3B5bW50X2RfSnVsLTEzlEtmjBNsYXN0X3B5bW50X2RfSnVs
LTE0lEtmjBNsYXN0X3B5bW50X2RfSnVsLTE1lEtmjBNsYXN0X3B5bW50X2RfSnVuLTExlEtmjBNs
YXN0X3B5bW50X2RfSnVuLTEylEtmjBNsYXN0X3B5bW50X2RfSnVuLTEzlEtmjBNsYXN0X3B5bW50
X2RfSnVuLTE0lEtmjBNsYXN0X3B5bW50X2RfSnVuLTE1lEtmjBNsYXN0X3B5bW50X2RfTWFyLTEx
lEtmjBNsYXN0X3B5bW50X2RfTWFyLTEylEtmjBNsYXN0X3B5bW50X2RfTWFyLTEzlEtmjBNsYXN0
X3B5bW50X2RfTWFyLTE0lEtmjBNsYXN0X3B5bW50X2RfTWFyLTE1lEtmjBNsYXN0X3B5bW50X2Rf
TWF5LTExlEtmjBNsYXN0X3B5bW50X2RfTWF5LTEylEtmjBNsYXN0X3B5bW50X2RfTWF5LTEzlEtm
jBNsYXN0X3B5bW50X2RfTWF5LTE0lEtmjBNsYXN0X3B5bW50X2RfTWF5LTE1lEtmjBNsYXN0X3B5
bW50X2RfTm92LTEwlEtmjBNsYXN0X3B5bW50X2RfTm92LTExlEtmjBNsYXN0X3B5bW50X2RfTm92
LTEylEtmjBNsYXN0X3B5bW50X2RfTm92LTEzlEtmjBNsYXN0X3B5bW50X2RfTm92LTE0lEtmjBNs
YXN0X3B5bW50X2RfTm92LTE1lEtmjBNsYXN0X3B5bW50X2RfT2N0LTEwlEtmjBNsYXN0X3B5bW50
X2RfT2N0LTExlEtmjBNsYXN0X3B5bW50X2RfT2N0LTEylEtmjBNsYXN0X3B5bW50X2RfT2N0LTEz
lEtmjBNsYXN0X3B5bW50X2RfT2N0LTE0lEtmjBNsYXN0X3B5bW50X2RfT2N0LTE1lEtmjBNsYXN0
X3B5bW50X2RfU2VwLTEwlEtmjBNsYXN0X3B5bW50X2RfU2VwLTExlEtmjBNsYXN0X3B5bW50X2Rf
U2VwLTEylEtmjBNsYXN0X3B5bW50X2RfU2VwLTEzlEtmjBNsYXN0X3B5bW50X2RfU2VwLTE0lEtm
jAxweW1udF9wbGFuX26US2aME25leHRfcHltbnRfZF9GZWItMTaUS2aMGWxhc3RfY3JlZGl0X3B1
bGxfZF9BcHItMTGUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9BcHItMTKUS2aMGWxhc3RfY3JlZGl0
X3B1bGxfZF9BcHItMTOUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9BcHItMTSUS2aMGWxhc3RfY3Jl
ZGl0X3B1bGxfZF9BcHItMTWUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9BdWctMTCUS2aMGWxhc3Rf
Y3JlZGl0X3B1bGxfZF9BdWctMTGUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9BdWctMTKUS2aMGWxh
c3RfY3JlZGl0X3B1bGxfZF9BdWctMTOUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9BdWctMTSUS2aM
GWxhc3RfY3JlZGl0X3B1bGxfZF9BdWctMTWUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9EZWMtMTCU
S2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9EZWMtMTGUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9EZWMt
MTKUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9EZWMtMTOUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9E
ZWMtMTSUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9EZWMtMTWUS2aMGWxhc3RfY3JlZGl0X3B1bGxf
ZF9GZWItMTGUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9GZWItMTKUS2aMGWxhc3RfY3JlZGl0X3B1
bGxfZF9GZWItMTOUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9GZWItMTSUS2aMGWxhc3RfY3JlZGl0
X3B1bGxfZF9GZWItMTWUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9KYW4tMTGUS2aMGWxhc3RfY3Jl
ZGl0X3B1bGxfZF9KYW4tMTKUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9KYW4tMTOUS2aMGWxhc3Rf
Y3JlZGl0X3B1bGxfZF9KYW4tMTSUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9KYW4tMTWUS2aMGWxh
c3RfY3JlZGl0X3B1bGxfZF9KYW4tMTaUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9KdWwtMTCUS2aM
GWxhc3RfY3JlZGl0X3B1bGxfZF9KdWwtMTGUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9KdWwtMTKU
S2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9KdWwtMTOUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9KdWwt
MTSUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9KdWwtMTWUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9K
dW4tMTCUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9KdW4tMTGUS2aMGWxhc3RfY3JlZGl0X3B1bGxf
ZF9KdW4tMTKUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9KdW4tMTOUS2aMGWxhc3RfY3JlZGl0X3B1
bGxfZF9KdW4tMTSUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9KdW4tMTWUS2aMGWxhc3RfY3JlZGl0
X3B1bGxfZF9NYXItMTGUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9NYXItMTKUS2aMGWxhc3RfY3Jl
ZGl0X3B1bGxfZF9NYXItMTOUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9NYXItMTSUS2aMGWxhc3Rf
Y3JlZGl0X3B1bGxfZF9NYXItMTWUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9NYXktMTGUS2aMGWxh
c3RfY3JlZGl0X3B1bGxfZF9NYXktMTKUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9NYXktMTOUS2aM
GWxhc3RfY3JlZGl0X3B1bGxfZF9NYXktMTSUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9NYXktMTWU
S2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9Ob3YtMTCUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9Ob3Yt
MTGUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9Ob3YtMTKUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9O
b3YtMTOUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9Ob3YtMTSUS2aMGWxhc3RfY3JlZGl0X3B1bGxf
ZF9Ob3YtMTWUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9PY3QtMTCUS2aMGWxhc3RfY3JlZGl0X3B1
bGxfZF9PY3QtMTGUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9PY3QtMTKUS2aMGWxhc3RfY3JlZGl0
X3B1bGxfZF9PY3QtMTOUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9PY3QtMTSUS2aMGWxhc3RfY3Jl
ZGl0X3B1bGxfZF9PY3QtMTWUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9TZXAtMTCUS2aMGWxhc3Rf
Y3JlZGl0X3B1bGxfZF9TZXAtMTGUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9TZXAtMTKUS2aMGWxh
c3RfY3JlZGl0X3B1bGxfZF9TZXAtMTOUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9TZXAtMTSUS2Z1
dWJoCymBlH2UKGgOfZQoaPxdlF2UKGowAgAAS2SGlGowAgAAS2SGlGVhaAZLAnVoFn2UKGoDAQAA
S2VqBAEAAEtlagUBAABLZWoGAQAAS2VqBwEAAEtlaggBAABLZWoJAQAAS2VqCgEAAEtlagsBAABL
ZWoMAQAAS2VqDQEAAEtlag4BAABLZWoPAQAAS2VqEAEAAEtlahEBAABLZWoSAQAAS2V1aCN9lCiM
DnRlcm1fMzYgbW9udGhzlEtmjAdncmFkZV9BlEtmjAdncmFkZV9ClEtmjAdncmFkZV9DlEtmjAdn
cmFkZV9ElEtmjAdncmFkZV9FlEtmjAdncmFkZV9GlEtmjAxzdWJfZ3JhZGVfQTGUS2aMDHN1Yl9n
cmFkZV9BMpRLZowMc3ViX2dyYWRlX0EzlEtmjAxzdWJfZ3JhZGVfQTSUS2aMDHN1Yl9ncmFkZV9B
NZRLZowMc3ViX2dyYWRlX0IxlEtmjAxzdWJfZ3JhZGVfQjKUS2aMDHN1Yl9ncmFkZV9CM5RLZowM
c3ViX2dyYWRlX0I0lEtmjAxzdWJfZ3JhZGVfQjWUS2aMDHN1Yl9ncmFkZV9DMZRLZowMc3ViX2dy
YWRlX0MylEtmjAxzdWJfZ3JhZGVfQzOUS2aMDHN1Yl9ncmFkZV9DNJRLZowMc3ViX2dyYWRlX0M1
lEtmjAxzdWJfZ3JhZGVfRDGUS2aMDHN1Yl9ncmFkZV9EMpRLZowMc3ViX2dyYWRlX0QzlEtmjAxz
dWJfZ3JhZGVfRDSUS2aMDHN1Yl9ncmFkZV9ENZRLZowMc3ViX2dyYWRlX0UxlEtmjAxzdWJfZ3Jh
ZGVfRTKUS2aMDHN1Yl9ncmFkZV9FM5RLZowMc3ViX2dyYWRlX0U0lEtmjAxzdWJfZ3JhZGVfRTWU
S2aMDHN1Yl9ncmFkZV9GMZRLZowMc3ViX2dyYWRlX0YylEtmjAxzdWJfZ3JhZGVfRjOUS2aMDHN1
Yl9ncmFkZV9GNJRLZowMc3ViX2dyYWRlX0Y1lEtmjAxzdWJfZ3JhZGVfRzGUS2aMDHN1Yl9ncmFk
ZV9HMpRLZowMc3ViX2dyYWRlX0czlEtmjAxzdWJfZ3JhZGVfRzSUS2aMEWVtcF9sZW5ndGhfMSB5
ZWFylEtmjBJlbXBfbGVuZ3RoXzIgeWVhcnOUS2aMEmVtcF9sZW5ndGhfMyB5ZWFyc5RLZowSZW1w
X2xlbmd0aF80IHllYXJzlEtmjBJlbXBfbGVuZ3RoXzUgeWVhcnOUS2aMEmVtcF9sZW5ndGhfNiB5
ZWFyc5RLZowSZW1wX2xlbmd0aF83IHllYXJzlEtmjBJlbXBfbGVuZ3RoXzggeWVhcnOUS2aMEmVt
cF9sZW5ndGhfOSB5ZWFyc5RLZowUZW1wX2xlbmd0aF8xMCsgeWVhcnOUS2aMF2hvbWVfb3duZXJz
aGlwX01PUlRHQUdFlEtmjBRob21lX293bmVyc2hpcF9PVEhFUpRLZowSaG9tZV9vd25lcnNoaXBf
T1dOlEtmjCB2ZXJpZmljYXRpb25fc3RhdHVzX05vdCBWZXJpZmllZJRLZowjdmVyaWZpY2F0aW9u
X3N0YXR1c19Tb3VyY2UgVmVyaWZpZWSUS2aMC3B1cnBvc2VfY2FylEtmjBNwdXJwb3NlX2NyZWRp
dF9jYXJklEtmjBpwdXJwb3NlX2RlYnRfY29uc29saWRhdGlvbpRLZowTcHVycG9zZV9lZHVjYXRp
b25hbJRLZowYcHVycG9zZV9ob21lX2ltcHJvdmVtZW50lEtmjA1wdXJwb3NlX2hvdXNllEtmjBZw
dXJwb3NlX21ham9yX3B1cmNoYXNllEtmjA9wdXJwb3NlX21lZGljYWyUS2aMDnB1cnBvc2VfbW92
aW5nlEtmjA1wdXJwb3NlX290aGVylEtmjBhwdXJwb3NlX3JlbmV3YWJsZV9lbmVyZ3mUS2aMFnB1
cnBvc2Vfc21hbGxfYnVzaW5lc3OUS2aMEHB1cnBvc2VfdmFjYXRpb26US2aMDWFkZHJfc3RhdGVf
QUuUS2aMDWFkZHJfc3RhdGVfQUyUS2aMDWFkZHJfc3RhdGVfQVKUS2aMDWFkZHJfc3RhdGVfQVqU
S2aMDWFkZHJfc3RhdGVfQ0GUS2aMDWFkZHJfc3RhdGVfQ0+US2aMDWFkZHJfc3RhdGVfQ1SUS2aM
DWFkZHJfc3RhdGVfREOUS2aMDWFkZHJfc3RhdGVfREWUS2aMDWFkZHJfc3RhdGVfRkyUS2aMDWFk
ZHJfc3RhdGVfR0GUS2aMDWFkZHJfc3RhdGVfSEmUS2aMDWFkZHJfc3RhdGVfSUGUS2aMDWFkZHJf
c3RhdGVfSUyUS2aMDWFkZHJfc3RhdGVfS1OUS2aMDWFkZHJfc3RhdGVfS1mUS2aMDWFkZHJfc3Rh
dGVfTEGUS2aMDWFkZHJfc3RhdGVfTUGUS2aMDWFkZHJfc3RhdGVfTUSUS2aMDWFkZHJfc3RhdGVf
TUmUS2aMDWFkZHJfc3RhdGVfTU6US2aMDWFkZHJfc3RhdGVfTU+US2aMDWFkZHJfc3RhdGVfTVOU
S2aMDWFkZHJfc3RhdGVfTVSUS2aMDWFkZHJfc3RhdGVfTkOUS2aMDWFkZHJfc3RhdGVfTkiUS2aM
DWFkZHJfc3RhdGVfTkqUS2aMDWFkZHJfc3RhdGVfTk2US2aMDWFkZHJfc3RhdGVfTlaUS2aMDWFk
ZHJfc3RhdGVfTlmUS2aMDWFkZHJfc3RhdGVfT0iUS2aMDWFkZHJfc3RhdGVfT0uUS2aMDWFkZHJf
c3RhdGVfT1KUS2aMDWFkZHJfc3RhdGVfUEGUS2aMDWFkZHJfc3RhdGVfUkmUS2aMDWFkZHJfc3Rh
dGVfU0OUS2aMDWFkZHJfc3RhdGVfU0SUS2aMDWFkZHJfc3RhdGVfVE6US2aMDWFkZHJfc3RhdGVf
VFiUS2aMDWFkZHJfc3RhdGVfVVSUS2aMDWFkZHJfc3RhdGVfVkGUS2aMDWFkZHJfc3RhdGVfVlSU
S2aMDWFkZHJfc3RhdGVfV0GUS2aMDWFkZHJfc3RhdGVfV0mUS2aMDWFkZHJfc3RhdGVfV1aUS2aM
E2xhc3RfcHltbnRfZF9BcHItMTGUS2aME2xhc3RfcHltbnRfZF9BcHItMTKUS2aME2xhc3RfcHlt
bnRfZF9BcHItMTOUS2aME2xhc3RfcHltbnRfZF9BcHItMTSUS2aME2xhc3RfcHltbnRfZF9BcHIt
MTWUS2aME2xhc3RfcHltbnRfZF9BdWctMTCUS2aME2xhc3RfcHltbnRfZF9BdWctMTGUS2aME2xh
c3RfcHltbnRfZF9BdWctMTKUS2aME2xhc3RfcHltbnRfZF9BdWctMTOUS2aME2xhc3RfcHltbnRf
ZF9BdWctMTSUS2aME2xhc3RfcHltbnRfZF9BdWctMTWUS2aME2xhc3RfcHltbnRfZF9EZWMtMTCU
S2aME2xhc3RfcHltbnRfZF9EZWMtMTGUS2aME2xhc3RfcHltbnRfZF9EZWMtMTKUS2aME2xhc3Rf
cHltbnRfZF9EZWMtMTOUS2aME2xhc3RfcHltbnRfZF9EZWMtMTSUS2aME2xhc3RfcHltbnRfZF9E
ZWMtMTWUS2aME2xhc3RfcHltbnRfZF9GZWItMTGUS2aME2xhc3RfcHltbnRfZF9GZWItMTKUS2aM
E2xhc3RfcHltbnRfZF9GZWItMTOUS2aME2xhc3RfcHltbnRfZF9GZWItMTSUS2aME2xhc3RfcHlt
bnRfZF9GZWItMTWUS2aME2xhc3RfcHltbnRfZF9KYW4tMTGUS2aME2xhc3RfcHltbnRfZF9KYW4t
MTKUS2aME2xhc3RfcHltbnRfZF9KYW4tMTOUS2aME2xhc3RfcHltbnRfZF9KYW4tMTSUS2aME2xh
c3RfcHltbnRfZF9KYW4tMTWUS2aME2xhc3RfcHltbnRfZF9KYW4tMTaUS2aME2xhc3RfcHltbnRf
ZF9KdWwtMTCUS2aME2xhc3RfcHltbnRfZF9KdWwtMTGUS2aME2xhc3RfcHltbnRfZF9KdWwtMTKU
S2aME2xhc3RfcHltbnRfZF9KdWwtMTOUS2aME2xhc3RfcHltbnRfZF9KdWwtMTSUS2aME2xhc3Rf
cHltbnRfZF9KdWwtMTWUS2aME2xhc3RfcHltbnRfZF9KdW4tMTGUS2aME2xhc3RfcHltbnRfZF9K
dW4tMTKUS2aME2xhc3RfcHltbnRfZF9KdW4tMTOUS2aME2xhc3RfcHltbnRfZF9KdW4tMTSUS2aM
E2xhc3RfcHltbnRfZF9KdW4tMTWUS2aME2xhc3RfcHltbnRfZF9NYXItMTGUS2aME2xhc3RfcHlt
bnRfZF9NYXItMTKUS2aME2xhc3RfcHltbnRfZF9NYXItMTOUS2aME2xhc3RfcHltbnRfZF9NYXIt
MTSUS2aME2xhc3RfcHltbnRfZF9NYXItMTWUS2aME2xhc3RfcHltbnRfZF9NYXktMTGUS2aME2xh
c3RfcHltbnRfZF9NYXktMTKUS2aME2xhc3RfcHltbnRfZF9NYXktMTOUS2aME2xhc3RfcHltbnRf
ZF9NYXktMTSUS2aME2xhc3RfcHltbnRfZF9NYXktMTWUS2aME2xhc3RfcHltbnRfZF9Ob3YtMTCU
S2aME2xhc3RfcHltbnRfZF9Ob3YtMTGUS2aME2xhc3RfcHltbnRfZF9Ob3YtMTKUS2aME2xhc3Rf
cHltbnRfZF9Ob3YtMTOUS2aME2xhc3RfcHltbnRfZF9Ob3YtMTSUS2aME2xhc3RfcHltbnRfZF9O
b3YtMTWUS2aME2xhc3RfcHltbnRfZF9PY3QtMTCUS2aME2xhc3RfcHltbnRfZF9PY3QtMTGUS2aM
E2xhc3RfcHltbnRfZF9PY3QtMTKUS2aME2xhc3RfcHltbnRfZF9PY3QtMTOUS2aME2xhc3RfcHlt
bnRfZF9PY3QtMTSUS2aME2xhc3RfcHltbnRfZF9PY3QtMTWUS2aME2xhc3RfcHltbnRfZF9TZXAt
MTCUS2aME2xhc3RfcHltbnRfZF9TZXAtMTGUS2aME2xhc3RfcHltbnRfZF9TZXAtMTKUS2aME2xh
c3RfcHltbnRfZF9TZXAtMTOUS2aME2xhc3RfcHltbnRfZF9TZXAtMTSUS2aMDHB5bW50X3BsYW5f
bpRLZowTbmV4dF9weW1udF9kX0ZlYi0xNpRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0Fwci0xMZRL
ZowZbGFzdF9jcmVkaXRfcHVsbF9kX0Fwci0xMpRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0Fwci0x
M5RLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0Fwci0xNJRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0Fw
ci0xNZRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0F1Zy0xMJRLZowZbGFzdF9jcmVkaXRfcHVsbF9k
X0F1Zy0xMZRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0F1Zy0xMpRLZowZbGFzdF9jcmVkaXRfcHVs
bF9kX0F1Zy0xM5RLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0F1Zy0xNJRLZowZbGFzdF9jcmVkaXRf
cHVsbF9kX0F1Zy0xNZRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0RlYy0xMJRLZowZbGFzdF9jcmVk
aXRfcHVsbF9kX0RlYy0xMZRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0RlYy0xMpRLZowZbGFzdF9j
cmVkaXRfcHVsbF9kX0RlYy0xM5RLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0RlYy0xNJRLZowZbGFz
dF9jcmVkaXRfcHVsbF9kX0RlYy0xNZRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0ZlYi0xMZRLZowZ
bGFzdF9jcmVkaXRfcHVsbF9kX0ZlYi0xMpRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0ZlYi0xM5RL
ZowZbGFzdF9jcmVkaXRfcHVsbF9kX0ZlYi0xNJRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0ZlYi0x
NZRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0phbi0xMZRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0ph
bi0xMpRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0phbi0xM5RLZowZbGFzdF9jcmVkaXRfcHVsbF9k
X0phbi0xNJRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0phbi0xNZRLZowZbGFzdF9jcmVkaXRfcHVs
bF9kX0phbi0xNpRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0p1bC0xMJRLZowZbGFzdF9jcmVkaXRf
cHVsbF9kX0p1bC0xMZRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0p1bC0xMpRLZowZbGFzdF9jcmVk
aXRfcHVsbF9kX0p1bC0xM5RLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0p1bC0xNJRLZowZbGFzdF9j
cmVkaXRfcHVsbF9kX0p1bC0xNZRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0p1bi0xMJRLZowZbGFz
dF9jcmVkaXRfcHVsbF9kX0p1bi0xMZRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0p1bi0xMpRLZowZ
bGFzdF9jcmVkaXRfcHVsbF9kX0p1bi0xM5RLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0p1bi0xNJRL
ZowZbGFzdF9jcmVkaXRfcHVsbF9kX0p1bi0xNZRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX01hci0x
MZRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX01hci0xMpRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX01h
ci0xM5RLZowZbGFzdF9jcmVkaXRfcHVsbF9kX01hci0xNJRLZowZbGFzdF9jcmVkaXRfcHVsbF9k
X01hci0xNZRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX01heS0xMZRLZowZbGFzdF9jcmVkaXRfcHVs
bF9kX01heS0xMpRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX01heS0xM5RLZowZbGFzdF9jcmVkaXRf
cHVsbF9kX01heS0xNJRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX01heS0xNZRLZowZbGFzdF9jcmVk
aXRfcHVsbF9kX05vdi0xMJRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX05vdi0xMZRLZowZbGFzdF9j
cmVkaXRfcHVsbF9kX05vdi0xMpRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX05vdi0xM5RLZowZbGFz
dF9jcmVkaXRfcHVsbF9kX05vdi0xNJRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX05vdi0xNZRLZowZ
bGFzdF9jcmVkaXRfcHVsbF9kX09jdC0xMJRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX09jdC0xMZRL
ZowZbGFzdF9jcmVkaXRfcHVsbF9kX09jdC0xMpRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX09jdC0x
M5RLZowZbGFzdF9jcmVkaXRfcHVsbF9kX09jdC0xNJRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX09j
dC0xNZRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX1NlcC0xMJRLZowZbGFzdF9jcmVkaXRfcHVsbF9k
X1NlcC0xMZRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX1NlcC0xMpRLZowZbGFzdF9jcmVkaXRfcHVs
bF9kX1NlcC0xM5RLZowZbGFzdF9jcmVkaXRfcHVsbF9kX1NlcC0xNJRLZnV1YmgLKYGUfZQoaA59
lCho/F2UXZQoajACAABLZIaUajACAABLZIaUZWFoBksCdWgWfZQoagMBAABLZWoEAQAAS2VqBQEA
AEtlagYBAABLZWoHAQAAS2VqCAEAAEtlagkBAABLZWoKAQAAS2VqCwEAAEtlagwBAABLZWoNAQAA
S2VqDgEAAEtlag8BAABLZYwKcHltbnRfcGxhbpRLZWoQAQAAS2VqEQEAAEtlahIBAABLZXVoI32U
KGoxAwAAS2ZqMgMAAEtmajMDAABLZmo0AwAAS2ZqNQMAAEtmajYDAABLZmo3AwAAS2ZqOAMAAEtm
ajkDAABLZmo6AwAAS2ZqOwMAAEtmajwDAABLZmo9AwAAS2ZqPgMAAEtmaj8DAABLZmpAAwAAS2Zq
QQMAAEtmakIDAABLZmpDAwAAS2ZqRAMAAEtmakUDAABLZmpGAwAAS2ZqRwMAAEtmakgDAABLZmpJ
AwAAS2ZqSgMAAEtmaksDAABLZmpMAwAAS2ZqTQMAAEtmak4DAABLZmpPAwAAS2ZqUAMAAEtmalED
AABLZmpSAwAAS2ZqUwMAAEtmalQDAABLZmpVAwAAS2ZqVgMAAEtmalcDAABLZmpYAwAAS2ZqWQMA
AEtmaloDAABLZmpbAwAAS2ZqXAMAAEtmal0DAABLZmpeAwAAS2ZqXwMAAEtmamADAABLZmphAwAA
S2ZqYgMAAEtmamMDAABLZmpkAwAAS2ZqZQMAAEtmamYDAABLZmpnAwAAS2ZqaAMAAEtmamkDAABL
ZmpqAwAAS2ZqawMAAEtmamwDAABLZmptAwAAS2ZqbgMAAEtmam8DAABLZmpwAwAAS2ZqcQMAAEtm
anIDAABLZmpzAwAAS2ZqdAMAAEtmanUDAABLZmp2AwAAS2ZqdwMAAEtmangDAABLZmp5AwAAS2Zq
egMAAEtmansDAABLZmp8AwAAS2ZqfQMAAEtman4DAABLZmp/AwAAS2ZqgAMAAEtmaoEDAABLZmqC
AwAAS2ZqgwMAAEtmaoQDAABLZmqFAwAAS2ZqhgMAAEtmaocDAABLZmqIAwAAS2ZqiQMAAEtmaooD
AABLZmqLAwAAS2ZqjAMAAEtmao0DAABLZmqOAwAAS2ZqjwMAAEtmapADAABLZmqRAwAAS2ZqkgMA
AEtmapMDAABLZmqUAwAAS2ZqlQMAAEtmapYDAABLZmqXAwAAS2ZqmAMAAEtmapkDAABLZmqaAwAA
S2ZqmwMAAEtmapwDAABLZmqdAwAAS2ZqngMAAEtmap8DAABLZmqgAwAAS2ZqoQMAAEtmaqIDAABL
ZmqjAwAAS2ZqpAMAAEtmaqUDAABLZmqmAwAAS2ZqpwMAAEtmaqgDAABLZmqpAwAAS2ZqqgMAAEtm
aqsDAABLZmqsAwAAS2ZqrQMAAEtmaq4DAABLZmqvAwAAS2ZqsAMAAEtmarEDAABLZmqyAwAAS2Zq
swMAAEtmarQDAABLZmq1AwAAS2ZqtgMAAEtmarcDAABLZmq4AwAAS2ZquQMAAEtmaroDAABLZmq7
AwAAS2ZqvAMAAEtmar0DAABLZmq+AwAAS2ZqvwMAAEtmasADAABLZmrBAwAAS2ZqwgMAAEtmasMD
AABLZmrEAwAAS2ZqxQMAAEtmasYDAABLZmrHAwAAS2ZqyAMAAEtmaskDAABLZmrKAwAAS2ZqywMA
AEtmaswDAABLZmrNAwAAS2ZqzgMAAEtmas8DAABLZmrQAwAAS2Zq0QMAAEtmatIDAABLZmrTAwAA
S2Zq1AMAAEtmatUDAABLZmrWAwAAS2Zq1wMAAEtmatgDAABLZmrZAwAAS2Zq2gMAAEtmatsDAABL
ZmrcAwAAS2Zq3QMAAEtmat4DAABLZmrfAwAAS2Zq4AMAAEtmauEDAABLZmriAwAAS2Zq4wMAAEtm
auQDAABLZmrlAwAAS2Zq5gMAAEtmaucDAABLZmroAwAAS2Zq6QMAAEtmauoDAABLZmrrAwAAS2Zq
7AMAAEtmau0DAABLZmruAwAAS2Zq7wMAAEtmavADAABLZmrxAwAAS2Zq8gMAAEtmavMDAABLZmr0
AwAAS2Zq9QMAAEtmavYDAABLZmr3AwAAS2Zq+AMAAEtmavkDAABLZmr6AwAAS2Zq+wMAAEtmavwD
AABLZmr9AwAAS2Zq/gMAAEtmav8DAABLZmoABAAAS2ZqAQQAAEtmagIEAABLZmoDBAAAS2ZqBAQA
AEtmagUEAABLZmoGBAAAS2ZqBwQAAEtmaggEAABLZmoJBAAAS2ZqCgQAAEtmagsEAABLZmoMBAAA
S2ZqDQQAAEtmag4EAABLZmoPBAAAS2ZqEAQAAEtmahEEAABLZmoSBAAAS2ZqEwQAAEtmahQEAABL
ZmoVBAAAS2ZqFgQAAEtmahcEAABLZmoYBAAAS2ZqGQQAAEtmahoEAABLZmobBAAAS2ZqHAQAAEtm
ah0EAABLZmoeBAAAS2ZqHwQAAEtmaiAEAABLZmohBAAAS2ZqIgQAAEtmaiMEAABLZmokBAAAS2Zq
JQQAAEtmaiYEAABLZmonBAAAS2ZqKAQAAEtmaikEAABLZnV1YmgLKYGUfZQoaA59lCho/F2UXZQo
ajACAABLZIaUajACAABLZIaUZWFoBksCdWgWfZQoagMBAABLZWoEAQAAS2VqBQEAAEtlagYBAABL
ZWoHAQAAS2VqCAEAAEtlagkBAABLZWoKAQAAS2VqCwEAAEtlagwBAABLZWoNAQAAS2VqDgEAAEtl
ag8BAABLZWoyBAAAS2VqEAEAAEtlahEBAABLZYwSbGFzdF9jcmVkaXRfcHVsbF9klEtlahIBAABL
ZXVoI32UKGoxAwAAS2ZqMgMAAEtmajMDAABLZmo0AwAAS2ZqNQMAAEtmajYDAABLZmo3AwAAS2Zq
OAMAAEtmajkDAABLZmo6AwAAS2ZqOwMAAEtmajwDAABLZmo9AwAAS2ZqPgMAAEtmaj8DAABLZmpA
AwAAS2ZqQQMAAEtmakIDAABLZmpDAwAAS2ZqRAMAAEtmakUDAABLZmpGAwAAS2ZqRwMAAEtmakgD
AABLZmpJAwAAS2ZqSgMAAEtmaksDAABLZmpMAwAAS2ZqTQMAAEtmak4DAABLZmpPAwAAS2ZqUAMA
AEtmalEDAABLZmpSAwAAS2ZqUwMAAEtmalQDAABLZmpVAwAAS2ZqVgMAAEtmalcDAABLZmpYAwAA
S2ZqWQMAAEtmaloDAABLZmpbAwAAS2ZqXAMAAEtmal0DAABLZmpeAwAAS2ZqXwMAAEtmamADAABL
ZmphAwAAS2ZqYgMAAEtmamMDAABLZmpkAwAAS2ZqZQMAAEtmamYDAABLZmpnAwAAS2ZqaAMAAEtm
amkDAABLZmpqAwAAS2ZqawMAAEtmamwDAABLZmptAwAAS2ZqbgMAAEtmam8DAABLZmpwAwAAS2Zq
cQMAAEtmanIDAABLZmpzAwAAS2ZqdAMAAEtmanUDAABLZmp2AwAAS2ZqdwMAAEtmangDAABLZmp5
AwAAS2ZqegMAAEtmansDAABLZmp8AwAAS2ZqfQMAAEtman4DAABLZmp/AwAAS2ZqgAMAAEtmaoED
AABLZmqCAwAAS2ZqgwMAAEtmaoQDAABLZmqFAwAAS2ZqhgMAAEtmaocDAABLZmqIAwAAS2ZqiQMA
AEtmaooDAABLZmqLAwAAS2ZqjAMAAEtmao0DAABLZmqOAwAAS2ZqjwMAAEtmapADAABLZmqRAwAA
S2ZqkgMAAEtmapMDAABLZmqUAwAAS2ZqlQMAAEtmapYDAABLZmqXAwAAS2ZqmAMAAEtmapkDAABL
ZmqaAwAAS2ZqmwMAAEtmapwDAABLZmqdAwAAS2ZqngMAAEtmap8DAABLZmqgAwAAS2ZqoQMAAEtm
aqIDAABLZmqjAwAAS2ZqpAMAAEtmaqUDAABLZmqmAwAAS2ZqpwMAAEtmaqgDAABLZmqpAwAAS2Zq
qgMAAEtmaqsDAABLZmqsAwAAS2ZqrQMAAEtmaq4DAABLZmqvAwAAS2ZqsAMAAEtmarEDAABLZmqy
AwAAS2ZqswMAAEtmarQDAABLZmq1AwAAS2ZqtgMAAEtmarcDAABLZmq4AwAAS2ZquQMAAEtmaroD
AABLZmq7AwAAS2ZqvAMAAEtmar0DAABLZmq+AwAAS2ZqvwMAAEtmasADAABLZmrBAwAAS2ZqwgMA
AEtmasMDAABLZmrEAwAAS2ZqxQMAAEtmasYDAABLZmrHAwAAS2ZqyAMAAEtmaskDAABLZmrKAwAA
S2ZqywMAAEtmaswDAABLZmrNAwAAS2ZqzgMAAEtmas8DAABLZmrQAwAAS2Zq0QMAAEtmatIDAABL
ZmrTAwAAS2Zq1AMAAEtmatUDAABLZmrWAwAAS2Zq1wMAAEtmatgDAABLZmrZAwAAS2Zq2gMAAEtm
atsDAABLZmrcAwAAS2Zq3QMAAEtmat4DAABLZmrfAwAAS2Zq4AMAAEtmauEDAABLZmriAwAAS2Zq
4wMAAEtmauQDAABLZmrlAwAAS2Zq5gMAAEtmaucDAABLZmroAwAAS2Zq6QMAAEtmauoDAABLZmrr
AwAAS2Zq7AMAAEtmau0DAABLZmruAwAAS2Zq7wMAAEtmavADAABLZmrxAwAAS2Zq8gMAAEtmavMD
AABLZmr0AwAAS2Zq9QMAAEtmavYDAABLZmr3AwAAS2Zq+AMAAEtmavkDAABLZmr6AwAAS2Zq+wMA
AEtmavwDAABLZmr9AwAAS2Zq/gMAAEtmav8DAABLZmoABAAAS2ZqAQQAAEtmagIEAABLZmoDBAAA
S2ZqBAQAAEtmagUEAABLZmoGBAAAS2ZqBwQAAEtmaggEAABLZmoJBAAAS2ZqCgQAAEtmagsEAABL
ZmoMBAAAS2ZqDQQAAEtmag4EAABLZmoPBAAAS2ZqEAQAAEtmahEEAABLZmoSBAAAS2ZqEwQAAEtm
ahQEAABLZmoVBAAAS2ZqFgQAAEtmahcEAABLZmoYBAAAS2ZqGQQAAEtmahoEAABLZmobBAAAS2Zq
HAQAAEtmah0EAABLZmoeBAAAS2ZqHwQAAEtmaiAEAABLZmohBAAAS2ZqIgQAAEtmaiMEAABLZmok
BAAAS2ZqJQQAAEtmaiYEAABLZmonBAAAS2ZqKAQAAEtmaikEAABLZnV1YmgLKYGUfZQoaA59lCho
/F2UXZQoajACAABLZIaUajACAABLZIaUZWFoBksCdWgWfZQoagMBAABLZWoEAQAAS2VqBQEAAEtl
agYBAABLZWoHAQAAS2VqCAEAAEtlagkBAABLZWoKAQAAS2VqCwEAAEtlagwBAABLZWoNAQAAS2Vq
DgEAAEtlag8BAABLZWoyBAAAS2VqEAEAAEtlahEBAABLZYwMbmV4dF9weW1udF9klEtlajwEAABL
ZWoSAQAAS2V1aCN9lChqMQMAAEtmajIDAABLZmozAwAAS2ZqNAMAAEtmajUDAABLZmo2AwAAS2Zq
NwMAAEtmajgDAABLZmo5AwAAS2ZqOgMAAEtmajsDAABLZmo8AwAAS2ZqPQMAAEtmaj4DAABLZmo/
AwAAS2ZqQAMAAEtmakEDAABLZmpCAwAAS2ZqQwMAAEtmakQDAABLZmpFAwAAS2ZqRgMAAEtmakcD
AABLZmpIAwAAS2ZqSQMAAEtmakoDAABLZmpLAwAAS2ZqTAMAAEtmak0DAABLZmpOAwAAS2ZqTwMA
AEtmalADAABLZmpRAwAAS2ZqUgMAAEtmalMDAABLZmpUAwAAS2ZqVQMAAEtmalYDAABLZmpXAwAA
S2ZqWAMAAEtmalkDAABLZmpaAwAAS2ZqWwMAAEtmalwDAABLZmpdAwAAS2ZqXgMAAEtmal8DAABL
ZmpgAwAAS2ZqYQMAAEtmamIDAABLZmpjAwAAS2ZqZAMAAEtmamUDAABLZmpmAwAAS2ZqZwMAAEtm
amgDAABLZmppAwAAS2ZqagMAAEtmamsDAABLZmpsAwAAS2ZqbQMAAEtmam4DAABLZmpvAwAAS2Zq
cAMAAEtmanEDAABLZmpyAwAAS2ZqcwMAAEtmanQDAABLZmp1AwAAS2ZqdgMAAEtmancDAABLZmp4
AwAAS2ZqeQMAAEtmanoDAABLZmp7AwAAS2ZqfAMAAEtman0DAABLZmp+AwAAS2ZqfwMAAEtmaoAD
AABLZmqBAwAAS2ZqggMAAEtmaoMDAABLZmqEAwAAS2ZqhQMAAEtmaoYDAABLZmqHAwAAS2ZqiAMA
AEtmaokDAABLZmqKAwAAS2ZqiwMAAEtmaowDAABLZmqNAwAAS2ZqjgMAAEtmao8DAABLZmqQAwAA
S2ZqkQMAAEtmapIDAABLZmqTAwAAS2ZqlAMAAEtmapUDAABLZmqWAwAAS2ZqlwMAAEtmapgDAABL
ZmqZAwAAS2ZqmgMAAEtmapsDAABLZmqcAwAAS2ZqnQMAAEtmap4DAABLZmqfAwAAS2ZqoAMAAEtm
aqEDAABLZmqiAwAAS2ZqowMAAEtmaqQDAABLZmqlAwAAS2ZqpgMAAEtmaqcDAABLZmqoAwAAS2Zq
qQMAAEtmaqoDAABLZmqrAwAAS2ZqrAMAAEtmaq0DAABLZmquAwAAS2ZqrwMAAEtmarADAABLZmqx
AwAAS2ZqsgMAAEtmarMDAABLZmq0AwAAS2ZqtQMAAEtmarYDAABLZmq3AwAAS2ZquAMAAEtmarkD
AABLZmq6AwAAS2ZquwMAAEtmarwDAABLZmq9AwAAS2ZqvgMAAEtmar8DAABLZmrAAwAAS2ZqwQMA
AEtmasIDAABLZmrDAwAAS2ZqxAMAAEtmasUDAABLZmrGAwAAS2ZqxwMAAEtmasgDAABLZmrJAwAA
S2ZqygMAAEtmassDAABLZmrMAwAAS2ZqzQMAAEtmas4DAABLZmrPAwAAS2Zq0AMAAEtmatEDAABL
ZmrSAwAAS2Zq0wMAAEtmatQDAABLZmrVAwAAS2Zq1gMAAEtmatcDAABLZmrYAwAAS2Zq2QMAAEtm
atoDAABLZmrbAwAAS2Zq3AMAAEtmat0DAABLZmreAwAAS2Zq3wMAAEtmauADAABLZmrhAwAAS2Zq
4gMAAEtmauMDAABLZmrkAwAAS2Zq5QMAAEtmauYDAABLZmrnAwAAS2Zq6AMAAEtmaukDAABLZmrq
AwAAS2Zq6wMAAEtmauwDAABLZmrtAwAAS2Zq7gMAAEtmau8DAABLZmrwAwAAS2Zq8QMAAEtmavID
AABLZmrzAwAAS2Zq9AMAAEtmavUDAABLZmr2AwAAS2Zq9wMAAEtmavgDAABLZmr5AwAAS2Zq+gMA
AEtmavsDAABLZmr8AwAAS2Zq/QMAAEtmav4DAABLZmr/AwAAS2ZqAAQAAEtmagEEAABLZmoCBAAA
S2ZqAwQAAEtmagQEAABLZmoFBAAAS2ZqBgQAAEtmagcEAABLZmoIBAAAS2ZqCQQAAEtmagoEAABL
ZmoLBAAAS2ZqDAQAAEtmag0EAABLZmoOBAAAS2ZqDwQAAEtmahAEAABLZmoRBAAAS2ZqEgQAAEtm
ahMEAABLZmoUBAAAS2ZqFQQAAEtmahYEAABLZmoXBAAAS2ZqGAQAAEtmahkEAABLZmoaBAAAS2Zq
GwQAAEtmahwEAABLZmodBAAAS2ZqHgQAAEtmah8EAABLZmogBAAAS2ZqIQQAAEtmaiIEAABLZmoj
BAAAS2ZqJAQAAEtmaiUEAABLZmomBAAAS2ZqJwQAAEtmaigEAABLZmopBAAAS2Z1dWJoCymBlH2U
KGgOfZQoaPxdlF2UKGowAgAAS2SGlGowAgAAS2SGlGVhaAZLAnVoFn2UKGoDAQAAS2VqBAEAAEtl
agUBAABLZWoGAQAAS2VqBwEAAEtlaggBAABLZWoJAQAAS2VqCgEAAEtlagsBAABLZWoMAQAAS2Vq
DQEAAEtlag4BAABLZWoPAQAAS2VqMgQAAEtlahABAABLZWoRAQAAS2VqRgQAAEtlajwEAABLZYwQ
YXBwbGljYXRpb25fdHlwZZRLZWoSAQAAS2V1aCN9lChqMQMAAEtmajIDAABLZmozAwAAS2ZqNAMA
AEtmajUDAABLZmo2AwAAS2ZqNwMAAEtmajgDAABLZmo5AwAAS2ZqOgMAAEtmajsDAABLZmo8AwAA
S2ZqPQMAAEtmaj4DAABLZmo/AwAAS2ZqQAMAAEtmakEDAABLZmpCAwAAS2ZqQwMAAEtmakQDAABL
ZmpFAwAAS2ZqRgMAAEtmakcDAABLZmpIAwAAS2ZqSQMAAEtmakoDAABLZmpLAwAAS2ZqTAMAAEtm
ak0DAABLZmpOAwAAS2ZqTwMAAEtmalADAABLZmpRAwAAS2ZqUgMAAEtmalMDAABLZmpUAwAAS2Zq
VQMAAEtmalYDAABLZmpXAwAAS2ZqWAMAAEtmalkDAABLZmpaAwAAS2ZqWwMAAEtmalwDAABLZmpd
AwAAS2ZqXgMAAEtmal8DAABLZmpgAwAAS2ZqYQMAAEtmamIDAABLZmpjAwAAS2ZqZAMAAEtmamUD
AABLZmpmAwAAS2ZqZwMAAEtmamgDAABLZmppAwAAS2ZqagMAAEtmamsDAABLZmpsAwAAS2ZqbQMA
AEtmam4DAABLZmpvAwAAS2ZqcAMAAEtmanEDAABLZmpyAwAAS2ZqcwMAAEtmanQDAABLZmp1AwAA
S2ZqdgMAAEtmancDAABLZmp4AwAAS2ZqeQMAAEtmanoDAABLZmp7AwAAS2ZqfAMAAEtman0DAABL
Zmp+AwAAS2ZqfwMAAEtmaoADAABLZmqBAwAAS2ZqggMAAEtmaoMDAABLZmqEAwAAS2ZqhQMAAEtm
aoYDAABLZmqHAwAAS2ZqiAMAAEtmaokDAABLZmqKAwAAS2ZqiwMAAEtmaowDAABLZmqNAwAAS2Zq
jgMAAEtmao8DAABLZmqQAwAAS2ZqkQMAAEtmapIDAABLZmqTAwAAS2ZqlAMAAEtmapUDAABLZmqW
AwAAS2ZqlwMAAEtmapgDAABLZmqZAwAAS2ZqmgMAAEtmapsDAABLZmqcAwAAS2ZqnQMAAEtmap4D
AABLZmqfAwAAS2ZqoAMAAEtmaqEDAABLZmqiAwAAS2ZqowMAAEtmaqQDAABLZmqlAwAAS2ZqpgMA
AEtmaqcDAABLZmqoAwAAS2ZqqQMAAEtmaqoDAABLZmqrAwAAS2ZqrAMAAEtmaq0DAABLZmquAwAA
S2ZqrwMAAEtmarADAABLZmqxAwAAS2ZqsgMAAEtmarMDAABLZmq0AwAAS2ZqtQMAAEtmarYDAABL
Zmq3AwAAS2ZquAMAAEtmarkDAABLZmq6AwAAS2ZquwMAAEtmarwDAABLZmq9AwAAS2ZqvgMAAEtm
ar8DAABLZmrAAwAAS2ZqwQMAAEtmasIDAABLZmrDAwAAS2ZqxAMAAEtmasUDAABLZmrGAwAAS2Zq
xwMAAEtmasgDAABLZmrJAwAAS2ZqygMAAEtmassDAABLZmrMAwAAS2ZqzQMAAEtmas4DAABLZmrP
AwAAS2Zq0AMAAEtmatEDAABLZmrSAwAAS2Zq0wMAAEtmatQDAABLZmrVAwAAS2Zq1gMAAEtmatcD
AABLZmrYAwAAS2Zq2QMAAEtmatoDAABLZmrbAwAAS2Zq3AMAAEtmat0DAABLZmreAwAAS2Zq3wMA
AEtmauADAABLZmrhAwAAS2Zq4gMAAEtmauMDAABLZmrkAwAAS2Zq5QMAAEtmauYDAABLZmrnAwAA
S2Zq6AMAAEtmaukDAABLZmrqAwAAS2Zq6wMAAEtmauwDAABLZmrtAwAAS2Zq7gMAAEtmau8DAABL
ZmrwAwAAS2Zq8QMAAEtmavIDAABLZmrzAwAAS2Zq9AMAAEtmavUDAABLZmr2AwAAS2Zq9wMAAEtm
avgDAABLZmr5AwAAS2Zq+gMAAEtmavsDAABLZmr8AwAAS2Zq/QMAAEtmav4DAABLZmr/AwAAS2Zq
AAQAAEtmagEEAABLZmoCBAAAS2ZqAwQAAEtmagQEAABLZmoFBAAAS2ZqBgQAAEtmagcEAABLZmoI
BAAAS2ZqCQQAAEtmagoEAABLZmoLBAAAS2ZqDAQAAEtmag0EAABLZmoOBAAAS2ZqDwQAAEtmahAE
AABLZmoRBAAAS2ZqEgQAAEtmahMEAABLZmoUBAAAS2ZqFQQAAEtmahYEAABLZmoXBAAAS2ZqGAQA
AEtmahkEAABLZmoaBAAAS2ZqGwQAAEtmahwEAABLZmodBAAAS2ZqHgQAAEtmah8EAABLZmogBAAA
S2ZqIQQAAEtmaiIEAABLZmojBAAAS2ZqJAQAAEtmaiUEAABLZmomBAAAS2ZqJwQAAEtmaigEAABL
ZmopBAAAS2Z1dWJoCymBlH2UKGgOfZQoaPxdlF2UKGowAgAAS2SGlGowAgAAS2SGlGVhaAZLAnVo
Fn2UKGoDAQAAS2VqBAEAAEtlagUBAABLZWoGAQAAS2VqBwEAAEtlaggBAABLZWoJAQAAS2VqCgEA
AEtlagsBAABLZWoMAQAAS2VqDQEAAEtlag4BAABLZWoPAQAAS2VqMgQAAEtlahABAABLZWoRAQAA
S2VqRgQAAEtlajwEAABLZYwLcG9saWN5X2NvZGWUS2VqUAQAAEtlahIBAABLZXVoI32UKGoxAwAA
S2ZqMgMAAEtmajMDAABLZmo0AwAAS2ZqNQMAAEtmajYDAABLZmo3AwAAS2ZqOAMAAEtmajkDAABL
Zmo6AwAAS2ZqOwMAAEtmajwDAABLZmo9AwAAS2ZqPgMAAEtmaj8DAABLZmpAAwAAS2ZqQQMAAEtm
akIDAABLZmpDAwAAS2ZqRAMAAEtmakUDAABLZmpGAwAAS2ZqRwMAAEtmakgDAABLZmpJAwAAS2Zq
SgMAAEtmaksDAABLZmpMAwAAS2ZqTQMAAEtmak4DAABLZmpPAwAAS2ZqUAMAAEtmalEDAABLZmpS
AwAAS2ZqUwMAAEtmalQDAABLZmpVAwAAS2ZqVgMAAEtmalcDAABLZmpYAwAAS2ZqWQMAAEtmaloD
AABLZmpbAwAAS2ZqXAMAAEtmal0DAABLZmpeAwAAS2ZqXwMAAEtmamADAABLZmphAwAAS2ZqYgMA
AEtmamMDAABLZmpkAwAAS2ZqZQMAAEtmamYDAABLZmpnAwAAS2ZqaAMAAEtmamkDAABLZmpqAwAA
S2ZqawMAAEtmamwDAABLZmptAwAAS2ZqbgMAAEtmam8DAABLZmpwAwAAS2ZqcQMAAEtmanIDAABL
ZmpzAwAAS2ZqdAMAAEtmanUDAABLZmp2AwAAS2ZqdwMAAEtmangDAABLZmp5AwAAS2ZqegMAAEtm
ansDAABLZmp8AwAAS2ZqfQMAAEtman4DAABLZmp/AwAAS2ZqgAMAAEtmaoEDAABLZmqCAwAAS2Zq
gwMAAEtmaoQDAABLZmqFAwAAS2ZqhgMAAEtmaocDAABLZmqIAwAAS2ZqiQMAAEtmaooDAABLZmqL
AwAAS2ZqjAMAAEtmao0DAABLZmqOAwAAS2ZqjwMAAEtmapADAABLZmqRAwAAS2ZqkgMAAEtmapMD
AABLZmqUAwAAS2ZqlQMAAEtmapYDAABLZmqXAwAAS2ZqmAMAAEtmapkDAABLZmqaAwAAS2ZqmwMA
AEtmapwDAABLZmqdAwAAS2ZqngMAAEtmap8DAABLZmqgAwAAS2ZqoQMAAEtmaqIDAABLZmqjAwAA
S2ZqpAMAAEtmaqUDAABLZmqmAwAAS2ZqpwMAAEtmaqgDAABLZmqpAwAAS2ZqqgMAAEtmaqsDAABL
ZmqsAwAAS2ZqrQMAAEtmaq4DAABLZmqvAwAAS2ZqsAMAAEtmarEDAABLZmqyAwAAS2ZqswMAAEtm
arQDAABLZmq1AwAAS2ZqtgMAAEtmarcDAABLZmq4AwAAS2ZquQMAAEtmaroDAABLZmq7AwAAS2Zq
vAMAAEtmar0DAABLZmq+AwAAS2ZqvwMAAEtmasADAABLZmrBAwAAS2ZqwgMAAEtmasMDAABLZmrE
AwAAS2ZqxQMAAEtmasYDAABLZmrHAwAAS2ZqyAMAAEtmaskDAABLZmrKAwAAS2ZqywMAAEtmaswD
AABLZmrNAwAAS2ZqzgMAAEtmas8DAABLZmrQAwAAS2Zq0QMAAEtmatIDAABLZmrTAwAAS2Zq1AMA
AEtmatUDAABLZmrWAwAAS2Zq1wMAAEtmatgDAABLZmrZAwAAS2Zq2gMAAEtmatsDAABLZmrcAwAA
S2Zq3QMAAEtmat4DAABLZmrfAwAAS2Zq4AMAAEtmauEDAABLZmriAwAAS2Zq4wMAAEtmauQDAABL
ZmrlAwAAS2Zq5gMAAEtmaucDAABLZmroAwAAS2Zq6QMAAEtmauoDAABLZmrrAwAAS2Zq7AMAAEtm
au0DAABLZmruAwAAS2Zq7wMAAEtmavADAABLZmrxAwAAS2Zq8gMAAEtmavMDAABLZmr0AwAAS2Zq
9QMAAEtmavYDAABLZmr3AwAAS2Zq+AMAAEtmavkDAABLZmr6AwAAS2Zq+wMAAEtmavwDAABLZmr9
AwAAS2Zq/gMAAEtmav8DAABLZmoABAAAS2ZqAQQAAEtmagIEAABLZmoDBAAAS2ZqBAQAAEtmagUE
AABLZmoGBAAAS2ZqBwQAAEtmaggEAABLZmoJBAAAS2ZqCgQAAEtmagsEAABLZmoMBAAAS2ZqDQQA
AEtmag4EAABLZmoPBAAAS2ZqEAQAAEtmahEEAABLZmoSBAAAS2ZqEwQAAEtmahQEAABLZmoVBAAA
S2ZqFgQAAEtmahcEAABLZmoYBAAAS2ZqGQQAAEtmahoEAABLZmobBAAAS2ZqHAQAAEtmah0EAABL
ZmoeBAAAS2ZqHwQAAEtmaiAEAABLZmohBAAAS2ZqIgQAAEtmaiMEAABLZmokBAAAS2ZqJQQAAEtm
aiYEAABLZmonBAAAS2ZqKAQAAEtmaikEAABLZnV1YmgLKYGUfZQoaA59lCho/F2UXZQoajACAABL
ZIaUajACAABLZIaUZWFoBksCdWgWfZQoagMBAABLZWoEAQAAS2WMCW1lbWJlcl9pZJRLZWoFAQAA
S2VqBgEAAEtlagcBAABLZWoIAQAAS2VqCQEAAEtlagoBAABLZWoLAQAAS2VqDAEAAEtlag0BAABL
ZWoOAQAAS2VqDwEAAEtlajIEAABLZWoQAQAAS2VqEQEAAEtlakYEAABLZWo8BAAAS2VqWgQAAEtl
alAEAABLZWoSAQAAS2V1aCN9lChqMQMAAEtmajIDAABLZmozAwAAS2ZqNAMAAEtmajUDAABLZmo2
AwAAS2ZqNwMAAEtmajgDAABLZmo5AwAAS2ZqOgMAAEtmajsDAABLZmo8AwAAS2ZqPQMAAEtmaj4D
AABLZmo/AwAAS2ZqQAMAAEtmakEDAABLZmpCAwAAS2ZqQwMAAEtmakQDAABLZmpFAwAAS2ZqRgMA
AEtmakcDAABLZmpIAwAAS2ZqSQMAAEtmakoDAABLZmpLAwAAS2ZqTAMAAEtmak0DAABLZmpOAwAA
S2ZqTwMAAEtmalADAABLZmpRAwAAS2ZqUgMAAEtmalMDAABLZmpUAwAAS2ZqVQMAAEtmalYDAABL
ZmpXAwAAS2ZqWAMAAEtmalkDAABLZmpaAwAAS2ZqWwMAAEtmalwDAABLZmpdAwAAS2ZqXgMAAEtm
al8DAABLZmpgAwAAS2ZqYQMAAEtmamIDAABLZmpjAwAAS2ZqZAMAAEtmamUDAABLZmpmAwAAS2Zq
ZwMAAEtmamgDAABLZmppAwAAS2ZqagMAAEtmamsDAABLZmpsAwAAS2ZqbQMAAEtmam4DAABLZmpv
AwAAS2ZqcAMAAEtmanEDAABLZmpyAwAAS2ZqcwMAAEtmanQDAABLZmp1AwAAS2ZqdgMAAEtmancD
AABLZmp4AwAAS2ZqeQMAAEtmanoDAABLZmp7AwAAS2ZqfAMAAEtman0DAABLZmp+AwAAS2ZqfwMA
AEtmaoADAABLZmqBAwAAS2ZqggMAAEtmaoMDAABLZmqEAwAAS2ZqhQMAAEtmaoYDAABLZmqHAwAA
S2ZqiAMAAEtmaokDAABLZmqKAwAAS2ZqiwMAAEtmaowDAABLZmqNAwAAS2ZqjgMAAEtmao8DAABL
ZmqQAwAAS2ZqkQMAAEtmapIDAABLZmqTAwAAS2ZqlAMAAEtmapUDAABLZmqWAwAAS2ZqlwMAAEtm
apgDAABLZmqZAwAAS2ZqmgMAAEtmapsDAABLZmqcAwAAS2ZqnQMAAEtmap4DAABLZmqfAwAAS2Zq
oAMAAEtmaqEDAABLZmqiAwAAS2ZqowMAAEtmaqQDAABLZmqlAwAAS2ZqpgMAAEtmaqcDAABLZmqo
AwAAS2ZqqQMAAEtmaqoDAABLZmqrAwAAS2ZqrAMAAEtmaq0DAABLZmquAwAAS2ZqrwMAAEtmarAD
AABLZmqxAwAAS2ZqsgMAAEtmarMDAABLZmq0AwAAS2ZqtQMAAEtmarYDAABLZmq3AwAAS2ZquAMA
AEtmarkDAABLZmq6AwAAS2ZquwMAAEtmarwDAABLZmq9AwAAS2ZqvgMAAEtmar8DAABLZmrAAwAA
S2ZqwQMAAEtmasIDAABLZmrDAwAAS2ZqxAMAAEtmasUDAABLZmrGAwAAS2ZqxwMAAEtmasgDAABL
ZmrJAwAAS2ZqygMAAEtmassDAABLZmrMAwAAS2ZqzQMAAEtmas4DAABLZmrPAwAAS2Zq0AMAAEtm
atEDAABLZmrSAwAAS2Zq0wMAAEtmatQDAABLZmrVAwAAS2Zq1gMAAEtmatcDAABLZmrYAwAAS2Zq
2QMAAEtmatoDAABLZmrbAwAAS2Zq3AMAAEtmat0DAABLZmreAwAAS2Zq3wMAAEtmauADAABLZmrh
AwAAS2Zq4gMAAEtmauMDAABLZmrkAwAAS2Zq5QMAAEtmauYDAABLZmrnAwAAS2Zq6AMAAEtmaukD
AABLZmrqAwAAS2Zq6wMAAEtmauwDAABLZmrtAwAAS2Zq7gMAAEtmau8DAABLZmrwAwAAS2Zq8QMA
AEtmavIDAABLZmrzAwAAS2Zq9AMAAEtmavUDAABLZmr2AwAAS2Zq9wMAAEtmavgDAABLZmr5AwAA
S2Zq+gMAAEtmavsDAABLZmr8AwAAS2Zq/QMAAEtmav4DAABLZmr/AwAAS2ZqAAQAAEtmagEEAABL
ZmoCBAAAS2ZqAwQAAEtmagQEAABLZmoFBAAAS2ZqBgQAAEtmagcEAABLZmoIBAAAS2ZqCQQAAEtm
agoEAABLZmoLBAAAS2ZqDAQAAEtmag0EAABLZmoOBAAAS2ZqDwQAAEtmahAEAABLZmoRBAAAS2Zq
EgQAAEtmahMEAABLZmoUBAAAS2ZqFQQAAEtmahYEAABLZmoXBAAAS2ZqGAQAAEtmahkEAABLZmoa
BAAAS2ZqGwQAAEtmahwEAABLZmodBAAAS2ZqHgQAAEtmah8EAABLZmogBAAAS2ZqIQQAAEtmaiIE
AABLZmojBAAAS2ZqJAQAAEtmaiUEAABLZmomBAAAS2ZqJwQAAEtmaigEAABLZmopBAAAS2Z1dWJo
CymBlH2UKGgOfZQoaPxdlF2UKGowAgAAS2SGlGowAgAAS2SGlGVhaAZLAnVoFn2UKGoDAQAAS2Vq
BAEAAEtlamQEAABLZWoFAQAAS2VqBgEAAEtlagcBAABLZWoIAQAAS2VqCQEAAEtlagoBAABLZWoL
AQAAS2VqDAEAAEtlag0BAABLZWoOAQAAS2VqDwEAAEtlajIEAABLZWoQAQAAS2VqEQEAAEtlakYE
AABLZWo8BAAAS2VqWgQAAEtlalAEAABLZXVoI32UKGoxAwAAS2ZqMgMAAEtmajMDAABLZmo0AwAA
S2ZqNQMAAEtmajYDAABLZmo3AwAAS2ZqOAMAAEtmajkDAABLZmo6AwAAS2ZqOwMAAEtmajwDAABL
Zmo9AwAAS2ZqPgMAAEtmaj8DAABLZmpAAwAAS2ZqQQMAAEtmakIDAABLZmpDAwAAS2ZqRAMAAEtm
akUDAABLZmpGAwAAS2ZqRwMAAEtmakgDAABLZmpJAwAAS2ZqSgMAAEtmaksDAABLZmpMAwAAS2Zq
TQMAAEtmak4DAABLZmpPAwAAS2ZqUAMAAEtmalEDAABLZmpSAwAAS2ZqUwMAAEtmalQDAABLZmpV
AwAAS2ZqVgMAAEtmalcDAABLZmpYAwAAS2ZqWQMAAEtmaloDAABLZmpbAwAAS2ZqXAMAAEtmal0D
AABLZmpeAwAAS2ZqXwMAAEtmamADAABLZmphAwAAS2ZqYgMAAEtmamMDAABLZmpkAwAAS2ZqZQMA
AEtmamYDAABLZmpnAwAAS2ZqaAMAAEtmamkDAABLZmpqAwAAS2ZqawMAAEtmamwDAABLZmptAwAA
S2ZqbgMAAEtmam8DAABLZmpwAwAAS2ZqcQMAAEtmanIDAABLZmpzAwAAS2ZqdAMAAEtmanUDAABL
Zmp2AwAAS2ZqdwMAAEtmangDAABLZmp5AwAAS2ZqegMAAEtmansDAABLZmp8AwAAS2ZqfQMAAEtm
an4DAABLZmp/AwAAS2ZqgAMAAEtmaoEDAABLZmqCAwAAS2ZqgwMAAEtmaoQDAABLZmqFAwAAS2Zq
hgMAAEtmaocDAABLZmqIAwAAS2ZqiQMAAEtmaooDAABLZmqLAwAAS2ZqjAMAAEtmao0DAABLZmqO
AwAAS2ZqjwMAAEtmapADAABLZmqRAwAAS2ZqkgMAAEtmapMDAABLZmqUAwAAS2ZqlQMAAEtmapYD
AABLZmqXAwAAS2ZqmAMAAEtmapkDAABLZmqaAwAAS2ZqmwMAAEtmapwDAABLZmqdAwAAS2ZqngMA
AEtmap8DAABLZmqgAwAAS2ZqoQMAAEtmaqIDAABLZmqjAwAAS2ZqpAMAAEtmaqUDAABLZmqmAwAA
S2ZqpwMAAEtmaqgDAABLZmqpAwAAS2ZqqgMAAEtmaqsDAABLZmqsAwAAS2ZqrQMAAEtmaq4DAABL
ZmqvAwAAS2ZqsAMAAEtmarEDAABLZmqyAwAAS2ZqswMAAEtmarQDAABLZmq1AwAAS2ZqtgMAAEtm
arcDAABLZmq4AwAAS2ZquQMAAEtmaroDAABLZmq7AwAAS2ZqvAMAAEtmar0DAABLZmq+AwAAS2Zq
vwMAAEtmasADAABLZmrBAwAAS2ZqwgMAAEtmasMDAABLZmrEAwAAS2ZqxQMAAEtmasYDAABLZmrH
AwAAS2ZqyAMAAEtmaskDAABLZmrKAwAAS2ZqywMAAEtmaswDAABLZmrNAwAAS2ZqzgMAAEtmas8D
AABLZmrQAwAAS2Zq0QMAAEtmatIDAABLZmrTAwAAS2Zq1AMAAEtmatUDAABLZmrWAwAAS2Zq1wMA
AEtmatgDAABLZmrZAwAAS2Zq2gMAAEtmatsDAABLZmrcAwAAS2Zq3QMAAEtmat4DAABLZmrfAwAA
S2Zq4AMAAEtmauEDAABLZmriAwAAS2Zq4wMAAEtmauQDAABLZmrlAwAAS2Zq5gMAAEtmaucDAABL
ZmroAwAAS2Zq6QMAAEtmauoDAABLZmrrAwAAS2Zq7AMAAEtmau0DAABLZmruAwAAS2Zq7wMAAEtm
avADAABLZmrxAwAAS2Zq8gMAAEtmavMDAABLZmr0AwAAS2Zq9QMAAEtmavYDAABLZmr3AwAAS2Zq
+AMAAEtmavkDAABLZmr6AwAAS2Zq+wMAAEtmavwDAABLZmr9AwAAS2Zq/gMAAEtmav8DAABLZmoA
BAAAS2ZqAQQAAEtmagIEAABLZmoDBAAAS2ZqBAQAAEtmagUEAABLZmoGBAAAS2ZqBwQAAEtmaggE
AABLZmoJBAAAS2ZqCgQAAEtmagsEAABLZmoMBAAAS2ZqDQQAAEtmag4EAABLZmoPBAAAS2ZqEAQA
AEtmahEEAABLZmoSBAAAS2ZqEwQAAEtmahQEAABLZmoVBAAAS2ZqFgQAAEtmahcEAABLZmoYBAAA
S2ZqGQQAAEtmahoEAABLZmobBAAAS2ZqHAQAAEtmah0EAABLZmoeBAAAS2ZqHwQAAEtmaiAEAABL
ZmohBAAAS2ZqIgQAAEtmaiMEAABLZmokBAAAS2ZqJQQAAEtmaiYEAABLZmonBAAAS2ZqKAQAAEtm
aikEAABLZnV1YmV1Lg==
</properties>
		<properties node_id="20" format="pickle">gASVnyEAAAAAAAB9lCiMFGNvbXBhcmlzb25fY3JpdGVyaW9ulEsAjBJjb250cm9sQXJlYVZpc2li
bGWUiIwNY3Zfc3RyYXRpZmllZJSIjAduX2ZvbGRzlEsCjAluX3JlcGVhdHOUSwOMCnJlc2FtcGxp
bmeUSwCMBHJvcGWURz+5mZmZmZmajAtzYW1wbGVfc2l6ZZRLCYwTc2F2ZWRXaWRnZXRHZW9tZXRy
eZRDQgHZ0MsAAwAA///8zgAAAMD///+zAAACIf///M8AAADV////sgAAAiAAAAABAAAAAAeA///8
zwAAANX///+yAAACIJSMEnNodWZmbGVfc3RyYXRpZmllZJSIjAh1c2Vfcm9wZZSJjAtzY29yZV90
YWJsZZR9lIwQc2hvd19zY29yZV9oaW50c5R9lCiMBk1vZGVsX5SIjAZUcmFpbl+UiYwFVGVzdF+U
iYwCQ0GUiIwXUHJlY2lzaW9uUmVjYWxsRlN1cHBvcnSUiIwLVGFyZ2V0U2NvcmWUiIwJUHJlY2lz
aW9ulIiMBlJlY2FsbJSIjAJGMZSIjANBVUOUiIwHTG9nTG9zc5SJjAtTcGVjaWZpY2l0eZSJjBdN
YXR0aGV3c0NvcnJDb2VmZmljaWVudJSIjANNU0WUiIwEUk1TRZSIjANNQUWUiIwETUFQRZSIjAJS
MpSIjAZDVlJNU0WUiYwPQ2x1c3RlcmluZ1Njb3JllIiMClNpbGhvdWV0dGWUiIwXQWRqdXN0ZWRN
dXR1YWxJbmZvU2NvcmWUiHVzjAtfX3ZlcnNpb25fX5RLBIwQY29udGV4dF9zZXR0aW5nc5RdlCiM
FW9yYW5nZXdpZGdldC5zZXR0aW5nc5SMB0NvbnRleHSUk5QpgZR9lCiMBnZhbHVlc5R9lCiMD2Ns
YXNzX3NlbGVjdGlvbpSMIShOb25lLCBzaG93IGF2ZXJhZ2Ugb3ZlciBjbGFzc2VzKZRK/////4aU
jAxmb2xkX2ZlYXR1cmWUTkr+////hpSMFWZvbGRfZmVhdHVyZV9zZWxlY3RlZJSJSv7///+GlGgN
fZRoJ0sEdYwKYXR0cmlidXRlc5QojAlGZWF0dXJlIDGUSwKGlIwJbG9hbl9hbW50lEsChpSMBHRl
cm2USwGGlIwIaW50X3JhdGWUSwKGlIwFZ3JhZGWUSwGGlIwJc3ViX2dyYWRllEsBhpSMCmVtcF9s
ZW5ndGiUSwGGlIwOaG9tZV9vd25lcnNoaXCUSwGGlIwKYW5udWFsX2luY5RLAoaUjBN2ZXJpZmlj
YXRpb25fc3RhdHVzlEsBhpSMB2lzc3VlX2SUSwGGlIwHcHVycG9zZZRLAYaUjAphZGRyX3N0YXRl
lEsBhpSMA2R0aZRLAoaUjA5pbnFfbGFzdF82bXRoc5RLAoaUjAhvcGVuX2FjY5RLAoaUjAlyZXZv
bF9iYWyUSwKGlIwJdG90YWxfYWNjlEsChpSME2luaXRpYWxfbGlzdF9zdGF0dXOUSwGGlIwMbGFz
dF9weW1udF9klEsBhpSMDmVtcF9sZW5ndGhfaW50lEsChpSMFWVhcmxpZXN0X2NyX2xpbmVfZGF0
ZZRLBIaUjBttdGhzX3NpbmNlX2VhcmxpZXN0X2NyX2xpbmWUSwKGlIwIdGVybV9pbnSUSwKGlIwM
aXNzdWVfZF9kYXRllEsEhpSMEm10aHNfc2luY2VfaXNzdWVfZJRLAoaUdJSMBW1ldGFzlCmMCmNs
YXNzX3ZhcnOUjAhnb29kX2JhZJRLAYaUhZR1YmgsKYGUfZQoaC99lCiMD2NsYXNzX3NlbGVjdGlv
bpSMIShOb25lLCBzaG93IGF2ZXJhZ2Ugb3ZlciBjbGFzc2VzKZRK/////4aUjAxmb2xkX2ZlYXR1
cmWUTkr+////hpSMFWZvbGRfZmVhdHVyZV9zZWxlY3RlZJSJSv7///+GlIwLc2NvcmVfdGFibGWU
fZRoJ0sEdWg5KIwJbG9hbl9hbW50lEsChpSMBHRlcm2USwGGlIwJbWVtYmVyX2lklEsChpSMCGlu
dF9yYXRllEsChpSMBWdyYWRllEsBhpSMCXN1Yl9ncmFkZZRLAYaUjA9mdW5kZWRfYW1udF9pbnaU
SwKGlIwKZW1wX2xlbmd0aJRLAYaUjA5ob21lX293bmVyc2hpcJRLAYaUjAphbm51YWxfaW5jlEsC
hpSME3ZlcmlmaWNhdGlvbl9zdGF0dXOUSwGGlIwHaXNzdWVfZJRLAYaUjAdwdXJwb3NllEsBhpSM
CmFkZHJfc3RhdGWUSwGGlIwDZHRplEsChpSMDmlucV9sYXN0XzZtdGhzlEsChpSMCG9wZW5fYWNj
lEsChpSMCXJldm9sX2JhbJRLAoaUjAl0b3RhbF9hY2OUSwKGlIwKcHltbnRfcGxhbpRLAYaUjBNp
bml0aWFsX2xpc3Rfc3RhdHVzlEsBhpSMDGxhc3RfcHltbnRfZJRLAYaUjA5lbXBfbGVuZ3RoX2lu
dJRLAoaUjBVlYXJsaWVzdF9jcl9saW5lX2RhdGWUSwSGlIwbbXRoc19zaW5jZV9lYXJsaWVzdF9j
cl9saW5llEsChpSMCHRlcm1faW50lEsChpSMDGlzc3VlX2RfZGF0ZZRLBIaUjBJtdGhzX3NpbmNl
X2lzc3VlX2SUSwKGlIwNb3V0X3BybmNwX2ludpRLAoaUjA90b3RhbF9weW1udF9pbnaUSwKGlIwM
bmV4dF9weW1udF9klEsBhpSMEmxhc3RfY3JlZGl0X3B1bGxfZJRLAYaUjAtwb2xpY3lfY29kZZRL
AYaUjBBhcHBsaWNhdGlvbl90eXBllEsBhpR0lGhvKWhwjAhnb29kX2JhZJRLAYaUhZR1YmgsKYGU
fZQoaC99lCiMD2NsYXNzX3NlbGVjdGlvbpSMIShOb25lLCBzaG93IGF2ZXJhZ2Ugb3ZlciBjbGFz
c2VzKZRK/////4aUjAxmb2xkX2ZlYXR1cmWUTkr+////hpSMFWZvbGRfZmVhdHVyZV9zZWxlY3Rl
ZJSJSv7///+GlIwLc2NvcmVfdGFibGWUfZRoJ0sEdWg5KGiASwGGlGiGSwGGlGiSSwGGlGicSwGG
lGieSwGGlGigSwGGlGiMSwGGlGiiSwGGlGikSwGGlGisSwGGlGiwSwGGlGiySwGGlGi2SwGGlGi4
SwGGlGi6SwGGlIwMc3ViX2dyYWRlX0ExlEsChpSMDHN1Yl9ncmFkZV9BMpRLAoaUjAxzdWJfZ3Jh
ZGVfQTOUSwKGlIwMc3ViX2dyYWRlX0E0lEsChpSMDHN1Yl9ncmFkZV9BNZRLAoaUjAxzdWJfZ3Jh
ZGVfQjGUSwKGlIwMc3ViX2dyYWRlX0IylEsChpSMDHN1Yl9ncmFkZV9CM5RLAoaUjAxzdWJfZ3Jh
ZGVfQjSUSwKGlIwMc3ViX2dyYWRlX0I1lEsChpSMDHN1Yl9ncmFkZV9DMZRLAoaUjAxzdWJfZ3Jh
ZGVfQzKUSwKGlIwMc3ViX2dyYWRlX0MzlEsChpSMDHN1Yl9ncmFkZV9DNJRLAoaUjAxzdWJfZ3Jh
ZGVfQzWUSwKGlIwMc3ViX2dyYWRlX0QxlEsChpSMDHN1Yl9ncmFkZV9EMpRLAoaUjAxzdWJfZ3Jh
ZGVfRDOUSwKGlIwMc3ViX2dyYWRlX0Q0lEsChpSMDHN1Yl9ncmFkZV9ENZRLAoaUjAxzdWJfZ3Jh
ZGVfRTGUSwKGlIwMc3ViX2dyYWRlX0UylEsChpSMDHN1Yl9ncmFkZV9FM5RLAoaUjAxzdWJfZ3Jh
ZGVfRTSUSwKGlIwMc3ViX2dyYWRlX0U1lEsChpSMDHN1Yl9ncmFkZV9GMZRLAoaUjAxzdWJfZ3Jh
ZGVfRjKUSwKGlIwMc3ViX2dyYWRlX0YzlEsChpSMDHN1Yl9ncmFkZV9GNJRLAoaUjAxzdWJfZ3Jh
ZGVfRjWUSwKGlIwMc3ViX2dyYWRlX0cxlEsChpSMDHN1Yl9ncmFkZV9HMpRLAoaUjAxzdWJfZ3Jh
ZGVfRzOUSwKGlIwMc3ViX2dyYWRlX0c0lEsChpSMEWVtcF9sZW5ndGhfMSB5ZWFylEsChpSMEmVt
cF9sZW5ndGhfMiB5ZWFyc5RLAoaUjBJlbXBfbGVuZ3RoXzMgeWVhcnOUSwKGlIwSZW1wX2xlbmd0
aF80IHllYXJzlEsChpSMEmVtcF9sZW5ndGhfNSB5ZWFyc5RLAoaUjBJlbXBfbGVuZ3RoXzYgeWVh
cnOUSwKGlIwSZW1wX2xlbmd0aF83IHllYXJzlEsChpSMEmVtcF9sZW5ndGhfOCB5ZWFyc5RLAoaU
jBJlbXBfbGVuZ3RoXzkgeWVhcnOUSwKGlIwUZW1wX2xlbmd0aF8xMCsgeWVhcnOUSwKGlIwXaG9t
ZV9vd25lcnNoaXBfTU9SVEdBR0WUSwKGlIwUaG9tZV9vd25lcnNoaXBfT1RIRVKUSwKGlIwSaG9t
ZV9vd25lcnNoaXBfT1dOlEsChpSMIHZlcmlmaWNhdGlvbl9zdGF0dXNfTm90IFZlcmlmaWVklEsC
hpSMI3ZlcmlmaWNhdGlvbl9zdGF0dXNfU291cmNlIFZlcmlmaWVklEsChpSMC3B1cnBvc2VfY2Fy
lEsChpSME3B1cnBvc2VfY3JlZGl0X2NhcmSUSwKGlIwacHVycG9zZV9kZWJ0X2NvbnNvbGlkYXRp
b26USwKGlIwTcHVycG9zZV9lZHVjYXRpb25hbJRLAoaUjBhwdXJwb3NlX2hvbWVfaW1wcm92ZW1l
bnSUSwKGlIwNcHVycG9zZV9ob3VzZZRLAoaUjBZwdXJwb3NlX21ham9yX3B1cmNoYXNllEsChpSM
D3B1cnBvc2VfbWVkaWNhbJRLAoaUjA5wdXJwb3NlX21vdmluZ5RLAoaUjA1wdXJwb3NlX290aGVy
lEsChpSMGHB1cnBvc2VfcmVuZXdhYmxlX2VuZXJneZRLAoaUjBZwdXJwb3NlX3NtYWxsX2J1c2lu
ZXNzlEsChpSMEHB1cnBvc2VfdmFjYXRpb26USwKGlIwNYWRkcl9zdGF0ZV9BS5RLAoaUjA1hZGRy
X3N0YXRlX0FMlEsChpSMDWFkZHJfc3RhdGVfQVKUSwKGlIwNYWRkcl9zdGF0ZV9BWpRLAoaUjA1h
ZGRyX3N0YXRlX0NBlEsChpSMDWFkZHJfc3RhdGVfQ0+USwKGlIwNYWRkcl9zdGF0ZV9DVJRLAoaU
jA1hZGRyX3N0YXRlX0RDlEsChpSMDWFkZHJfc3RhdGVfREWUSwKGlIwNYWRkcl9zdGF0ZV9GTJRL
AoaUjA1hZGRyX3N0YXRlX0dBlEsChpSMDWFkZHJfc3RhdGVfSEmUSwKGlIwNYWRkcl9zdGF0ZV9J
QZRLAoaUjA1hZGRyX3N0YXRlX0lMlEsChpSMDWFkZHJfc3RhdGVfS1OUSwKGlIwNYWRkcl9zdGF0
ZV9LWZRLAoaUjA1hZGRyX3N0YXRlX0xBlEsChpSMDWFkZHJfc3RhdGVfTUGUSwKGlIwNYWRkcl9z
dGF0ZV9NRJRLAoaUjA1hZGRyX3N0YXRlX01JlEsChpSMDWFkZHJfc3RhdGVfTU6USwKGlIwNYWRk
cl9zdGF0ZV9NT5RLAoaUjA1hZGRyX3N0YXRlX01TlEsChpSMDWFkZHJfc3RhdGVfTVSUSwKGlIwN
YWRkcl9zdGF0ZV9OQ5RLAoaUjA1hZGRyX3N0YXRlX05IlEsChpSMDWFkZHJfc3RhdGVfTkqUSwKG
lIwNYWRkcl9zdGF0ZV9OTZRLAoaUjA1hZGRyX3N0YXRlX05WlEsChpSMDWFkZHJfc3RhdGVfTlmU
SwKGlIwNYWRkcl9zdGF0ZV9PSJRLAoaUjA1hZGRyX3N0YXRlX09LlEsChpSMDWFkZHJfc3RhdGVf
T1KUSwKGlIwNYWRkcl9zdGF0ZV9QQZRLAoaUjA1hZGRyX3N0YXRlX1JJlEsChpSMDWFkZHJfc3Rh
dGVfU0OUSwKGlIwNYWRkcl9zdGF0ZV9TRJRLAoaUjA1hZGRyX3N0YXRlX1ROlEsChpSMDWFkZHJf
c3RhdGVfVFiUSwKGlIwNYWRkcl9zdGF0ZV9VVJRLAoaUjA1hZGRyX3N0YXRlX1ZBlEsChpSMDWFk
ZHJfc3RhdGVfVlSUSwKGlIwNYWRkcl9zdGF0ZV9XQZRLAoaUjA1hZGRyX3N0YXRlX1dJlEsChpSM
DWFkZHJfc3RhdGVfV1aUSwKGlIwTbGFzdF9weW1udF9kX0Fwci0xMZRLAoaUjBNsYXN0X3B5bW50
X2RfQXByLTEylEsChpSME2xhc3RfcHltbnRfZF9BcHItMTOUSwKGlIwTbGFzdF9weW1udF9kX0Fw
ci0xNJRLAoaUjBNsYXN0X3B5bW50X2RfQXByLTE1lEsChpSME2xhc3RfcHltbnRfZF9BdWctMTCU
SwKGlIwTbGFzdF9weW1udF9kX0F1Zy0xMZRLAoaUjBNsYXN0X3B5bW50X2RfQXVnLTEylEsChpSM
E2xhc3RfcHltbnRfZF9BdWctMTOUSwKGlIwTbGFzdF9weW1udF9kX0F1Zy0xNJRLAoaUjBNsYXN0
X3B5bW50X2RfQXVnLTE1lEsChpSME2xhc3RfcHltbnRfZF9EZWMtMTCUSwKGlIwTbGFzdF9weW1u
dF9kX0RlYy0xMZRLAoaUjBNsYXN0X3B5bW50X2RfRGVjLTEylEsChpSME2xhc3RfcHltbnRfZF9E
ZWMtMTOUSwKGlIwTbGFzdF9weW1udF9kX0RlYy0xNJRLAoaUjBNsYXN0X3B5bW50X2RfRGVjLTE1
lEsChpSME2xhc3RfcHltbnRfZF9GZWItMTGUSwKGlIwTbGFzdF9weW1udF9kX0ZlYi0xMpRLAoaU
jBNsYXN0X3B5bW50X2RfRmViLTEzlEsChpSME2xhc3RfcHltbnRfZF9GZWItMTSUSwKGlIwTbGFz
dF9weW1udF9kX0ZlYi0xNZRLAoaUjBNsYXN0X3B5bW50X2RfSmFuLTExlEsChpSME2xhc3RfcHlt
bnRfZF9KYW4tMTKUSwKGlIwTbGFzdF9weW1udF9kX0phbi0xM5RLAoaUjBNsYXN0X3B5bW50X2Rf
SmFuLTE0lEsChpSME2xhc3RfcHltbnRfZF9KYW4tMTWUSwKGlIwTbGFzdF9weW1udF9kX0phbi0x
NpRLAoaUjBNsYXN0X3B5bW50X2RfSnVsLTEwlEsChpSME2xhc3RfcHltbnRfZF9KdWwtMTGUSwKG
lIwTbGFzdF9weW1udF9kX0p1bC0xMpRLAoaUjBNsYXN0X3B5bW50X2RfSnVsLTEzlEsChpSME2xh
c3RfcHltbnRfZF9KdWwtMTSUSwKGlIwTbGFzdF9weW1udF9kX0p1bC0xNZRLAoaUjBNsYXN0X3B5
bW50X2RfSnVuLTExlEsChpSME2xhc3RfcHltbnRfZF9KdW4tMTKUSwKGlIwTbGFzdF9weW1udF9k
X0p1bi0xM5RLAoaUjBNsYXN0X3B5bW50X2RfSnVuLTE0lEsChpSME2xhc3RfcHltbnRfZF9KdW4t
MTWUSwKGlIwTbGFzdF9weW1udF9kX01hci0xMZRLAoaUjBNsYXN0X3B5bW50X2RfTWFyLTEylEsC
hpSME2xhc3RfcHltbnRfZF9NYXItMTOUSwKGlIwTbGFzdF9weW1udF9kX01hci0xNJRLAoaUjBNs
YXN0X3B5bW50X2RfTWFyLTE1lEsChpSME2xhc3RfcHltbnRfZF9NYXktMTGUSwKGlIwTbGFzdF9w
eW1udF9kX01heS0xMpRLAoaUjBNsYXN0X3B5bW50X2RfTWF5LTEzlEsChpSME2xhc3RfcHltbnRf
ZF9NYXktMTSUSwKGlIwTbGFzdF9weW1udF9kX01heS0xNZRLAoaUjBNsYXN0X3B5bW50X2RfTm92
LTEwlEsChpSME2xhc3RfcHltbnRfZF9Ob3YtMTGUSwKGlIwTbGFzdF9weW1udF9kX05vdi0xMpRL
AoaUjBNsYXN0X3B5bW50X2RfTm92LTEzlEsChpSME2xhc3RfcHltbnRfZF9Ob3YtMTSUSwKGlIwT
bGFzdF9weW1udF9kX05vdi0xNZRLAoaUjBNsYXN0X3B5bW50X2RfT2N0LTEwlEsChpSME2xhc3Rf
cHltbnRfZF9PY3QtMTGUSwKGlIwTbGFzdF9weW1udF9kX09jdC0xMpRLAoaUjBNsYXN0X3B5bW50
X2RfT2N0LTEzlEsChpSME2xhc3RfcHltbnRfZF9PY3QtMTSUSwKGlIwTbGFzdF9weW1udF9kX09j
dC0xNZRLAoaUjBNsYXN0X3B5bW50X2RfU2VwLTEwlEsChpSME2xhc3RfcHltbnRfZF9TZXAtMTGU
SwKGlIwTbGFzdF9weW1udF9kX1NlcC0xMpRLAoaUjBNsYXN0X3B5bW50X2RfU2VwLTEzlEsChpSM
E2xhc3RfcHltbnRfZF9TZXAtMTSUSwKGlIwMcHltbnRfcGxhbl9ulEsChpSME25leHRfcHltbnRf
ZF9GZWItMTaUSwKGlIwZbGFzdF9jcmVkaXRfcHVsbF9kX0Fwci0xMZRLAoaUjBlsYXN0X2NyZWRp
dF9wdWxsX2RfQXByLTEylEsChpSMGWxhc3RfY3JlZGl0X3B1bGxfZF9BcHItMTOUSwKGlIwZbGFz
dF9jcmVkaXRfcHVsbF9kX0Fwci0xNJRLAoaUjBlsYXN0X2NyZWRpdF9wdWxsX2RfQXByLTE1lEsC
hpSMGWxhc3RfY3JlZGl0X3B1bGxfZF9BdWctMTCUSwKGlIwZbGFzdF9jcmVkaXRfcHVsbF9kX0F1
Zy0xMZRLAoaUjBlsYXN0X2NyZWRpdF9wdWxsX2RfQXVnLTEylEsChpSMGWxhc3RfY3JlZGl0X3B1
bGxfZF9BdWctMTOUSwKGlIwZbGFzdF9jcmVkaXRfcHVsbF9kX0F1Zy0xNJRLAoaUjBlsYXN0X2Ny
ZWRpdF9wdWxsX2RfQXVnLTE1lEsChpSMGWxhc3RfY3JlZGl0X3B1bGxfZF9EZWMtMTCUSwKGlIwZ
bGFzdF9jcmVkaXRfcHVsbF9kX0RlYy0xMZRLAoaUjBlsYXN0X2NyZWRpdF9wdWxsX2RfRGVjLTEy
lEsChpSMGWxhc3RfY3JlZGl0X3B1bGxfZF9EZWMtMTOUSwKGlIwZbGFzdF9jcmVkaXRfcHVsbF9k
X0RlYy0xNJRLAoaUjBlsYXN0X2NyZWRpdF9wdWxsX2RfRGVjLTE1lEsChpSMGWxhc3RfY3JlZGl0
X3B1bGxfZF9GZWItMTGUSwKGlIwZbGFzdF9jcmVkaXRfcHVsbF9kX0ZlYi0xMpRLAoaUjBlsYXN0
X2NyZWRpdF9wdWxsX2RfRmViLTEzlEsChpSMGWxhc3RfY3JlZGl0X3B1bGxfZF9GZWItMTSUSwKG
lIwZbGFzdF9jcmVkaXRfcHVsbF9kX0ZlYi0xNZRLAoaUjBlsYXN0X2NyZWRpdF9wdWxsX2RfSmFu
LTExlEsChpSMGWxhc3RfY3JlZGl0X3B1bGxfZF9KYW4tMTKUSwKGlIwZbGFzdF9jcmVkaXRfcHVs
bF9kX0phbi0xM5RLAoaUjBlsYXN0X2NyZWRpdF9wdWxsX2RfSmFuLTE0lEsChpSMGWxhc3RfY3Jl
ZGl0X3B1bGxfZF9KYW4tMTWUSwKGlIwZbGFzdF9jcmVkaXRfcHVsbF9kX0phbi0xNpRLAoaUjBls
YXN0X2NyZWRpdF9wdWxsX2RfSnVsLTEwlEsChpSMGWxhc3RfY3JlZGl0X3B1bGxfZF9KdWwtMTGU
SwKGlIwZbGFzdF9jcmVkaXRfcHVsbF9kX0p1bC0xMpRLAoaUjBlsYXN0X2NyZWRpdF9wdWxsX2Rf
SnVsLTEzlEsChpSMGWxhc3RfY3JlZGl0X3B1bGxfZF9KdWwtMTSUSwKGlIwZbGFzdF9jcmVkaXRf
cHVsbF9kX0p1bC0xNZRLAoaUjBlsYXN0X2NyZWRpdF9wdWxsX2RfSnVuLTEwlEsChpSMGWxhc3Rf
Y3JlZGl0X3B1bGxfZF9KdW4tMTGUSwKGlIwZbGFzdF9jcmVkaXRfcHVsbF9kX0p1bi0xMpRLAoaU
jBlsYXN0X2NyZWRpdF9wdWxsX2RfSnVuLTEzlEsChpSMGWxhc3RfY3JlZGl0X3B1bGxfZF9KdW4t
MTSUSwKGlIwZbGFzdF9jcmVkaXRfcHVsbF9kX0p1bi0xNZRLAoaUjBlsYXN0X2NyZWRpdF9wdWxs
X2RfTWFyLTExlEsChpSMGWxhc3RfY3JlZGl0X3B1bGxfZF9NYXItMTKUSwKGlIwZbGFzdF9jcmVk
aXRfcHVsbF9kX01hci0xM5RLAoaUjBlsYXN0X2NyZWRpdF9wdWxsX2RfTWFyLTE0lEsChpSMGWxh
c3RfY3JlZGl0X3B1bGxfZF9NYXItMTWUSwKGlIwZbGFzdF9jcmVkaXRfcHVsbF9kX01heS0xMZRL
AoaUjBlsYXN0X2NyZWRpdF9wdWxsX2RfTWF5LTEylEsChpSMGWxhc3RfY3JlZGl0X3B1bGxfZF9N
YXktMTOUSwKGlIwZbGFzdF9jcmVkaXRfcHVsbF9kX01heS0xNJRLAoaUjBlsYXN0X2NyZWRpdF9w
dWxsX2RfTWF5LTE1lEsChpSMGWxhc3RfY3JlZGl0X3B1bGxfZF9Ob3YtMTCUSwKGlIwZbGFzdF9j
cmVkaXRfcHVsbF9kX05vdi0xMZRLAoaUjBlsYXN0X2NyZWRpdF9wdWxsX2RfTm92LTEylEsChpSM
GWxhc3RfY3JlZGl0X3B1bGxfZF9Ob3YtMTOUSwKGlIwZbGFzdF9jcmVkaXRfcHVsbF9kX05vdi0x
NJRLAoaUjBlsYXN0X2NyZWRpdF9wdWxsX2RfTm92LTE1lEsChpSMGWxhc3RfY3JlZGl0X3B1bGxf
ZF9PY3QtMTCUSwKGlIwZbGFzdF9jcmVkaXRfcHVsbF9kX09jdC0xMZRLAoaUjBlsYXN0X2NyZWRp
dF9wdWxsX2RfT2N0LTEylEsChpSMGWxhc3RfY3JlZGl0X3B1bGxfZF9PY3QtMTOUSwKGlIwZbGFz
dF9jcmVkaXRfcHVsbF9kX09jdC0xNJRLAoaUjBlsYXN0X2NyZWRpdF9wdWxsX2RfT2N0LTE1lEsC
hpSMGWxhc3RfY3JlZGl0X3B1bGxfZF9TZXAtMTCUSwKGlIwZbGFzdF9jcmVkaXRfcHVsbF9kX1Nl
cC0xMZRLAoaUjBlsYXN0X2NyZWRpdF9wdWxsX2RfU2VwLTEylEsChpSMGWxhc3RfY3JlZGl0X3B1
bGxfZF9TZXAtMTOUSwKGlIwZbGFzdF9jcmVkaXRfcHVsbF9kX1NlcC0xNJRLAoaUdJRobylocGjF
SwGGlIWUdWJldS4=
</properties>
		<properties node_id="21" format="literal">{'compatibility_mode': False, 'controlAreaVisible': True, 'number_of_folds': 10, 'replacement': False, 'sampleSizeNumber': 1, 'sampleSizePercentage': 70, 'sampleSizeSqlPercentage': 0.1, 'sampleSizeSqlTime': 1, 'sampling_type': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xfb\xd4\x00\x00\x00\xfb\xff\xff\xfc\xac\x00\x00\x02\x89\xff\xff\xfb\xd5\x00\x00\x01\x10\xff\xff\xfc\xab\x00\x00\x02\x88\x00\x00\x00\x01\x00\x00\x00\x00\x07\x80\xff\xff\xfb\xd5\x00\x00\x01\x10\xff\xff\xfc\xab\x00\x00\x02\x88', 'selectedFold': 1, 'sql_dl': False, 'stratify': False, 'use_seed': True, '__version__': 2}</properties>
		<properties node_id="22" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 3, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xf8\x1e\x00\x00\x00\xb1\xff\xff\xff\xa7\x00\x00\x03\xaa\xff\xff\xf8#\x00\x00\x00\xc6\xff\xff\xff\xa2\x00\x00\x03\xa5\x00\x00\x00\x01\x00\x00\x00\x00\x07\x80\xff\xff\xf8#\x00\x00\x00\xc6\xff\xff\xff\xa2\x00\x00\x03\xa5', 'scriptLibrary': [{'name': 'Table from numpy', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': 'import matplotlib.pyplot as plt\nimport pandas as pd\nfrom Orange.data import Table, Domain, ContinuousVariable\n\n# Convertendo os dados de entrada do Orange para um DataFrame do Pandas\ndata = pd.DataFrame(in_data.X, columns=[var.name for var in in_data.domain.attributes])\ntarget = pd.Series(in_data.Y, name=in_data.domain.class_var.name)\n\n# Verifique se os dados possuem as variáveis "grade", "Good", "Bad" e "WoE"\nif \'grade\' in data.columns and \'WoE\' in data.columns and \'Good\' in data.columns and \'Bad\' in data.columns:\n    \n    # Definir as categorias (grade), WoE e as taxas de inadimplência (Good e Bad)\n    categories = data[\'grade\']\n    woe = data[\'WoE\'].astype(\'float\')\n    good_row = data[\'Good\'].astype(\'float\')  # Substituir pela sua variável de bons pagadores\n    bad_row = data[\'Bad\'].astype(\'float\')  # Substituir pela sua variável de maus pagadores\n\n    # Criação da figura com subplots\n    fig, ax = plt.subplots(1, 2, figsize=(12, 6))\n\n    # Gráfico de barras empilhadas para taxa de inadimplência\n    bad_bars = ax[0].barh(y=categories, width=bad_row, color=\'#8d0801\', label=\'Bad\')\n    good_bars = ax[0].barh(y=categories, width=good_row, left=bad_row, color=\'#8a817c\', label=\'Good\')\n\n    # Anotando valores percentuais dentro de cada barra\n    for good_bar, bad_bar, good_rate, bad_rate in zip(good_bars, bad_bars, good_row, bad_row):\n        x_position_good = good_bar.get_x() + good_bar.get_width() / 2\n        x_position_bad = bad_bar.get_x() + bad_bar.get_width() / 2  \n        y_position = good_bar.get_y() + good_bar.get_height() / 2\n\n        ax[0].text(x_position_good, y_position, f\'{good_rate:.2f}%\', ha=\'center\', va=\'center\', color=\'white\', fontsize=10)\n        ax[0].text(x_position_bad, y_position, f\'{bad_rate:.2f}%\', ha=\'center\', va=\'center\', color=\'white\', fontsize=10)\n\n    ax[0].set_title(\'Default rate by Grade\')\n    ax[0].invert_yaxis()\n    ax[0].grid(False)\n    ax[0].legend(bbox_to_anchor=(-0.2, 1.1), loc=\'upper left\')\n\n    # Gráfico de linha para WoE\n    ax[1].plot(categories, woe, marker=\'o\', linestyle=\'--\')\n    ax[1].set_title(\'WoE by Grade\')\n    ax[1].set_xticks(categories.unique())\n    \n    plt.tight_layout()\n    plt.show()\n\n# Convertendo o DataFrame de volta para uma tabela do Orange\ndomain = Domain([ContinuousVariable(col) for col in data.columns])\nout_data = Table.from_numpy(domain, data.to_numpy())\n', 'filename': None}], 'scriptText': 'import Orange\nimport numpy as np\nfrom Orange.data import Domain, Table, ContinuousVariable, StringVariable\n\ndef create_scorecard(data, model, min_score=300, max_score=850):\n    if model is None:\n        raise ValueError("O modelo não foi fornecido. Certifique-se de que o widget do modelo está conectado corretamente.")\n    \n    # Verificar se o modelo tem o atributo \'coefficients\'\n    if not hasattr(model, \'coefficients\'):\n        raise AttributeError("O modelo fornecido não tem o atributo \'coefficients\'. Certifique-se de que está usando um modelo de regressão logística ou similar.")\n    \n    # Extrair coeficientes do modelo\n    coefficients = model.coefficients\n    intercept = model.intercept  # Intercepto para o ajuste da base do score\n    \n    print(f"Coeficientes: {coefficients}")\n    print(f"Intercepto: {intercept}")\n    \n    # Achatar os coeficientes se necessário\n    if coefficients.ndim &gt; 1:\n        coefficients = coefficients.flatten()\n\n    # Verificar número de colunas nos dados transformados\n    n_features = len(data.X[0])\n    \n    print(f"Número de atributos no domínio original: {len(data.domain.attributes)}")\n    print(f"Número de colunas nos dados: {n_features}")\n    print(f"Número de coeficientes: {len(coefficients)}")\n    \n    # Garantir que o número de coeficientes corresponde ao número de atributos (colunas)\n    if len(coefficients) != n_features:\n        raise ValueError(f"Número de coeficientes ({len(coefficients)}) não corresponde ao número de colunas nos dados ({n_features})")\n\n    # Criar uma lista com os nomes dos atributos\n    attribute_names = [attr.name for attr in data.domain.attributes]\n    \n    # Calcular o scorecard baseado nos coeficientes\n    min_coef = np.min(coefficients)\n    max_coef = np.max(coefficients)\n    \n    # Normalizar os coeficientes para o intervalo de pontuação\n    scores = (coefficients - min_coef) / (max_coef - min_coef) * (max_score - min_score) + min_score\n    \n    # Adicionar o intercepto à pontuação\n    base_score = (intercept - min_coef) / (max_coef - min_coef) * (max_score - min_score) + min_score\n    \n    # Arredondar os scores para valores inteiros\n    scores = np.round(scores).astype(int)\n    base_score = np.round(base_score).astype(int)\n    \n    # Criar uma tabela no formato Orange\n    domain = Domain([\n        StringVariable("Attribute"),\n        ContinuousVariable("Coefficient"),\n        ContinuousVariable("Score")\n    ])\n\n    # Criar as colunas manualmente\n    attribute_column = np.array(attribute_names, dtype=object).reshape(-1, 1)\n    coefficient_column = coefficients.reshape(-1, 1)\n    score_column = scores.reshape(-1, 1)\n    \n    # Concatenar os atributos com coeficientes e scores\n    data_matrix = np.hstack((attribute_column, coefficient_column, score_column))\n    \n    # Criar a tabela Orange\n    scorecard_table = Table.from_numpy(domain, X=data_matrix)\n    \n    # Exibir o score base\n    print(f"Score Base (Intercepto): {base_score}")\n    \n    return scorecard_table, base_score\n\n# Código principal\nif in_data is None:\n    print("Erro: Não há dados de entrada. Certifique-se de que o widget de dados está conectado.")\n    out_object = None\nelif in_object is None:\n    print("Erro: Não há modelo de entrada. Certifique-se de que o widget do modelo está conectado.")\n    out_object = None\nelse:\n    try:\n        # Usar a função para criar o scorecard\n        scorecard, base_score = create_scorecard(in_data, in_object)\n        # Enviar o scorecard como saída\n        out_object = scorecard\n        print("Scorecard criado com sucesso!")\n        print(f"Score Base: {base_score}")\n    except Exception as e:\n        print(f"Erro ao criar o scorecard: {str(e)}")\n        out_object = None\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xa2\x00\x00\x00^\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="23" format="pickle">gASVMAcAAAAAAAB9lCiMC2F1dG9fY29tbWl0lIiMC2F1dG9fc2FtcGxllIiMEmNvbnRyb2xBcmVh
VmlzaWJsZZSIjBNzYXZlZFdpZGdldEdlb21ldHJ5lENCAdnQywADAAAAAADQAAAAXQAABMoAAAJ0
AAAA0QAAAHsAAATJAAACcwAAAAAAAAAABQAAAADRAAAAewAABMkAAAJzlIwJc2VsZWN0aW9ulE6M
EXRvb2x0aXBfc2hvd3NfYWxslIiMD3Zpc3VhbF9zZXR0aW5nc5R9lIwFZ3JhcGiUfZQojAthbHBo
YV92YWx1ZZRLv4wNY2xhc3NfZGVuc2l0eZSJjBFqaXR0ZXJfY29udGludW91c5SJjAtqaXR0ZXJf
c2l6ZZRLAIwTbGFiZWxfb25seV9zZWxlY3RlZJSJjBZvcnRob25vcm1hbF9yZWdyZXNzaW9ulImM
C3BvaW50X3dpZHRolEsHjAxzaG93X2VsbGlwc2WUiYwJc2hvd19ncmlklImMC3Nob3dfbGVnZW5k
lIiMDXNob3dfcmVnX2xpbmWUiHWMC19fdmVyc2lvbl9flEsFjBBjb250ZXh0X3NldHRpbmdzlF2U
jBVvcmFuZ2V3aWRnZXQuc2V0dGluZ3OUjAdDb250ZXh0lJOUKYGUfZQojAZ2YWx1ZXOUfZQojAph
dHRyX2NvbG9ylIwIZ29vZF9iYWSUS2WGlIwKYXR0cl9sYWJlbJROSv7///+GlIwKYXR0cl9zaGFw
ZZROSv7///+GlIwJYXR0cl9zaXpllE5K/v///4aUjAZhdHRyX3iUjAhpbnRfcmF0ZZRLZoaUjAZh
dHRyX3mUjAtpbnN0YWxsbWVudJRLZoaUaAp9lGgXSwV1jAphdHRyaWJ1dGVzlH2UKIwJRmVhdHVy
ZSAxlEsCjAlsb2FuX2FtbnSUSwKMC2Z1bmRlZF9hbW50lEsCjAR0ZXJtlEsBaCtLAmguSwKMBWdy
YWRllEsBjAlzdWJfZ3JhZGWUSwGMCmVtcF9sZW5ndGiUSwGMDmhvbWVfb3duZXJzaGlwlEsBjAph
bm51YWxfaW5jlEsCjBN2ZXJpZmljYXRpb25fc3RhdHVzlEsBjAdpc3N1ZV9klEsBjAtsb2FuX3N0
YXR1c5RLAYwHcHVycG9zZZRLAYwKYWRkcl9zdGF0ZZRLAYwDZHRplEsCjAtkZWxpbnFfMnlyc5RL
AowOaW5xX2xhc3RfNm10aHOUSwKMFm10aHNfc2luY2VfbGFzdF9kZWxpbnGUSwKMFm10aHNfc2lu
Y2VfbGFzdF9yZWNvcmSUSwKMCG9wZW5fYWNjlEsCjAdwdWJfcmVjlEsCjAlyZXZvbF9iYWyUSwKM
CnJldm9sX3V0aWyUSwKMCXRvdGFsX2FjY5RLAowTaW5pdGlhbF9saXN0X3N0YXR1c5RLAYwJb3V0
X3BybmNwlEsCjAt0b3RhbF9weW1udJRLAowPdG90YWxfcmVjX3BybmNwlEsCjA10b3RhbF9yZWNf
aW50lEsCjBJ0b3RhbF9yZWNfbGF0ZV9mZWWUSwKMCnJlY292ZXJpZXOUSwKMF2NvbGxlY3Rpb25f
cmVjb3ZlcnlfZmVllEsCjAxsYXN0X3B5bW50X2SUSwGMD2xhc3RfcHltbnRfYW1udJRLAowaY29s
bGVjdGlvbnNfMTJfbXRoc19leF9tZWSUSwGMG210aHNfc2luY2VfbGFzdF9tYWpvcl9kZXJvZ5RL
AowQYW5udWFsX2luY19qb2ludJRLAowJZHRpX2pvaW50lEsCjBl2ZXJpZmljYXRpb25fc3RhdHVz
X2pvaW50lEsCjA5hY2Nfbm93X2RlbGlucZRLAYwMdG90X2NvbGxfYW10lEsCjAt0b3RfY3VyX2Jh
bJRLAowLb3Blbl9hY2NfNm2USwKMCm9wZW5faWxfNm2USwKMC29wZW5faWxfMTJtlEsCjAtvcGVu
X2lsXzI0bZRLAowSbXRoc19zaW5jZV9yY250X2lslEsCjAx0b3RhbF9iYWxfaWyUSwKMB2lsX3V0
aWyUSwKMC29wZW5fcnZfMTJtlEsCjAtvcGVuX3J2XzI0bZRLAowKbWF4X2JhbF9iY5RLAowIYWxs
X3V0aWyUSwKMEHRvdGFsX3Jldl9oaV9saW2USwKMBmlucV9maZRLAowLdG90YWxfY3VfdGyUSwKM
DGlucV9sYXN0XzEybZRLAowOZW1wX2xlbmd0aF9pbnSUSwKMFWVhcmxpZXN0X2NyX2xpbmVfZGF0
ZZRLBIwbbXRoc19zaW5jZV9lYXJsaWVzdF9jcl9saW5llEsCjAh0ZXJtX2ludJRLAowMaXNzdWVf
ZF9kYXRllEsEjBJtdGhzX3NpbmNlX2lzc3VlX2SUSwJoIksBdYwFbWV0YXOUfZQojARkZXNjlEsD
jBBlYXJsaWVzdF9jcl9saW5llEsDdXViYXUu
</properties>
		<properties node_id="24" format="literal">{'autocommit': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xf8\x7f\xff\xff\xff\xca\x00\x00\x00\x00\x00\x00\x03\xd0\xff\xff\xfc\xac\x00\x00\x00\xde\xff\xff\xfe\xe1\x00\x00\x01\xb9\x00\x00\x00\x01\x02\x00\x00\x00\x07\x80\xff\xff\xf8\x80\xff\xff\xff\xdf\xff\xff\xff\xff\x00\x00\x03\xcf', 'storedsettings': {'name': '', 'preprocessors': [('orange.preprocess.fss', {'k': 10, 'p': 75.0, 'score': 5, 'strategy': 1}), ('orange.preprocess.impute', {'method': 5}), ('orange.preprocess.discretize', {'method': 4})]}, '__version__': 2}</properties>
		<properties node_id="25" format="pickle">gASVrQIAAAAAAAB9lCiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBNzYXZlZFdpZGdldEdlb21ldHJ5
lENCAdnQywADAAD/////////+QAABQAAAAKgAAAAAAAAABcAAAT/AAACnwAAAAACAAAABQAAAAAA
AAAAFwAABP8AAAKflIwJc2VsZWN0aW9ulF2UjAtzaG93X3Njb3Jlc5SIjAtzY29yZV90YWJsZZR9
lIwQc2hvd19zY29yZV9oaW50c5R9lCiMBk1vZGVsX5SIjAZUcmFpbl+UiYwFVGVzdF+UiYwCQ0GU
iIwXUHJlY2lzaW9uUmVjYWxsRlN1cHBvcnSUiIwLVGFyZ2V0U2NvcmWUiIwJUHJlY2lzaW9ulIiM
BlJlY2FsbJSIjAJGMZSIjANBVUOUiIwHTG9nTG9zc5SJjAtTcGVjaWZpY2l0eZSJjBdNYXR0aGV3
c0NvcnJDb2VmZmljaWVudJSIjANNU0WUiIwEUk1TRZSIjANNQUWUiIwETUFQRZSIjAJSMpSIjAZD
VlJNU0WUiYwPQ2x1c3RlcmluZ1Njb3JllIiMClNpbGhvdWV0dGWUiIwXQWRqdXN0ZWRNdXR1YWxJ
bmZvU2NvcmWUiHVzjAtfX3ZlcnNpb25fX5RLAowQY29udGV4dF9zZXR0aW5nc5RdlIwVb3Jhbmdl
d2lkZ2V0LnNldHRpbmdzlIwHQ29udGV4dJSTlCmBlH2UKIwGdmFsdWVzlH2UKIwXc2hvd19wcm9i
YWJpbGl0eV9lcnJvcnOUiIwPc2hvd19yZWdfZXJyb3JzlEsBjAtzaG93bl9wcm9ic5RLAYwMdGFy
Z2V0X2NsYXNzlIwWKEF2ZXJhZ2Ugb3ZlciBjbGFzc2VzKZRoB32UaCFLAnWMB2NsYXNzZXOUjAEw
lIwBMZSGlHViYXUu
</properties>
		<properties node_id="26" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xfd\x98\x00\x00\x00W\x00\x00\x02\x9e\x00\x00\x02b\xff\xff\xfd\x9b\x00\x00\x00u\x00\x00\x02\x9b\x00\x00\x02_\x00\x00\x00\x00\x00\x00\x00\x00\x05\x00\xff\xff\xfd\x9b\x00\x00\x00u\x00\x00\x02\x9b\x00\x00\x02_', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="27" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xfd\x8a\x00\x00\x00\xf0\x00\x00\x05\x10\x00\x00\x03\xf1\xff\xff\xfd\x8d\x00\x00\x01\x0e\x00\x00\x05\r\x00\x00\x03\xee\x00\x00\x00\x00\x00\x00\x00\x00\x05\x00\xff\xff\xfd\x8d\x00\x00\x01\x0e\x00\x00\x05\r\x00\x00\x03\xee', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="28" format="literal">{'C_index': 61, 'auto_apply': True, 'class_weight': False, 'controlAreaVisible': True, 'learner_name': '', 'penalty_type': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x02\x18\x00\x00\x00\xd5\x00\x00\x02\xe9\x00\x00\x01\xe9\x00\x00\x02\x19\x00\x00\x00\xf3\x00\x00\x02\xe8\x00\x00\x01\xe8\x00\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x02\x19\x00\x00\x00\xf3\x00\x00\x02\xe8\x00\x00\x01\xe8', '__version__': 2}</properties>
		<properties node_id="29" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xff\xff\xff\xff\xff\xf9\x00\x00\x05\x00\x00\x00\x02\xa0\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x04\xff\x00\x00\x02\x9f\x00\x00\x00\x00\x02\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x04\xff\x00\x00\x02\x9f', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="30" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 3, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xf8\x7f\xff\xff\xff\xca\x00\x00\x00\x00\x00\x00\x03\xd0\xff\xff\xf8\x80\xff\xff\xff\xdf\xff\xff\xff\xff\x00\x00\x03\xcf\x00\x00\x00\x01\x02\x00\x00\x00\x07\x80\xff\xff\xf8\x80\xff\xff\xff\xdf\xff\xff\xff\xff\x00\x00\x03\xcf', 'scriptLibrary': [{'name': 'Table from numpy', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': 'import matplotlib.pyplot as plt\nimport pandas as pd\nfrom Orange.data import Table, Domain, ContinuousVariable\n\n# Convertendo os dados de entrada do Orange para um DataFrame do Pandas\ndata = pd.DataFrame(in_data.X, columns=[var.name for var in in_data.domain.attributes])\ntarget = pd.Series(in_data.Y, name=in_data.domain.class_var.name)\n\n# Verifique se os dados possuem as variáveis "grade", "Good", "Bad" e "WoE"\nif \'grade\' in data.columns and \'WoE\' in data.columns and \'Good\' in data.columns and \'Bad\' in data.columns:\n    \n    # Definir as categorias (grade), WoE e as taxas de inadimplência (Good e Bad)\n    categories = data[\'grade\']\n    woe = data[\'WoE\'].astype(\'float\')\n    good_row = data[\'Good\'].astype(\'float\')  # Substituir pela sua variável de bons pagadores\n    bad_row = data[\'Bad\'].astype(\'float\')  # Substituir pela sua variável de maus pagadores\n\n    # Criação da figura com subplots\n    fig, ax = plt.subplots(1, 2, figsize=(12, 6))\n\n    # Gráfico de barras empilhadas para taxa de inadimplência\n    bad_bars = ax[0].barh(y=categories, width=bad_row, color=\'#8d0801\', label=\'Bad\')\n    good_bars = ax[0].barh(y=categories, width=good_row, left=bad_row, color=\'#8a817c\', label=\'Good\')\n\n    # Anotando valores percentuais dentro de cada barra\n    for good_bar, bad_bar, good_rate, bad_rate in zip(good_bars, bad_bars, good_row, bad_row):\n        x_position_good = good_bar.get_x() + good_bar.get_width() / 2\n        x_position_bad = bad_bar.get_x() + bad_bar.get_width() / 2  \n        y_position = good_bar.get_y() + good_bar.get_height() / 2\n\n        ax[0].text(x_position_good, y_position, f\'{good_rate:.2f}%\', ha=\'center\', va=\'center\', color=\'white\', fontsize=10)\n        ax[0].text(x_position_bad, y_position, f\'{bad_rate:.2f}%\', ha=\'center\', va=\'center\', color=\'white\', fontsize=10)\n\n    ax[0].set_title(\'Default rate by Grade\')\n    ax[0].invert_yaxis()\n    ax[0].grid(False)\n    ax[0].legend(bbox_to_anchor=(-0.2, 1.1), loc=\'upper left\')\n\n    # Gráfico de linha para WoE\n    ax[1].plot(categories, woe, marker=\'o\', linestyle=\'--\')\n    ax[1].set_title(\'WoE by Grade\')\n    ax[1].set_xticks(categories.unique())\n    \n    plt.tight_layout()\n    plt.show()\n\n# Convertendo o DataFrame de volta para uma tabela do Orange\ndomain = Domain([ContinuousVariable(col) for col in data.columns])\nout_data = Table.from_numpy(domain, data.to_numpy())\n', 'filename': None}], 'scriptText': 'import matplotlib.pyplot as plt\nimport pandas as pd\nfrom Orange.data import Table\n\ndef plot_bar_distribution(in_data, target_variable=\'int_rate\', group_by=\'grade\', figsize=(10, 6)):\n    try:\n        # Convert Orange data to pandas DataFrame\n        data = pd.DataFrame({\n            var.name: in_data.get_column(var.name)\n            for var in in_data.domain.variables\n        })\n        \n        # Ensure the target_variable and group_by exist in the DataFrame\n        if target_variable not in data.columns or group_by not in data.columns:\n            raise ValueError(f"\'{target_variable}\' or \'{group_by}\' is not in the dataset.")\n        \n        # Calculate mean int_rate for each grade\n        grouped_data = data.groupby(group_by)[target_variable].mean().reset_index()\n        \n        # Sort values in descending order based on int_rate\n        grouped_data = grouped_data.sort_values(by=target_variable, ascending=False)\n        \n        # Create the bar plot\n        plt.figure(figsize=figsize)\n        bars = plt.bar(grouped_data[group_by], grouped_data[target_variable], color=\'#16A2F0\')\n        \n        # Highlight the tallest bar with a darker shade of blue\n        bars[0].set_color(\'#0E2E98\')  # The first bar is the tallest due to sorting\n        \n        # Customize plot appearance\n        plt.title(f\'Average {target_variable} by {group_by}\')\n        plt.xlabel(group_by.capitalize())\n        plt.ylabel(f\'Average {target_variable}\')\n        plt.xticks(grouped_data[group_by], rotation=45, ha=\'right\')  # Use actual grades for labels\n        plt.grid(True, axis=\'y\', linestyle=\'--\', alpha=0.7)\n        plt.gca().invert_xaxis()  # Invert the X-axis to show descending order left to right\n        plt.tight_layout()\n        \n        # Show plot\n        plt.show()\n\n    except Exception as e:\n        print(f"Error creating the bar plot: {str(e)}")\n        return None\n\n# Usage of the function\nif in_data is not None:\n    plot_bar_distribution(in_data, target_variable=\'int_rate\', group_by=\'grade\', figsize=(10, 6))\nelse:\n    print("No input data provided.")\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xa2\x00\x00\x00^\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
	</node_properties>
	<session_state>
		<window_groups />
	</session_state>
</scheme>
