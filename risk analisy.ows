<?xml version='1.0' encoding='utf-8'?>
<scheme version="2.0" title="" description="">
	<nodes>
		<node id="0" name="File" qualified_name="Orange.widgets.data.owfile.OWFile" project_name="Orange3" version="" title="File" position="(167.0, 113.0)" />
		<node id="1" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table" position="(365.0, 113.0)" />
		<node id="2" name="Bar Plot" qualified_name="Orange.widgets.visualize.owbarplot.OWBarPlot" project_name="Orange3" version="" title="Bar Plot" position="(801.0, 312.0)" />
		<node id="3" name="Distributions" qualified_name="Orange.widgets.visualize.owdistributions.OWDistributions" project_name="Orange3" version="" title="Distributions" position="(823.0, 209.0)" />
		<node id="4" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script" position="(764.0, 7.0)" />
		<node id="5" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (1)" position="(794.0, 68.0)" />
		<node id="6" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="inadiplentes" position="(804.0, 132.0)" />
		<node id="7" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (2)" position="(772.0, 390.0)" />
		<node id="8" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (3)" position="(742.0, 470.0)" />
		<node id="9" name="Feature Statistics" qualified_name="Orange.widgets.data.owfeaturestatistics.OWFeatureStatistics" project_name="Orange3" version="" title="Feature Statistics" position="(630.0, 505.0)" />
		<node id="10" name="File" qualified_name="Orange.widgets.data.owfile.OWFile" project_name="Orange3" version="" title="File (1)" position="(136.0, 793.0)" />
		<node id="11" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (1)" position="(318.0, 795.0)" />
		<node id="12" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (2)" position="(811.0, 796.0)" />
		<node id="13" name="Select Columns" qualified_name="Orange.widgets.data.owselectcolumns.OWSelectAttributes" project_name="Orange3" version="" title="Select Columns" position="(509.0, 796.0)" />
		<node id="14" name="Select Columns" qualified_name="Orange.widgets.data.owselectcolumns.OWSelectAttributes" project_name="Orange3" version="" title="Select Columns (1)" position="(915.0, 667.0)" />
		<node id="15" name="Select Columns" qualified_name="Orange.widgets.data.owselectcolumns.OWSelectAttributes" project_name="Orange3" version="" title="Select Columns (2)" position="(925.0, 899.0)" />
		<node id="16" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (4)" position="(1360.0, 862.0)" />
		<node id="17" name="Preprocess" qualified_name="Orange.widgets.data.owpreprocess.OWPreprocess" project_name="Orange3" version="" title="Preprocess (1)" position="(1054.0, 670.0)" />
		<node id="18" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (4)" position="(1241.0, 860.0)" />
		<node id="19" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (5)" position="(1186.0, 671.0)" />
		<node id="20" name="Merge Data" qualified_name="Orange.widgets.data.owmergedata.OWMergeData" project_name="Orange3" version="" title="Merge Data" position="(1335.0, 672.0)" />
		<node id="21" name="Test and Score" qualified_name="Orange.widgets.evaluate.owtestandscore.OWTestAndScore" project_name="Orange3" version="" title="Test and Score" position="(1421.0, 422.0)" />
		<node id="22" name="Data Sampler" qualified_name="Orange.widgets.data.owdatasampler.OWDataSampler" project_name="Orange3" version="" title="Data Sampler (1)" position="(660.0, 792.0)" />
		<node id="23" name="Preprocess" qualified_name="Orange.widgets.data.owpreprocess.OWPreprocess" project_name="Orange3" version="" title="Preprocess" position="(1486.0, 674.0)" />
		<node id="24" name="Logistic Regression" qualified_name="Orange.widgets.model.owlogisticregression.OWLogisticRegression" project_name="Orange3" version="" title="Logistic Regression" position="(1673.0, 668.0)" />
		<node id="25" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (3)" position="(1462.0, 821.0)" />
	</nodes>
	<links>
		<link id="0" source_node_id="0" sink_node_id="1" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="1" source_node_id="1" sink_node_id="2" source_channel="Selected Data" sink_channel="Data" enabled="true" source_channel_id="selected_data" sink_channel_id="data" />
		<link id="2" source_node_id="1" sink_node_id="3" source_channel="Selected Data" sink_channel="Data" enabled="true" source_channel_id="selected_data" sink_channel_id="data" />
		<link id="3" source_node_id="1" sink_node_id="4" source_channel="Selected Data" sink_channel="Data" enabled="true" source_channel_id="selected_data" sink_channel_id="data" />
		<link id="4" source_node_id="1" sink_node_id="5" source_channel="Selected Data" sink_channel="Data" enabled="true" source_channel_id="selected_data" sink_channel_id="data" />
		<link id="5" source_node_id="1" sink_node_id="6" source_channel="Selected Data" sink_channel="Data" enabled="true" source_channel_id="selected_data" sink_channel_id="data" />
		<link id="6" source_node_id="1" sink_node_id="7" source_channel="Selected Data" sink_channel="Data" enabled="true" source_channel_id="selected_data" sink_channel_id="data" />
		<link id="7" source_node_id="1" sink_node_id="8" source_channel="Selected Data" sink_channel="Data" enabled="true" source_channel_id="selected_data" sink_channel_id="data" />
		<link id="8" source_node_id="1" sink_node_id="9" source_channel="Selected Data" sink_channel="Data" enabled="true" source_channel_id="selected_data" sink_channel_id="data" />
		<link id="9" source_node_id="10" sink_node_id="11" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="10" source_node_id="12" sink_node_id="14" source_channel="Selected Data" sink_channel="Data" enabled="true" source_channel_id="selected_data" sink_channel_id="data" />
		<link id="11" source_node_id="12" sink_node_id="15" source_channel="Selected Data" sink_channel="Data" enabled="true" source_channel_id="selected_data" sink_channel_id="data" />
		<link id="12" source_node_id="14" sink_node_id="17" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="13" source_node_id="17" sink_node_id="19" source_channel="Preprocessed Data" sink_channel="Data" enabled="true" source_channel_id="preprocessed_data" sink_channel_id="data" />
		<link id="14" source_node_id="19" sink_node_id="20" source_channel="Selected Data" sink_channel="Data" enabled="true" source_channel_id="selected_data" sink_channel_id="data" />
		<link id="15" source_node_id="11" sink_node_id="13" source_channel="Selected Data" sink_channel="Data" enabled="true" source_channel_id="selected_data" sink_channel_id="data" />
		<link id="16" source_node_id="13" sink_node_id="22" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="17" source_node_id="22" sink_node_id="12" source_channel="Data Sample" sink_channel="Data" enabled="true" source_channel_id="data_sample" sink_channel_id="data" />
		<link id="18" source_node_id="22" sink_node_id="21" source_channel="Data Sample" sink_channel="Data" enabled="true" source_channel_id="data_sample" sink_channel_id="train_data" />
		<link id="19" source_node_id="20" sink_node_id="23" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="20" source_node_id="23" sink_node_id="24" source_channel="Preprocessor" sink_channel="Preprocessor" enabled="true" source_channel_id="preprocessor" sink_channel_id="preprocessor" />
		<link id="21" source_node_id="20" sink_node_id="25" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="22" source_node_id="15" sink_node_id="18" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="23" source_node_id="24" sink_node_id="21" source_channel="Learner" sink_channel="Learner" enabled="true" source_channel_id="learner" sink_channel_id="learner" />
		<link id="24" source_node_id="18" sink_node_id="16" source_channel="Selected Data" sink_channel="Data" enabled="true" source_channel_id="selected_data" sink_channel_id="data" />
		<link id="25" source_node_id="16" sink_node_id="20" source_channel="Data" sink_channel="Extra Data" enabled="true" source_channel_id="data" sink_channel_id="extra_data" />
	</links>
	<annotations />
	<thumbnail />
	<node_properties>
		<properties node_id="0" format="pickle">gASVD0UAAAAAAAB9lCiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjAxyZWNlbnRfcGF0aHOUXZQojB5v
cmFuZ2V3aWRnZXQudXRpbHMuZmlsZWRpYWxvZ3OUjApSZWNlbnRQYXRolJOUKYGUfZQojAdhYnNw
YXRolIw1L2hvbWUvbm9pc2UvRG9jdW1lbnRvcy9yaXNrLWNyZWRpdC9ub3RlYm9va3Mvcmlzay5j
c3aUjAZwcmVmaXiUTowHcmVscGF0aJROjAV0aXRsZZSMAJSMBXNoZWV0lGgOjAtmaWxlX2Zvcm1h
dJROdWJoBimBlH2UKGgJjD9DOi9Vc2Vycy9HcmHDum5hIE1vdG9zL0RvY3VtZW50cy9yaXNrLWNy
ZWRpdC9ub3RlYm9va3Mvcmlzay5jc3aUaAtOaAxOaA1oDmgPaA5oEE51YmgGKYGUfZQoaAmMYUM6
L1VuaWJhbHNhcy9UcmFiYWxob3MvMjAyNC4yL0ludGVsaWdlbmNpYSBkb3MgbmVnb2Npb3MvVEVE
IDEvZGFkb3MvdGFiZWxhX2N1c3RvX2RlX3ZpZGFfMjAxNC5jc3aUaAtOaAxOaA1oDmgPaA5oEE51
YmgGKYGUfZQoaAmMYUM6L1VuaWJhbHNhcy9UcmFiYWxob3MvMjAyNC4yL0ludGVsaWdlbmNpYSBk
b3MgbmVnb2Npb3MvVEVEIDEvZGFkb3MvdGFiZWxhX2N1c3RvX2RlX3ZpZGFfMjAxOC5jc3aUaAtO
aAxOaA1oDmgPaA5oEE51YmgGKYGUfZQoaAmMYUM6L1VuaWJhbHNhcy9UcmFiYWxob3MvMjAyNC4y
L0ludGVsaWdlbmNpYSBkb3MgbmVnb2Npb3MvVEVEIDEvZGFkb3MvdGFiZWxhX2N1c3RvX2RlX3Zp
ZGFfMjAyMS5jc3aUaAtOaAxOaA1oDmgPaA5oEE51YmgGKYGUfZQoaAmMQUM6L1VzZXJzL01wZWRy
L0Rvd25sb2Fkcy9Db3N0X29mX0xpdmluZ19JbmRleF9ieV9Db3VudHJ5XzIwMjQuY3N2lGgLjAdi
YXNlZGlylGgMjChDb3N0X29mX0xpdmluZ19JbmRleF9ieV9Db3VudHJ5XzIwMjQuY3N2lGgNaA5o
D2gOaBBOdWJoBimBlH2UKGgJjFgvaG9tZS9ub2lzZS9vcmFuZ2VfZW52L29yYW5nZV92ZW52L2xp
Yi9weXRob24zLjExL3NpdGUtcGFja2FnZXMvT3JhbmdlL2RhdGFzZXRzL2lyaXMudGFilGgLjA9z
YW1wbGUtZGF0YXNldHOUaAyMCGlyaXMudGFilGgNaA5oD2gOaBBOdWJoBimBlH2UKGgJjFsvaG9t
ZS9ub2lzZS9vcmFuZ2VfZW52L29yYW5nZV92ZW52L2xpYi9weXRob24zLjExL3NpdGUtcGFja2Fn
ZXMvT3JhbmdlL2RhdGFzZXRzL3RpdGFuaWMudGFilGgLaCVoDIwLdGl0YW5pYy50YWKUaA1oDmgP
aA5oEE51YmgGKYGUfZQoaAmMWy9ob21lL25vaXNlL29yYW5nZV9lbnYvb3JhbmdlX3ZlbnYvbGli
L3B5dGhvbjMuMTEvc2l0ZS1wYWNrYWdlcy9PcmFuZ2UvZGF0YXNldHMvaG91c2luZy50YWKUaAto
JWgMjAtob3VzaW5nLnRhYpRoDWgOaA9oDmgQTnViaAYpgZR9lChoCYxhL2hvbWUvbm9pc2Uvb3Jh
bmdlX2Vudi9vcmFuZ2VfdmVudi9saWIvcHl0aG9uMy4xMS9zaXRlLXBhY2thZ2VzL09yYW5nZS9k
YXRhc2V0cy9oZWFydF9kaXNlYXNlLnRhYpRoC2glaAyMEWhlYXJ0X2Rpc2Vhc2UudGFilGgNaA5o
D2gOaBBOdWJoBimBlH2UKGgJjGIvaG9tZS9ub2lzZS9vcmFuZ2VfZW52L29yYW5nZV92ZW52L2xp
Yi9weXRob24zLjExL3NpdGUtcGFja2FnZXMvT3JhbmdlL2RhdGFzZXRzL2Jyb3duLXNlbGVjdGVk
LnRhYpRoC2glaAyMEmJyb3duLXNlbGVjdGVkLnRhYpRoDWgOaA9oDmgQTnViaAYpgZR9lChoCYxX
L2hvbWUvbm9pc2Uvb3JhbmdlX2Vudi9vcmFuZ2VfdmVudi9saWIvcHl0aG9uMy4xMS9zaXRlLXBh
Y2thZ2VzL09yYW5nZS9kYXRhc2V0cy96b28udGFilGgLaCVoDIwHem9vLnRhYpRoDWgOaA9oDmgQ
TnViZYwLcmVjZW50X3VybHOUXZSME3NhdmVkV2lkZ2V0R2VvbWV0cnmUQ0IB2dDLAAMAAAAAAoAA
AADQAAAE/wAAA0MAAAKAAAAA9QAABP8AAANDAAAAAAAAAAAHgAAAAoAAAAD1AAAE/wAAA0OUjAtz
aGVldF9uYW1lc5R9lIwGc291cmNllEsAjAN1cmyUaA6MDWRvbWFpbl9lZGl0b3KUfZSMC19fdmVy
c2lvbl9flEsBjBBjb250ZXh0X3NldHRpbmdzlF2UKIwVb3Jhbmdld2lkZ2V0LnNldHRpbmdzlIwH
Q29udGV4dJSTlCmBlH2UKIwGdmFsdWVzlH2UKIwJdmFyaWFibGVzlF2UaEN9lGhPXZQoXZQojAlG
ZWF0dXJlIDGUjBRPcmFuZ2UuZGF0YS52YXJpYWJsZZSMEkNvbnRpbnVvdXNWYXJpYWJsZZSTlEsA
aA6IZV2UKIwKVW5uYW1lZDogMJRoV0sAaA6IZV2UKIwCaWSUaFdLAGgOiGVdlCiMCW1lbWJlcl9p
ZJRoV0sAaA6IZV2UKIwJbG9hbl9hbW50lGhXSwBoDohlXZQojAtmdW5kZWRfYW1udJRoV0sAaA6I
ZV2UKIwPZnVuZGVkX2FtbnRfaW52lGhXSwBoDohlXZQojAR0ZXJtlGhVjBBEaXNjcmV0ZVZhcmlh
YmxllJOUSwCMFDM2IG1vbnRocywgNjAgbW9udGhzlIllXZQojAhpbnRfcmF0ZZRoV0sAaA6IZV2U
KIwLaW5zdGFsbG1lbnSUaFdLAGgOiGVdlCiMBWdyYWRllGhnSwCME0EsIEIsIEMsIEQsIEUsIEYs
IEeUiWVdlCiMCXN1Yl9ncmFkZZRoZ0sAjFNBMSwgQTIsIEEzLCBBNCwgQTUsIEIxLCBCMiwgQjMs
IEI0LCBCNSwgQzEsIEMyLCBDMywgQzQsIEM1LCBEMSwgRDIsIEQzLCBENCwgRDUsIC4uLpSJZV2U
KIwKZW1wX2xlbmd0aJRoZ0sAjGMxIHllYXIsIDIgeWVhcnMsIDMgeWVhcnMsIDQgeWVhcnMsIDUg
eWVhcnMsIDYgeWVhcnMsIDcgeWVhcnMsIDggeWVhcnMsIDkgeWVhcnMsIDEwKyB5ZWFycywgPCAx
IHllYXKUiWVdlCiMDmhvbWVfb3duZXJzaGlwlGhnSwCMGk1PUlRHQUdFLCBPVEhFUiwgT1dOLCBS
RU5UlIllXZQojAphbm51YWxfaW5jlGhXSwBoDohlXZQojBN2ZXJpZmljYXRpb25fc3RhdHVzlGhn
SwCMJ05vdCBWZXJpZmllZCwgU291cmNlIFZlcmlmaWVkLCBWZXJpZmllZJSJZV2UKIwHaXNzdWVf
ZJRoZ0sAjJ5BcHItMTEsIEF1Zy0xMCwgQXVnLTExLCBEZWMtMTAsIERlYy0xMSwgRmViLTExLCBK
YW4tMTEsIEp1bC0xMCwgSnVsLTExLCBKdW4tMTAsIEp1bi0xMSwgTWFyLTExLCBNYXktMTAsIE1h
eS0xMSwgTm92LTEwLCBOb3YtMTEsIE9jdC0xMCwgT2N0LTExLCBTZXAtMTAsIFNlcC0xMZSJZV2U
KIwLbG9hbl9zdGF0dXOUaGdLAIxhQ2hhcmdlZCBPZmYsIEN1cnJlbnQsIERlZmF1bHQsIEZ1bGx5
IFBhaWQsIEluIEdyYWNlIFBlcmlvZCwgTGF0ZSAoMTYtMzAgZGF5cyksIExhdGUgKDMxLTEyMCBk
YXlzKZSJZV2UKIwKcHltbnRfcGxhbpRoZ0sAjARuLCB5lIllXZQojAdwdXJwb3NllGhnSwCMp2Nh
ciwgY3JlZGl0X2NhcmQsIGRlYnRfY29uc29saWRhdGlvbiwgZWR1Y2F0aW9uYWwsIGhvbWVfaW1w
cm92ZW1lbnQsIGhvdXNlLCBtYWpvcl9wdXJjaGFzZSwgbWVkaWNhbCwgbW92aW5nLCBvdGhlciwg
cmVuZXdhYmxlX2VuZXJneSwgc21hbGxfYnVzaW5lc3MsIHZhY2F0aW9uLCB3ZWRkaW5nlIllXZQo
jAphZGRyX3N0YXRllGhnSwCMU0FLLCBBTCwgQVIsIEFaLCBDQSwgQ08sIENULCBEQywgREUsIEZM
LCBHQSwgSEksIElBLCBJTCwgS1MsIEtZLCBMQSwgTUEsIE1ELCBNSSwgLi4ulIllXZQojANkdGmU
aFdLAGgOiGVdlCiMC2RlbGlucV8yeXJzlGhXSwBoDohlXZQojA5pbnFfbGFzdF82bXRoc5RoV0sA
aA6IZV2UKIwWbXRoc19zaW5jZV9sYXN0X2RlbGlucZRoV0sAaA6IZV2UKIwWbXRoc19zaW5jZV9s
YXN0X3JlY29yZJRoV0sAaA6IZV2UKIwIb3Blbl9hY2OUaFdLAGgOiGVdlCiMB3B1Yl9yZWOUaFdL
AGgOiGVdlCiMCXJldm9sX2JhbJRoV0sAaA6IZV2UKIwKcmV2b2xfdXRpbJRoV0sAaA6IZV2UKIwJ
dG90YWxfYWNjlGhXSwBoDohlXZQojBNpbml0aWFsX2xpc3Rfc3RhdHVzlGhnSwCMAWaUiWVdlCiM
CW91dF9wcm5jcJRoV0sAaA6IZV2UKIwNb3V0X3BybmNwX2ludpRoV0sAaA6IZV2UKIwLdG90YWxf
cHltbnSUaFdLAGgOiGVdlCiMD3RvdGFsX3B5bW50X2ludpRoV0sAaA6IZV2UKIwPdG90YWxfcmVj
X3BybmNwlGhXSwBoDohlXZQojA10b3RhbF9yZWNfaW50lGhXSwBoDohlXZQojBJ0b3RhbF9yZWNf
bGF0ZV9mZWWUaFdLAGgOiGVdlCiMCnJlY292ZXJpZXOUaFdLAGgOiGVdlCiMF2NvbGxlY3Rpb25f
cmVjb3ZlcnlfZmVllGhXSwBoDohlXZQojAxsYXN0X3B5bW50X2SUaGdLAIyjQXByLTExLCBBcHIt
MTIsIEFwci0xMywgQXByLTE0LCBBcHItMTUsIEF1Zy0xMCwgQXVnLTExLCBBdWctMTIsIEF1Zy0x
MywgQXVnLTE0LCBBdWctMTUsIERlYy0xMCwgRGVjLTExLCBEZWMtMTIsIERlYy0xMywgRGVjLTE0
LCBEZWMtMTUsIEZlYi0xMSwgRmViLTEyLCBGZWItMTMsIC4uLpSJZV2UKIwPbGFzdF9weW1udF9h
bW50lGhXSwBoDohlXZQojAxuZXh0X3B5bW50X2SUaGdLAIwORmViLTE2LCBKYW4tMTaUiWVdlCiM
Emxhc3RfY3JlZGl0X3B1bGxfZJRoZ0sAjKNBcHItMTEsIEFwci0xMiwgQXByLTEzLCBBcHItMTQs
IEFwci0xNSwgQXVnLTEwLCBBdWctMTEsIEF1Zy0xMiwgQXVnLTEzLCBBdWctMTQsIEF1Zy0xNSwg
RGVjLTEwLCBEZWMtMTEsIERlYy0xMiwgRGVjLTEzLCBEZWMtMTQsIERlYy0xNSwgRmViLTExLCBG
ZWItMTIsIEZlYi0xMywgLi4ulIllXZQojBpjb2xsZWN0aW9uc18xMl9tdGhzX2V4X21lZJRoZ0sA
jAMwLjCUiGVdlCiMG210aHNfc2luY2VfbGFzdF9tYWpvcl9kZXJvZ5RoV0sAaA6IZV2UKIwLcG9s
aWN5X2NvZGWUaGdLAIwBMZSIZV2UKIwQYXBwbGljYXRpb25fdHlwZZRoZ0sAjApJTkRJVklEVUFM
lIllXZQojBBhbm51YWxfaW5jX2pvaW50lGhXSwBoDohlXZQojAlkdGlfam9pbnSUaFdLAGgOiGVd
lCiMGXZlcmlmaWNhdGlvbl9zdGF0dXNfam9pbnSUaFdLAGgOiGVdlCiMDmFjY19ub3dfZGVsaW5x
lGhnSwCMAzAuMJSIZV2UKIwMdG90X2NvbGxfYW10lGhXSwBoDohlXZQojAt0b3RfY3VyX2JhbJRo
V0sAaA6IZV2UKIwLb3Blbl9hY2NfNm2UaFdLAGgOiGVdlCiMCm9wZW5faWxfNm2UaFdLAGgOiGVd
lCiMC29wZW5faWxfMTJtlGhXSwBoDohlXZQojAtvcGVuX2lsXzI0bZRoV0sAaA6IZV2UKIwSbXRo
c19zaW5jZV9yY250X2lslGhXSwBoDohlXZQojAx0b3RhbF9iYWxfaWyUaFdLAGgOiGVdlCiMB2ls
X3V0aWyUaFdLAGgOiGVdlCiMC29wZW5fcnZfMTJtlGhXSwBoDohlXZQojAtvcGVuX3J2XzI0bZRo
V0sAaA6IZV2UKIwKbWF4X2JhbF9iY5RoV0sAaA6IZV2UKIwIYWxsX3V0aWyUaFdLAGgOiGVdlCiM
EHRvdGFsX3Jldl9oaV9saW2UaFdLAGgOiGVdlCiMBmlucV9maZRoV0sAaA6IZV2UKIwLdG90YWxf
Y3VfdGyUaFdLAGgOiGVdlCiMDGlucV9sYXN0XzEybZRoV0sAaA6IZV2UKIwOZW1wX2xlbmd0aF9p
bnSUaFdLAGgOiGVdlCiMFWVhcmxpZXN0X2NyX2xpbmVfZGF0ZZRoVYwMVGltZVZhcmlhYmxllJOU
SwBoDohlXZQojBttdGhzX3NpbmNlX2VhcmxpZXN0X2NyX2xpbmWUaFdLAGgOiGVdlCiMCHRlcm1f
aW50lGhXSwBoDohlXZQojAxpc3N1ZV9kX2RhdGWUaPxLAGgOiGVdlCiMEm10aHNfc2luY2VfaXNz
dWVfZJRoV0sAaA6IZV2UKIwIZ29vZF9iYWSUaGdLAYwEMCwgMZSIZV2UKIwJZW1wX3RpdGxllGhV
jA5TdHJpbmdWYXJpYWJsZZSTlEsCaA6JZV2UKIwDdXJslGoLAQAASwJoDollXZQojARkZXNjlGoL
AQAASwJoDollXZQojAV0aXRsZZRqCwEAAEsCaA6JZV2UKIwIemlwX2NvZGWUagsBAABLAmgOiWVd
lCiMEGVhcmxpZXN0X2NyX2xpbmWUagsBAABLAmgOiWVlc2hFSwF1jAphdHRyaWJ1dGVzlChoVEsC
hpRoWUsChpRoW0sChpRoXUsChpRoX0sChpRoYUsChpRoY0sChpRoZV2UKIwJMzYgbW9udGhzlIwJ
NjAgbW9udGhzlGWGlGhqSwKGlGhsSwKGlGhuXZQojAFBlIwBQpSMAUOUjAFElIwBRZSMAUaUjAFH
lGWGlGhxXZQojAJBMZSMAkEylIwCQTOUjAJBNJSMAkE1lIwCQjGUjAJCMpSMAkIzlIwCQjSUjAJC
NZSMAkMxlIwCQzKUjAJDM5SMAkM0lIwCQzWUjAJEMZSMAkQylIwCRDOUjAJENJSMAkQ1lIwCRTGU
jAJFMpSMAkUzlIwCRTSUjAJFNZSMAkYxlIwCRjKUjAJGM5SMAkY0lIwCRjWUjAJHMZSMAkcylIwC
RzOUjAJHNJSMAkc1lGWGlGh0XZQojAYxIHllYXKUjAcyIHllYXJzlIwHMyB5ZWFyc5SMBzQgeWVh
cnOUjAc1IHllYXJzlIwHNiB5ZWFyc5SMBzcgeWVhcnOUjAc4IHllYXJzlIwHOSB5ZWFyc5SMCTEw
KyB5ZWFyc5SMCDwgMSB5ZWFylGWGlGh3XZQojAhNT1JUR0FHRZSMBU9USEVSlIwDT1dOlIwEUkVO
VJRlhpRoeksChpRofF2UKIwMTm90IFZlcmlmaWVklIwPU291cmNlIFZlcmlmaWVklIwIVmVyaWZp
ZWSUZYaUaH9dlCiMBkFwci0xMZSMBkF1Zy0xMJSMBkF1Zy0xMZSMBkRlYy0xMJSMBkRlYy0xMZSM
BkZlYi0xMZSMBkphbi0xMZSMBkp1bC0xMJSMBkp1bC0xMZSMBkp1bi0xMJSMBkp1bi0xMZSMBk1h
ci0xMZSMBk1heS0xMJSMBk1heS0xMZSMBk5vdi0xMJSMBk5vdi0xMZSMBk9jdC0xMJSMBk9jdC0x
MZSMBlNlcC0xMJSMBlNlcC0xMZRlhpRogl2UKIwLQ2hhcmdlZCBPZmaUjAdDdXJyZW50lIwHRGVm
YXVsdJSMCkZ1bGx5IFBhaWSUjA9JbiBHcmFjZSBQZXJpb2SUjBFMYXRlICgxNi0zMCBkYXlzKZSM
EkxhdGUgKDMxLTEyMCBkYXlzKZRlhpRohV2UKIwBbpSMAXmUZYaUaIhdlCiMA2NhcpSMC2NyZWRp
dF9jYXJklIwSZGVidF9jb25zb2xpZGF0aW9ulIwLZWR1Y2F0aW9uYWyUjBBob21lX2ltcHJvdmVt
ZW50lIwFaG91c2WUjA5tYWpvcl9wdXJjaGFzZZSMB21lZGljYWyUjAZtb3ZpbmeUjAVvdGhlcpSM
EHJlbmV3YWJsZV9lbmVyZ3mUjA5zbWFsbF9idXNpbmVzc5SMCHZhY2F0aW9ulIwHd2VkZGluZ5Rl
hpRoi12UKIwCQUuUjAJBTJSMAkFSlIwCQVqUjAJDQZSMAkNPlIwCQ1SUjAJEQ5SMAkRFlIwCRkyU
jAJHQZSMAkhJlIwCSUGUjAJJTJSMAktTlIwCS1mUjAJMQZSMAk1BlIwCTUSUjAJNSZSMAk1OlIwC
TU+UjAJNU5SMAk1UlIwCTkOUjAJOSJSMAk5KlIwCTk2UjAJOVpSMAk5ZlIwCT0iUjAJPS5SMAk9S
lIwCUEGUjAJSSZSMAlNDlIwCU0SUjAJUTpSMAlRYlIwCVVSUjAJWQZSMAlZUlIwCV0GUjAJXSZSM
AldWlIwCV1mUZYaUaI5LAoaUaJBLAoaUaJJLAoaUaJRLAoaUaJZLAoaUaJhLAoaUaJpLAoaUaJxL
AoaUaJ5LAoaUaKBLAoaUaKJdlGijYYaUaKVLAoaUaKdLAoaUaKlLAoaUaKtLAoaUaK1LAoaUaK9L
AoaUaLFLAoaUaLNLAoaUaLVLAoaUaLddlCiMBkFwci0xMZSMBkFwci0xMpSMBkFwci0xM5SMBkFw
ci0xNJSMBkFwci0xNZSMBkF1Zy0xMJSMBkF1Zy0xMZSMBkF1Zy0xMpSMBkF1Zy0xM5SMBkF1Zy0x
NJSMBkF1Zy0xNZSMBkRlYy0xMJSMBkRlYy0xMZSMBkRlYy0xMpSMBkRlYy0xM5SMBkRlYy0xNJSM
BkRlYy0xNZSMBkZlYi0xMZSMBkZlYi0xMpSMBkZlYi0xM5SMBkZlYi0xNJSMBkZlYi0xNZSMBkph
bi0xMZSMBkphbi0xMpSMBkphbi0xM5SMBkphbi0xNJSMBkphbi0xNZSMBkphbi0xNpSMBkp1bC0x
MJSMBkp1bC0xMZSMBkp1bC0xMpSMBkp1bC0xM5SMBkp1bC0xNJSMBkp1bC0xNZSMBkp1bi0xMZSM
Bkp1bi0xMpSMBkp1bi0xM5SMBkp1bi0xNJSMBkp1bi0xNZSMBk1hci0xMZSMBk1hci0xMpSMBk1h
ci0xM5SMBk1hci0xNJSMBk1hci0xNZSMBk1heS0xMZSMBk1heS0xMpSMBk1heS0xM5SMBk1heS0x
NJSMBk1heS0xNZSMBk5vdi0xMJSMBk5vdi0xMZSMBk5vdi0xMpSMBk5vdi0xM5SMBk5vdi0xNJSM
Bk5vdi0xNZSMBk9jdC0xMJSMBk9jdC0xMZSMBk9jdC0xMpSMBk9jdC0xM5SMBk9jdC0xNJSMBk9j
dC0xNZSMBlNlcC0xMJSMBlNlcC0xMZSMBlNlcC0xMpSMBlNlcC0xM5SMBlNlcC0xNJSMBlNlcC0x
NZRlhpRouksChpRovF2UKIwGRmViLTE2lIwGSmFuLTE2lGWGlGi/XZQojAZBcHItMTGUjAZBcHIt
MTKUjAZBcHItMTOUjAZBcHItMTSUjAZBcHItMTWUjAZBdWctMTCUjAZBdWctMTGUjAZBdWctMTKU
jAZBdWctMTOUjAZBdWctMTSUjAZBdWctMTWUjAZEZWMtMTCUjAZEZWMtMTGUjAZEZWMtMTKUjAZE
ZWMtMTOUjAZEZWMtMTSUjAZEZWMtMTWUjAZGZWItMTGUjAZGZWItMTKUjAZGZWItMTOUjAZGZWIt
MTSUjAZGZWItMTWUjAZKYW4tMTGUjAZKYW4tMTKUjAZKYW4tMTOUjAZKYW4tMTSUjAZKYW4tMTWU
jAZKYW4tMTaUjAZKdWwtMTCUjAZKdWwtMTGUjAZKdWwtMTKUjAZKdWwtMTOUjAZKdWwtMTSUjAZK
dWwtMTWUjAZKdW4tMTCUjAZKdW4tMTGUjAZKdW4tMTKUjAZKdW4tMTOUjAZKdW4tMTSUjAZKdW4t
MTWUjAZNYXItMTGUjAZNYXItMTKUjAZNYXItMTOUjAZNYXItMTSUjAZNYXItMTWUjAZNYXktMTGU
jAZNYXktMTKUjAZNYXktMTOUjAZNYXktMTSUjAZNYXktMTWUjAZOb3YtMTCUjAZOb3YtMTGUjAZO
b3YtMTKUjAZOb3YtMTOUjAZOb3YtMTSUjAZOb3YtMTWUjAZPY3QtMTCUjAZPY3QtMTGUjAZPY3Qt
MTKUjAZPY3QtMTOUjAZPY3QtMTSUjAZPY3QtMTWUjAZTZXAtMTCUjAZTZXAtMTGUjAZTZXAtMTKU
jAZTZXAtMTOUjAZTZXAtMTSUjAZTZXAtMTWUZYaUaMJdlGjDYYaUaMVLAoaUaMddlGjIYYaUaMpd
lGjLYYaUaM1LAoaUaM9LAoaUaNFLAoaUaNNdlGjUYYaUaNZLAoaUaNhLAoaUaNpLAoaUaNxLAoaU
aN5LAoaUaOBLAoaUaOJLAoaUaORLAoaUaOZLAoaUaOhLAoaUaOpLAoaUaOxLAoaUaO5LAoaUaPBL
AoaUaPJLAoaUaPRLAoaUaPZLAoaUaPhLAoaUaPpLBIaUaP5LAoaUagABAABLAoaUagIBAABLBIaU
agQBAABLAoaUagYBAABdlCiMATCUaMhlhpR0lIwFbWV0YXOUKGoJAQAASwOGlGoNAQAASwOGlGoP
AQAASwOGlGoRAQAASwOGlGoTAQAASwOGlGoVAQAASwOGlHSUjApjbGFzc192YXJzlCmMEm1vZGlm
aWVkX3ZhcmlhYmxlc5RdlHViaEopgZR9lChoTX2UKIwJdmFyaWFibGVzlF2UjA1kb21haW5fZWRp
dG9ylH2UaqgCAABdlChdlCiMCWxvYW5fYW1udJRoV0sAaA6IZV2UKIwLZnVuZGVkX2FtbnSUaFdL
AGgOiGVdlCiMBHRlcm2UaGdLAIwUMzYgbW9udGhzLCA2MCBtb250aHOUiWVdlCiMCGludF9yYXRl
lGhXSwBoDohlXZQojAtpbnN0YWxsbWVudJRoV0sAaA6IZV2UKIwFZ3JhZGWUaGdLAIwTQSwgQiwg
QywgRCwgRSwgRiwgR5SJZV2UKIwJc3ViX2dyYWRllGhnSwCMU0ExLCBBMiwgQTMsIEE0LCBBNSwg
QjEsIEIyLCBCMywgQjQsIEI1LCBDMSwgQzIsIEMzLCBDNCwgQzUsIEQxLCBEMiwgRDMsIEQ0LCBE
NSwgLi4ulIllXZQojAplbXBfbGVuZ3RolGhnSwCMYzEgeWVhciwgMiB5ZWFycywgMyB5ZWFycywg
NCB5ZWFycywgNSB5ZWFycywgNiB5ZWFycywgNyB5ZWFycywgOCB5ZWFycywgOSB5ZWFycywgMTAr
IHllYXJzLCA8IDEgeWVhcpSJZV2UKIwOaG9tZV9vd25lcnNoaXCUaGdLAIwTTU9SVEdBR0UsIE9X
TiwgUkVOVJSJZV2UKIwKYW5udWFsX2luY5RoV0sAaA6IZV2UKIwTdmVyaWZpY2F0aW9uX3N0YXR1
c5RoZ0sAjCdOb3QgVmVyaWZpZWQsIFNvdXJjZSBWZXJpZmllZCwgVmVyaWZpZWSUiWVdlCiMB2lz
c3VlX2SUaGdLAIwWRGVjLTExLCBOb3YtMTEsIE9jdC0xMZSJZV2UKIwLbG9hbl9zdGF0dXOUaGdL
AIxhQ2hhcmdlZCBPZmYsIEN1cnJlbnQsIERlZmF1bHQsIEZ1bGx5IFBhaWQsIEluIEdyYWNlIFBl
cmlvZCwgTGF0ZSAoMTYtMzAgZGF5cyksIExhdGUgKDMxLTEyMCBkYXlzKZSJZV2UKIwHcHVycG9z
ZZRoZ0sAjJpjYXIsIGNyZWRpdF9jYXJkLCBkZWJ0X2NvbnNvbGlkYXRpb24sIGhvbWVfaW1wcm92
ZW1lbnQsIGhvdXNlLCBtYWpvcl9wdXJjaGFzZSwgbWVkaWNhbCwgbW92aW5nLCBvdGhlciwgcmVu
ZXdhYmxlX2VuZXJneSwgc21hbGxfYnVzaW5lc3MsIHZhY2F0aW9uLCB3ZWRkaW5nlIllXZQojAph
ZGRyX3N0YXRllGhnSwCMU0FLLCBBTCwgQVIsIEFaLCBDQSwgQ08sIENULCBEQywgREUsIEZMLCBH
QSwgSEksIElMLCBLUywgS1ksIExBLCBNQSwgTUQsIE1JLCBNTiwgLi4ulIllXZQojANkdGmUaFdL
AGgOiGVdlCiMC2RlbGlucV8yeXJzlGhXSwBoDohlXZQojA5pbnFfbGFzdF82bXRoc5RoV0sAaA6I
ZV2UKIwWbXRoc19zaW5jZV9sYXN0X2RlbGlucZRoV0sAaA6IZV2UKIwWbXRoc19zaW5jZV9sYXN0
X3JlY29yZJRoV0sAaA6IZV2UKIwIb3Blbl9hY2OUaFdLAGgOiGVdlCiMB3B1Yl9yZWOUaFdLAGgO
iGVdlCiMCXJldm9sX2JhbJRoV0sAaA6IZV2UKIwKcmV2b2xfdXRpbJRoV0sAaA6IZV2UKIwJdG90
YWxfYWNjlGhXSwBoDohlXZQojBNpbml0aWFsX2xpc3Rfc3RhdHVzlGhnSwBoo4llXZQojAlvdXRf
cHJuY3CUaFdLAGgOiGVdlCiMC3RvdGFsX3B5bW50lGhXSwBoDohlXZQojA90b3RhbF9yZWNfcHJu
Y3CUaFdLAGgOiGVdlCiMDXRvdGFsX3JlY19pbnSUaFdLAGgOiGVdlCiMEnRvdGFsX3JlY19sYXRl
X2ZlZZRoV0sAaA6IZV2UKIwKcmVjb3Zlcmllc5RoV0sAaA6IZV2UKIwXY29sbGVjdGlvbl9yZWNv
dmVyeV9mZWWUaFdLAGgOiGVdlCiMDGxhc3RfcHltbnRfZJRoZ0sAjKNBcHItMTIsIEFwci0xMywg
QXByLTE0LCBBcHItMTUsIEF1Zy0xMiwgQXVnLTEzLCBBdWctMTQsIEF1Zy0xNSwgRGVjLTExLCBE
ZWMtMTIsIERlYy0xMywgRGVjLTE0LCBEZWMtMTUsIEZlYi0xMiwgRmViLTEzLCBGZWItMTQsIEZl
Yi0xNSwgSmFuLTEyLCBKYW4tMTMsIEphbi0xNCwgLi4ulIllXZQojA9sYXN0X3B5bW50X2FtbnSU
aFdLAGgOiGVdlCiMGmNvbGxlY3Rpb25zXzEyX210aHNfZXhfbWVklGhnSwCMAzAuMJSIZV2UKIwb
bXRoc19zaW5jZV9sYXN0X21ham9yX2Rlcm9nlGhXSwBoDohlXZQojBBhbm51YWxfaW5jX2pvaW50
lGhXSwBoDohlXZQojAlkdGlfam9pbnSUaFdLAGgOiGVdlCiMGXZlcmlmaWNhdGlvbl9zdGF0dXNf
am9pbnSUaFdLAGgOiGVdlCiMDmFjY19ub3dfZGVsaW5xlGhnSwCMAzAuMJSIZV2UKIwMdG90X2Nv
bGxfYW10lGhXSwBoDohlXZQojAt0b3RfY3VyX2JhbJRoV0sAaA6IZV2UKIwLb3Blbl9hY2NfNm2U
aFdLAGgOiGVdlCiMCm9wZW5faWxfNm2UaFdLAGgOiGVdlCiMC29wZW5faWxfMTJtlGhXSwBoDohl
XZQojAtvcGVuX2lsXzI0bZRoV0sAaA6IZV2UKIwSbXRoc19zaW5jZV9yY250X2lslGhXSwBoDohl
XZQojAx0b3RhbF9iYWxfaWyUaFdLAGgOiGVdlCiMB2lsX3V0aWyUaFdLAGgOiGVdlCiMC29wZW5f
cnZfMTJtlGhXSwBoDohlXZQojAtvcGVuX3J2XzI0bZRoV0sAaA6IZV2UKIwKbWF4X2JhbF9iY5Ro
V0sAaA6IZV2UKIwIYWxsX3V0aWyUaFdLAGgOiGVdlCiMEHRvdGFsX3Jldl9oaV9saW2UaFdLAGgO
iGVdlCiMBmlucV9maZRoV0sAaA6IZV2UKIwLdG90YWxfY3VfdGyUaFdLAGgOiGVdlCiMDGlucV9s
YXN0XzEybZRoV0sAaA6IZV2UKIwIZ29vZF9iYWSUaGdLAYwEMCwgMZSIZV2UKIwEZGVzY5RqCwEA
AEsCaA6JZV2UKIwQZWFybGllc3RfY3JfbGluZZRqCwEAAEsCaA6JZWVzaEVLAXVqFgEAAChqrgIA
AEsChpRqsAIAAEsChpRqsgIAAF2UKIwJMzYgbW9udGhzlIwJNjAgbW9udGhzlGWGlGq1AgAASwKG
lGq3AgAASwKGlGq5AgAAXZQoaiUBAABqJgEAAGonAQAAaigBAABqKQEAAGoqAQAAaisBAABlhpRq
vAIAAF2UKIwCQTGUjAJBMpSMAkEzlIwCQTSUjAJBNZSMAkIxlIwCQjKUjAJCM5SMAkI0lIwCQjWU
jAJDMZSMAkMylIwCQzOUjAJDNJSMAkM1lIwCRDGUjAJEMpSMAkQzlIwCRDSUjAJENZSMAkUxlIwC
RTKUjAJFM5SMAkU0lIwCRTWUjAJGMZSMAkYylIwCRjOUjAJGNJSMAkY1lIwCRzGUjAJHMpSMAkcz
lIwCRzSUjAJHNZRlhpRqvwIAAF2UKIwGMSB5ZWFylIwHMiB5ZWFyc5SMBzMgeWVhcnOUjAc0IHll
YXJzlIwHNSB5ZWFyc5SMBzYgeWVhcnOUjAc3IHllYXJzlIwHOCB5ZWFyc5SMBzkgeWVhcnOUjAkx
MCsgeWVhcnOUjAg8IDEgeWVhcpRlhpRqwgIAAF2UKIwITU9SVEdBR0WUjANPV06UjARSRU5UlGWG
lGrFAgAASwKGlGrHAgAAXZQojAxOb3QgVmVyaWZpZWSUjA9Tb3VyY2UgVmVyaWZpZWSUjAhWZXJp
ZmllZJRlhpRqygIAAF2UKIwGRGVjLTExlIwGTm92LTExlIwGT2N0LTExlGWGlGrNAgAAXZQojAtD
aGFyZ2VkIE9mZpSMB0N1cnJlbnSUjAdEZWZhdWx0lIwKRnVsbHkgUGFpZJSMD0luIEdyYWNlIFBl
cmlvZJSMEUxhdGUgKDE2LTMwIGRheXMplIwSTGF0ZSAoMzEtMTIwIGRheXMplGWGlGrQAgAAXZQo
jANjYXKUjAtjcmVkaXRfY2FyZJSMEmRlYnRfY29uc29saWRhdGlvbpSMEGhvbWVfaW1wcm92ZW1l
bnSUjAVob3VzZZSMDm1ham9yX3B1cmNoYXNllIwHbWVkaWNhbJSMBm1vdmluZ5SMBW90aGVylIwQ
cmVuZXdhYmxlX2VuZXJneZSMDnNtYWxsX2J1c2luZXNzlIwIdmFjYXRpb26UjAd3ZWRkaW5nlGWG
lGrTAgAAXZQojAJBS5SMAkFMlIwCQVKUjAJBWpSMAkNBlIwCQ0+UjAJDVJSMAkRDlIwCREWUjAJG
TJSMAkdBlIwCSEmUjAJJTJSMAktTlIwCS1mUjAJMQZSMAk1BlIwCTUSUjAJNSZSMAk1OlIwCTU+U
jAJNU5SMAk1UlIwCTkOUjAJOSJSMAk5KlIwCTk2UjAJOVpSMAk5ZlIwCT0iUjAJPS5SMAk9SlIwC
UEGUjAJSSZSMAlNDlIwCU0SUjAJUTpSMAlRYlIwCVVSUjAJWQZSMAlZUlIwCV0GUjAJXSZSMAldW
lIwCV1mUZYaUatYCAABLAoaUatgCAABLAoaUatoCAABLAoaUatwCAABLAoaUat4CAABLAoaUauAC
AABLAoaUauICAABLAoaUauQCAABLAoaUauYCAABLAoaUaugCAABLAoaUauoCAABdlGijYYaUauwC
AABLAoaUau4CAABLAoaUavACAABLAoaUavICAABLAoaUavQCAABLAoaUavYCAABLAoaUavgCAABL
AoaUavoCAABdlCiMBkFwci0xMpSMBkFwci0xM5SMBkFwci0xNJSMBkFwci0xNZSMBkF1Zy0xMpSM
BkF1Zy0xM5SMBkF1Zy0xNJSMBkF1Zy0xNZSMBkRlYy0xMZSMBkRlYy0xMpSMBkRlYy0xM5SMBkRl
Yy0xNJSMBkRlYy0xNZSMBkZlYi0xMpSMBkZlYi0xM5SMBkZlYi0xNJSMBkZlYi0xNZSMBkphbi0x
MpSMBkphbi0xM5SMBkphbi0xNJSMBkphbi0xNZSMBkphbi0xNpSMBkp1bC0xMpSMBkp1bC0xM5SM
Bkp1bC0xNJSMBkp1bC0xNZSMBkp1bi0xMpSMBkp1bi0xM5SMBkp1bi0xNJSMBkp1bi0xNZSMBk1h
ci0xMpSMBk1hci0xM5SMBk1hci0xNJSMBk1hci0xNZSMBk1heS0xMpSMBk1heS0xM5SMBk1heS0x
NJSMBk1heS0xNZSMBk5vdi0xMZSMBk5vdi0xMpSMBk5vdi0xM5SMBk5vdi0xNJSMBk5vdi0xNZSM
Bk9jdC0xMpSMBk9jdC0xM5SMBk9jdC0xNJSMBk9jdC0xNZSMBlNlcC0xMpSMBlNlcC0xM5SMBlNl
cC0xNJSMBlNlcC0xNZRlhpRq/QIAAEsChpRq/wIAAF2UagADAABhhpRqAgMAAEsChpRqBAMAAEsC
hpRqBgMAAEsChpRqCAMAAEsChpRqCgMAAF2UagsDAABhhpRqDQMAAEsChpRqDwMAAEsChpRqEQMA
AEsChpRqEwMAAEsChpRqFQMAAEsChpRqFwMAAEsChpRqGQMAAEsChpRqGwMAAEsChpRqHQMAAEsC
hpRqHwMAAEsChpRqIQMAAEsChpRqIwMAAEsChpRqJQMAAEsChpRqJwMAAEsChpRqKQMAAEsChpRq
KwMAAEsChpRqLQMAAEsChpRqLwMAAF2UKGqXAgAAaMhlhpR0lGqaAgAAajIDAABLA4aUajQDAABL
A4aUhpRqogIAAClqowIAAF2UdWJoSimBlH2UKGhNfZQojAl2YXJpYWJsZXOUXZSMDWRvbWFpbl9l
ZGl0b3KUfZRqNAQAAF2UKF2UKIwJbG9hbl9hbW50lGhXSwBoDohlXZQojAtmdW5kZWRfYW1udJRo
V0sAaA6IZV2UKIwEdGVybZRoZ0sAjBQzNiBtb250aHMsIDYwIG1vbnRoc5SJZV2UKIwIaW50X3Jh
dGWUaFdLAGgOiGVdlCiMC2luc3RhbGxtZW50lGhXSwBoDohlXZQojAVncmFkZZRoZ0sAjBNBLCBC
LCBDLCBELCBFLCBGLCBHlIllXZQojAlzdWJfZ3JhZGWUaGdLAIxTQTEsIEEyLCBBMywgQTQsIEE1
LCBCMSwgQjIsIEIzLCBCNCwgQjUsIEMxLCBDMiwgQzMsIEM0LCBDNSwgRDEsIEQyLCBEMywgRDQs
IEQ1LCAuLi6UiWVdlCiMCmVtcF9sZW5ndGiUaGdLAIxjMSB5ZWFyLCAyIHllYXJzLCAzIHllYXJz
LCA0IHllYXJzLCA1IHllYXJzLCA2IHllYXJzLCA3IHllYXJzLCA4IHllYXJzLCA5IHllYXJzLCAx
MCsgeWVhcnMsIDwgMSB5ZWFylIllXZQojA5ob21lX293bmVyc2hpcJRoZ0sAjBpNT1JUR0FHRSwg
T1RIRVIsIE9XTiwgUkVOVJSJZV2UKIwKYW5udWFsX2luY5RoV0sAaA6IZV2UKIwTdmVyaWZpY2F0
aW9uX3N0YXR1c5RoZ0sAjCdOb3QgVmVyaWZpZWQsIFNvdXJjZSBWZXJpZmllZCwgVmVyaWZpZWSU
iWVdlCiMB2lzc3VlX2SUaGdLAIxWQXByLTExLCBBdWctMTEsIERlYy0xMSwgRmViLTExLCBKdWwt
MTEsIEp1bi0xMSwgTWFyLTExLCBNYXktMTEsIE5vdi0xMSwgT2N0LTExLCBTZXAtMTGUiWVdlCiM
C2xvYW5fc3RhdHVzlGhnSwCMYUNoYXJnZWQgT2ZmLCBDdXJyZW50LCBEZWZhdWx0LCBGdWxseSBQ
YWlkLCBJbiBHcmFjZSBQZXJpb2QsIExhdGUgKDE2LTMwIGRheXMpLCBMYXRlICgzMS0xMjAgZGF5
cymUiWVdlCiMB3B1cnBvc2WUaGdLAIyaY2FyLCBjcmVkaXRfY2FyZCwgZGVidF9jb25zb2xpZGF0
aW9uLCBob21lX2ltcHJvdmVtZW50LCBob3VzZSwgbWFqb3JfcHVyY2hhc2UsIG1lZGljYWwsIG1v
dmluZywgb3RoZXIsIHJlbmV3YWJsZV9lbmVyZ3ksIHNtYWxsX2J1c2luZXNzLCB2YWNhdGlvbiwg
d2VkZGluZ5SJZV2UKIwKYWRkcl9zdGF0ZZRoZ0sAjFNBSywgQUwsIEFSLCBBWiwgQ0EsIENPLCBD
VCwgREMsIERFLCBGTCwgR0EsIEhJLCBJTCwgS1MsIEtZLCBMQSwgTUEsIE1ELCBNSSwgTU4sIC4u
LpSJZV2UKIwDZHRplGhXSwBoDohlXZQojAtkZWxpbnFfMnlyc5RoV0sAaA6IZV2UKIwOaW5xX2xh
c3RfNm10aHOUaFdLAGgOiGVdlCiMFm10aHNfc2luY2VfbGFzdF9kZWxpbnGUaFdLAGgOiGVdlCiM
Fm10aHNfc2luY2VfbGFzdF9yZWNvcmSUaFdLAGgOiGVdlCiMCG9wZW5fYWNjlGhXSwBoDohlXZQo
jAdwdWJfcmVjlGhXSwBoDohlXZQojAlyZXZvbF9iYWyUaFdLAGgOiGVdlCiMCnJldm9sX3V0aWyU
aFdLAGgOiGVdlCiMCXRvdGFsX2FjY5RoV0sAaA6IZV2UKIwTaW5pdGlhbF9saXN0X3N0YXR1c5Ro
Z0sAaKOJZV2UKIwJb3V0X3BybmNwlGhXSwBoDohlXZQojAt0b3RhbF9weW1udJRoV0sAaA6IZV2U
KIwPdG90YWxfcmVjX3BybmNwlGhXSwBoDohlXZQojA10b3RhbF9yZWNfaW50lGhXSwBoDohlXZQo
jBJ0b3RhbF9yZWNfbGF0ZV9mZWWUaFdLAGgOiGVdlCiMCnJlY292ZXJpZXOUaFdLAGgOiGVdlCiM
F2NvbGxlY3Rpb25fcmVjb3ZlcnlfZmVllGhXSwBoDohlXZQojAxsYXN0X3B5bW50X2SUaGdLAIyj
QXByLTExLCBBcHItMTIsIEFwci0xMywgQXByLTE0LCBBcHItMTUsIEF1Zy0xMSwgQXVnLTEyLCBB
dWctMTMsIEF1Zy0xNCwgQXVnLTE1LCBEZWMtMTEsIERlYy0xMiwgRGVjLTEzLCBEZWMtMTQsIERl
Yy0xNSwgRmViLTEyLCBGZWItMTMsIEZlYi0xNCwgRmViLTE1LCBKYW4tMTIsIC4uLpSJZV2UKIwP
bGFzdF9weW1udF9hbW50lGhXSwBoDohlXZQojBpjb2xsZWN0aW9uc18xMl9tdGhzX2V4X21lZJRo
Z0sAjAMwLjCUiGVdlCiMG210aHNfc2luY2VfbGFzdF9tYWpvcl9kZXJvZ5RoV0sAaA6IZV2UKIwQ
YW5udWFsX2luY19qb2ludJRoV0sAaA6IZV2UKIwJZHRpX2pvaW50lGhXSwBoDohlXZQojBl2ZXJp
ZmljYXRpb25fc3RhdHVzX2pvaW50lGhXSwBoDohlXZQojA5hY2Nfbm93X2RlbGlucZRoZ0sAjAMw
LjCUiGVdlCiMDHRvdF9jb2xsX2FtdJRoV0sAaA6IZV2UKIwLdG90X2N1cl9iYWyUaFdLAGgOiGVd
lCiMC29wZW5fYWNjXzZtlGhXSwBoDohlXZQojApvcGVuX2lsXzZtlGhXSwBoDohlXZQojAtvcGVu
X2lsXzEybZRoV0sAaA6IZV2UKIwLb3Blbl9pbF8yNG2UaFdLAGgOiGVdlCiMEm10aHNfc2luY2Vf
cmNudF9pbJRoV0sAaA6IZV2UKIwMdG90YWxfYmFsX2lslGhXSwBoDohlXZQojAdpbF91dGlslGhX
SwBoDohlXZQojAtvcGVuX3J2XzEybZRoV0sAaA6IZV2UKIwLb3Blbl9ydl8yNG2UaFdLAGgOiGVd
lCiMCm1heF9iYWxfYmOUaFdLAGgOiGVdlCiMCGFsbF91dGlslGhXSwBoDohlXZQojBB0b3RhbF9y
ZXZfaGlfbGltlGhXSwBoDohlXZQojAZpbnFfZmmUaFdLAGgOiGVdlCiMC3RvdGFsX2N1X3RslGhX
SwBoDohlXZQojAxpbnFfbGFzdF8xMm2UaFdLAGgOiGVdlCiMCGdvb2RfYmFklGhnSwGMBDAsIDGU
iGVdlCiMBGRlc2OUagsBAABLAmgOiWVdlCiMEGVhcmxpZXN0X2NyX2xpbmWUagsBAABLAmgOiWVl
c2hFSwF1ahYBAAAoajoEAABLAoaUajwEAABLAoaUaj4EAABdlCiMCTM2IG1vbnRoc5SMCTYwIG1v
bnRoc5RlhpRqQQQAAEsChpRqQwQAAEsChpRqRQQAAF2UKGolAQAAaiYBAABqJwEAAGooAQAAaikB
AABqKgEAAGorAQAAZYaUakgEAABdlCiMAkExlIwCQTKUjAJBM5SMAkE0lIwCQTWUjAJCMZSMAkIy
lIwCQjOUjAJCNJSMAkI1lIwCQzGUjAJDMpSMAkMzlIwCQzSUjAJDNZSMAkQxlIwCRDKUjAJEM5SM
AkQ0lIwCRDWUjAJFMZSMAkUylIwCRTOUjAJFNJSMAkU1lIwCRjGUjAJGMpSMAkYzlIwCRjSUjAJG
NZSMAkcxlIwCRzKUjAJHM5SMAkc0lIwCRzWUZYaUaksEAABdlCiMBjEgeWVhcpSMBzIgeWVhcnOU
jAczIHllYXJzlIwHNCB5ZWFyc5SMBzUgeWVhcnOUjAc2IHllYXJzlIwHNyB5ZWFyc5SMBzggeWVh
cnOUjAc5IHllYXJzlIwJMTArIHllYXJzlIwIPCAxIHllYXKUZYaUak4EAABdlCiMCE1PUlRHQUdF
lIwFT1RIRVKUjANPV06UjARSRU5UlGWGlGpRBAAASwKGlGpTBAAAXZQojAxOb3QgVmVyaWZpZWSU
jA9Tb3VyY2UgVmVyaWZpZWSUjAhWZXJpZmllZJRlhpRqVgQAAF2UKIwGQXByLTExlIwGQXVnLTEx
lIwGRGVjLTExlIwGRmViLTExlIwGSnVsLTExlIwGSnVuLTExlIwGTWFyLTExlIwGTWF5LTExlIwG
Tm92LTExlIwGT2N0LTExlIwGU2VwLTExlGWGlGpZBAAAXZQojAtDaGFyZ2VkIE9mZpSMB0N1cnJl
bnSUjAdEZWZhdWx0lIwKRnVsbHkgUGFpZJSMD0luIEdyYWNlIFBlcmlvZJSMEUxhdGUgKDE2LTMw
IGRheXMplIwSTGF0ZSAoMzEtMTIwIGRheXMplGWGlGpcBAAAXZQojANjYXKUjAtjcmVkaXRfY2Fy
ZJSMEmRlYnRfY29uc29saWRhdGlvbpSMEGhvbWVfaW1wcm92ZW1lbnSUjAVob3VzZZSMDm1ham9y
X3B1cmNoYXNllIwHbWVkaWNhbJSMBm1vdmluZ5SMBW90aGVylIwQcmVuZXdhYmxlX2VuZXJneZSM
DnNtYWxsX2J1c2luZXNzlIwIdmFjYXRpb26UjAd3ZWRkaW5nlGWGlGpfBAAAXZQojAJBS5SMAkFM
lIwCQVKUjAJBWpSMAkNBlIwCQ0+UjAJDVJSMAkRDlIwCREWUjAJGTJSMAkdBlIwCSEmUjAJJTJSM
AktTlIwCS1mUjAJMQZSMAk1BlIwCTUSUjAJNSZSMAk1OlIwCTU+UjAJNU5SMAk1UlIwCTkOUjAJO
SJSMAk5KlIwCTk2UjAJOVpSMAk5ZlIwCT0iUjAJPS5SMAk9SlIwCUEGUjAJSSZSMAlNDlIwCU0SU
jAJUTpSMAlRYlIwCVVSUjAJWQZSMAlZUlIwCV0GUjAJXSZSMAldWlIwCV1mUZYaUamIEAABLAoaU
amQEAABLAoaUamYEAABLAoaUamgEAABLAoaUamoEAABLAoaUamwEAABLAoaUam4EAABLAoaUanAE
AABLAoaUanIEAABLAoaUanQEAABLAoaUanYEAABdlGijYYaUangEAABLAoaUanoEAABLAoaUanwE
AABLAoaUan4EAABLAoaUaoAEAABLAoaUaoIEAABLAoaUaoQEAABLAoaUaoYEAABdlCiMBkFwci0x
MZSMBkFwci0xMpSMBkFwci0xM5SMBkFwci0xNJSMBkFwci0xNZSMBkF1Zy0xMZSMBkF1Zy0xMpSM
BkF1Zy0xM5SMBkF1Zy0xNJSMBkF1Zy0xNZSMBkRlYy0xMZSMBkRlYy0xMpSMBkRlYy0xM5SMBkRl
Yy0xNJSMBkRlYy0xNZSMBkZlYi0xMpSMBkZlYi0xM5SMBkZlYi0xNJSMBkZlYi0xNZSMBkphbi0x
MpSMBkphbi0xM5SMBkphbi0xNJSMBkphbi0xNZSMBkphbi0xNpSMBkp1bC0xMZSMBkp1bC0xMpSM
Bkp1bC0xM5SMBkp1bC0xNJSMBkp1bC0xNZSMBkp1bi0xMZSMBkp1bi0xMpSMBkp1bi0xM5SMBkp1
bi0xNJSMBkp1bi0xNZSMBk1hci0xMZSMBk1hci0xMpSMBk1hci0xM5SMBk1hci0xNJSMBk1hci0x
NZSMBk1heS0xMZSMBk1heS0xMpSMBk1heS0xM5SMBk1heS0xNJSMBk1heS0xNZSMBk5vdi0xMZSM
Bk5vdi0xMpSMBk5vdi0xM5SMBk5vdi0xNJSMBk5vdi0xNZSMBk9jdC0xMZSMBk9jdC0xMpSMBk9j
dC0xM5SMBk9jdC0xNJSMBk9jdC0xNZSMBlNlcC0xMZSMBlNlcC0xMpSMBlNlcC0xM5SMBlNlcC0x
NJSMBlNlcC0xNZRlhpRqiQQAAEsChpRqiwQAAF2UaowEAABhhpRqjgQAAEsChpRqkAQAAEsChpRq
kgQAAEsChpRqlAQAAEsChpRqlgQAAF2UapcEAABhhpRqmQQAAEsChpRqmwQAAEsChpRqnQQAAEsC
hpRqnwQAAEsChpRqoQQAAEsChpRqowQAAEsChpRqpQQAAEsChpRqpwQAAEsChpRqqQQAAEsChpRq
qwQAAEsChpRqrQQAAEsChpRqrwQAAEsChpRqsQQAAEsChpRqswQAAEsChpRqtQQAAEsChpRqtwQA
AEsChpRquQQAAEsChpRquwQAAF2UKGqXAgAAaMhlhpR0lGqaAgAAar4EAABLA4aUasAEAABLA4aU
hpRqogIAAClqowIAAF2UdWJldS4=
</properties>
		<properties node_id="1" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x07\x80\x00\x00\x00\xe9\x00\x00\r\x16\x00\x00\x02\xeb\x00\x00\x07\x80\x00\x00\x01\x0e\x00\x00\r\x16\x00\x00\x02\xeb\x00\x00\x00\x01\x00\x00\x00\x00\x07\x80\x00\x00\x07\x80\x00\x00\x01\x0e\x00\x00\r\x16\x00\x00\x02\xeb', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="2" format="pickle">gASVrgsAAAAAAAB9lCiMC2F1dG9fY29tbWl0lIiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBNzYXZl
ZFdpZGdldEdlb21ldHJ5lENCAdnQywADAAAAAAABAAAAEAAABQAAAAKvAAAAAgAAAC4AAAT/AAAC
rgAAAAAAAAAABQAAAAACAAAALgAABP8AAAKulIwJc2VsZWN0aW9ulE6MD3Zpc3VhbF9zZXR0aW5n
c5R9lIwFZ3JhcGiUfZSMC19fdmVyc2lvbl9flEsBjBBjb250ZXh0X3NldHRpbmdzlF2UKIwVb3Jh
bmdld2lkZ2V0LnNldHRpbmdzlIwHQ29udGV4dJSTlCmBlH2UKIwGdmFsdWVzlH2UKIwJYW5ub3Rf
dmFylE5K/v///4aUjAljb2xvcl92YXKUjAplbXBfbGVuZ3RolEtlhpSMCWdyb3VwX3ZhcpROSv7/
//+GlIwMc2VsZWN0ZWRfdmFylIwIaW50X3JhdGWUS2aGlGgIfZRoCksBdYwKYXR0cmlidXRlc5R9
lCiMCUZlYXR1cmUgMZRLAowKVW5uYW1lZDogMJRLAowCaWSUSwKMCW1lbWJlcl9pZJRLAowJbG9h
bl9hbW50lEsCjAtmdW5kZWRfYW1udJRLAowPZnVuZGVkX2FtbnRfaW52lEsCjAR0ZXJtlEsBaBxL
AowLaW5zdGFsbG1lbnSUSwKMBWdyYWRllEsBjAlzdWJfZ3JhZGWUSwFoF0sBjA5ob21lX293bmVy
c2hpcJRLAYwKYW5udWFsX2luY5RLAowTdmVyaWZpY2F0aW9uX3N0YXR1c5RLAYwHaXNzdWVfZJRL
AYwLbG9hbl9zdGF0dXOUSwGMCnB5bW50X3BsYW6USwGMB3B1cnBvc2WUSwGMCmFkZHJfc3RhdGWU
SwGMA2R0aZRLAowLZGVsaW5xXzJ5cnOUSwKMDmlucV9sYXN0XzZtdGhzlEsCjBZtdGhzX3NpbmNl
X2xhc3RfZGVsaW5xlEsCjBZtdGhzX3NpbmNlX2xhc3RfcmVjb3JklEsCjAhvcGVuX2FjY5RLAowH
cHViX3JlY5RLAowJcmV2b2xfYmFslEsCjApyZXZvbF91dGlslEsCjAl0b3RhbF9hY2OUSwKME2lu
aXRpYWxfbGlzdF9zdGF0dXOUSwGMCW91dF9wcm5jcJRLAowNb3V0X3BybmNwX2ludpRLAowLdG90
YWxfcHltbnSUSwKMD3RvdGFsX3B5bW50X2ludpRLAowPdG90YWxfcmVjX3BybmNwlEsCjA10b3Rh
bF9yZWNfaW50lEsCjBJ0b3RhbF9yZWNfbGF0ZV9mZWWUSwKMCnJlY292ZXJpZXOUSwKMF2NvbGxl
Y3Rpb25fcmVjb3ZlcnlfZmVllEsCjAxsYXN0X3B5bW50X2SUSwGMD2xhc3RfcHltbnRfYW1udJRL
AowMbmV4dF9weW1udF9klEsBjBJsYXN0X2NyZWRpdF9wdWxsX2SUSwGMGmNvbGxlY3Rpb25zXzEy
X210aHNfZXhfbWVklEsBjBttdGhzX3NpbmNlX2xhc3RfbWFqb3JfZGVyb2eUSwKMC3BvbGljeV9j
b2RllEsBjBBhcHBsaWNhdGlvbl90eXBllEsBjBBhbm51YWxfaW5jX2pvaW50lEsCjAlkdGlfam9p
bnSUSwKMGXZlcmlmaWNhdGlvbl9zdGF0dXNfam9pbnSUSwKMDmFjY19ub3dfZGVsaW5xlEsBjAx0
b3RfY29sbF9hbXSUSwKMC3RvdF9jdXJfYmFslEsCjAtvcGVuX2FjY182bZRLAowKb3Blbl9pbF82
bZRLAowLb3Blbl9pbF8xMm2USwKMC29wZW5faWxfMjRtlEsCjBJtdGhzX3NpbmNlX3JjbnRfaWyU
SwKMDHRvdGFsX2JhbF9pbJRLAowHaWxfdXRpbJRLAowLb3Blbl9ydl8xMm2USwKMC29wZW5fcnZf
MjRtlEsCjAptYXhfYmFsX2JjlEsCjAhhbGxfdXRpbJRLAowQdG90YWxfcmV2X2hpX2xpbZRLAowG
aW5xX2ZplEsCjAt0b3RhbF9jdV90bJRLAowMaW5xX2xhc3RfMTJtlEsCjA5lbXBfbGVuZ3RoX2lu
dJRLAowVZWFybGllc3RfY3JfbGluZV9kYXRllEsEjBttdGhzX3NpbmNlX2VhcmxpZXN0X2NyX2xp
bmWUSwKMCHRlcm1faW50lEsCjAxpc3N1ZV9kX2RhdGWUSwSMEm10aHNfc2luY2VfaXNzdWVfZJRL
AowIZ29vZF9iYWSUSwF1jAVtZXRhc5R9lCiMCWVtcF90aXRsZZRLA4wDdXJslEsDjARkZXNjlEsD
jAV0aXRsZZRLA4wIemlwX2NvZGWUSwOMEGVhcmxpZXN0X2NyX2xpbmWUSwN1dWJoDymBlH2UKGgS
fZQojAlhbm5vdF92YXKUTkr+////hpSMCWNvbG9yX3ZhcpSMCmVtcF9sZW5ndGiUS2WGlIwJZ3Jv
dXBfdmFylE5K/v///4aUjAxzZWxlY3RlZF92YXKUjAhpbnRfcmF0ZZRLZoaUjAVncmFwaJR9lGgK
SwF1aB99lCiMCWxvYW5fYW1udJRLAowLZnVuZGVkX2FtbnSUSwKMBHRlcm2USwGMCGludF9yYXRl
lEsCjAtpbnN0YWxsbWVudJRLAowFZ3JhZGWUSwGMCXN1Yl9ncmFkZZRLAYwKZW1wX2xlbmd0aJRL
AYwOaG9tZV9vd25lcnNoaXCUSwGMCmFubnVhbF9pbmOUSwKME3ZlcmlmaWNhdGlvbl9zdGF0dXOU
SwGMB2lzc3VlX2SUSwGMC2xvYW5fc3RhdHVzlEsBjAdwdXJwb3NllEsBjAphZGRyX3N0YXRllEsB
jANkdGmUSwKMC2RlbGlucV8yeXJzlEsCjA5pbnFfbGFzdF82bXRoc5RLAowWbXRoc19zaW5jZV9s
YXN0X2RlbGlucZRLAowWbXRoc19zaW5jZV9sYXN0X3JlY29yZJRLAowIb3Blbl9hY2OUSwKMB3B1
Yl9yZWOUSwKMCXJldm9sX2JhbJRLAowKcmV2b2xfdXRpbJRLAowJdG90YWxfYWNjlEsCjBNpbml0
aWFsX2xpc3Rfc3RhdHVzlEsBjAlvdXRfcHJuY3CUSwKMC3RvdGFsX3B5bW50lEsCjA90b3RhbF9y
ZWNfcHJuY3CUSwKMDXRvdGFsX3JlY19pbnSUSwKMEnRvdGFsX3JlY19sYXRlX2ZlZZRLAowKcmVj
b3Zlcmllc5RLAowXY29sbGVjdGlvbl9yZWNvdmVyeV9mZWWUSwKMDGxhc3RfcHltbnRfZJRLAYwP
bGFzdF9weW1udF9hbW50lEsCjBpjb2xsZWN0aW9uc18xMl9tdGhzX2V4X21lZJRLAYwbbXRoc19z
aW5jZV9sYXN0X21ham9yX2Rlcm9nlEsCjBBhbm51YWxfaW5jX2pvaW50lEsCjAlkdGlfam9pbnSU
SwKMGXZlcmlmaWNhdGlvbl9zdGF0dXNfam9pbnSUSwKMDmFjY19ub3dfZGVsaW5xlEsBjAx0b3Rf
Y29sbF9hbXSUSwKMC3RvdF9jdXJfYmFslEsCjAtvcGVuX2FjY182bZRLAowKb3Blbl9pbF82bZRL
AowLb3Blbl9pbF8xMm2USwKMC29wZW5faWxfMjRtlEsCjBJtdGhzX3NpbmNlX3JjbnRfaWyUSwKM
DHRvdGFsX2JhbF9pbJRLAowHaWxfdXRpbJRLAowLb3Blbl9ydl8xMm2USwKMC29wZW5fcnZfMjRt
lEsCjAptYXhfYmFsX2JjlEsCjAhhbGxfdXRpbJRLAowQdG90YWxfcmV2X2hpX2xpbZRLAowGaW5x
X2ZplEsCjAt0b3RhbF9jdV90bJRLAowMaW5xX2xhc3RfMTJtlEsCjAhnb29kX2JhZJRLAXVobH2U
KIwEZGVzY5RLA4wQZWFybGllc3RfY3JfbGluZZRLA3V1YmV1Lg==
</properties>
		<properties node_id="3" format="pickle">gASV6gsAAAAAAAB9lCiMCmF1dG9fYXBwbHmUiIwSY29udHJvbEFyZWFWaXNpYmxllIiMEGN1bXVs
YXRpdmVfZGlzdHKUiYwTZml0dGVkX2Rpc3RyaWJ1dGlvbpRLB4wJaGlkZV9iYXJzlImMDWtkZV9z
bW9vdGhpbmeUSwqME3NhdmVkV2lkZ2V0R2VvbWV0cnmUQ0IB2dDLAAMAAAAAAAAAAAAgAAAHfwAA
BDcAAAKhAAABhwAABSAAAANmAAAAAAIAAAAHgAAAAAAAAABFAAAHfwAABDeUjApzaG93X3Byb2Jz
lImMDHNvcnRfYnlfZnJlcZSIjA9zdGFja2VkX2NvbHVtbnOUiYwLX192ZXJzaW9uX1+USwKMEGNv
bnRleHRfc2V0dGluZ3OUXZQojBVvcmFuZ2V3aWRnZXQuc2V0dGluZ3OUjAdDb250ZXh0lJOUKYGU
fZQojAZ2YWx1ZXOUfZQojARjdmFylIwIZ29vZF9iYWSUS2WGlIwObnVtYmVyX29mX2JpbnOUSwFK
/v///4aUjA1zZWxlY3RlZF9iYXJzlI+USv7///+GlIwDdmFylIwIaW50X3JhdGWUS2aGlGgMSwJ1
jAphdHRyaWJ1dGVzlH2UKIwJRmVhdHVyZSAxlEsCjApVbm5hbWVkOiAwlEsCjAJpZJRLAowJbWVt
YmVyX2lklEsCjAlsb2FuX2FtbnSUSwKMC2Z1bmRlZF9hbW50lEsCjA9mdW5kZWRfYW1udF9pbnaU
SwKMBHRlcm2USwFoH0sCjAtpbnN0YWxsbWVudJRLAowFZ3JhZGWUSwGMCXN1Yl9ncmFkZZRLAYwK
ZW1wX2xlbmd0aJRLAYwOaG9tZV9vd25lcnNoaXCUSwGMCmFubnVhbF9pbmOUSwKME3ZlcmlmaWNh
dGlvbl9zdGF0dXOUSwGMB2lzc3VlX2SUSwGMC2xvYW5fc3RhdHVzlEsBjApweW1udF9wbGFulEsB
jAdwdXJwb3NllEsBjAphZGRyX3N0YXRllEsBjANkdGmUSwKMC2RlbGlucV8yeXJzlEsCjA5pbnFf
bGFzdF82bXRoc5RLAowWbXRoc19zaW5jZV9sYXN0X2RlbGlucZRLAowWbXRoc19zaW5jZV9sYXN0
X3JlY29yZJRLAowIb3Blbl9hY2OUSwKMB3B1Yl9yZWOUSwKMCXJldm9sX2JhbJRLAowKcmV2b2xf
dXRpbJRLAowJdG90YWxfYWNjlEsCjBNpbml0aWFsX2xpc3Rfc3RhdHVzlEsBjAlvdXRfcHJuY3CU
SwKMDW91dF9wcm5jcF9pbnaUSwKMC3RvdGFsX3B5bW50lEsCjA90b3RhbF9weW1udF9pbnaUSwKM
D3RvdGFsX3JlY19wcm5jcJRLAowNdG90YWxfcmVjX2ludJRLAowSdG90YWxfcmVjX2xhdGVfZmVl
lEsCjApyZWNvdmVyaWVzlEsCjBdjb2xsZWN0aW9uX3JlY292ZXJ5X2ZlZZRLAowMbGFzdF9weW1u
dF9klEsBjA9sYXN0X3B5bW50X2FtbnSUSwKMDG5leHRfcHltbnRfZJRLAYwSbGFzdF9jcmVkaXRf
cHVsbF9klEsBjBpjb2xsZWN0aW9uc18xMl9tdGhzX2V4X21lZJRLAYwbbXRoc19zaW5jZV9sYXN0
X21ham9yX2Rlcm9nlEsCjAtwb2xpY3lfY29kZZRLAYwQYXBwbGljYXRpb25fdHlwZZRLAYwQYW5u
dWFsX2luY19qb2ludJRLAowJZHRpX2pvaW50lEsCjBl2ZXJpZmljYXRpb25fc3RhdHVzX2pvaW50
lEsCjA5hY2Nfbm93X2RlbGlucZRLAYwMdG90X2NvbGxfYW10lEsCjAt0b3RfY3VyX2JhbJRLAowL
b3Blbl9hY2NfNm2USwKMCm9wZW5faWxfNm2USwKMC29wZW5faWxfMTJtlEsCjAtvcGVuX2lsXzI0
bZRLAowSbXRoc19zaW5jZV9yY250X2lslEsCjAx0b3RhbF9iYWxfaWyUSwKMB2lsX3V0aWyUSwKM
C29wZW5fcnZfMTJtlEsCjAtvcGVuX3J2XzI0bZRLAowKbWF4X2JhbF9iY5RLAowIYWxsX3V0aWyU
SwKMEHRvdGFsX3Jldl9oaV9saW2USwKMBmlucV9maZRLAowLdG90YWxfY3VfdGyUSwKMDGlucV9s
YXN0XzEybZRLAowOZW1wX2xlbmd0aF9pbnSUSwKMFWVhcmxpZXN0X2NyX2xpbmVfZGF0ZZRLBIwb
bXRoc19zaW5jZV9lYXJsaWVzdF9jcl9saW5llEsCjAh0ZXJtX2ludJRLAowMaXNzdWVfZF9kYXRl
lEsEjBJtdGhzX3NpbmNlX2lzc3VlX2SUSwJoF0sBdYwFbWV0YXOUfZQojAllbXBfdGl0bGWUSwOM
A3VybJRLA4wEZGVzY5RLA4wFdGl0bGWUSwOMCHppcF9jb2RllEsDjBBlYXJsaWVzdF9jcl9saW5l
lEsDdXViaBEpgZR9lChoFH2UKIwEY3ZhcpSMCGdvb2RfYmFklEtlhpSMDm51bWJlcl9vZl9iaW5z
lEsASv7///+GlIwNc2VsZWN0ZWRfYmFyc5SPlEr+////hpSMA3ZhcpSMCmVtcF9sZW5ndGiUS2WG
lGgMSwJ1aCF9lCiMCWxvYW5fYW1udJRLAowLZnVuZGVkX2FtbnSUSwKMBHRlcm2USwGMCGludF9y
YXRllEsCjAtpbnN0YWxsbWVudJRLAowFZ3JhZGWUSwGMCXN1Yl9ncmFkZZRLAYwKZW1wX2xlbmd0
aJRLAYwOaG9tZV9vd25lcnNoaXCUSwGMCmFubnVhbF9pbmOUSwKME3ZlcmlmaWNhdGlvbl9zdGF0
dXOUSwGMB2lzc3VlX2SUSwGMC2xvYW5fc3RhdHVzlEsBjAdwdXJwb3NllEsBjAphZGRyX3N0YXRl
lEsBjANkdGmUSwKMC2RlbGlucV8yeXJzlEsCjA5pbnFfbGFzdF82bXRoc5RLAowWbXRoc19zaW5j
ZV9sYXN0X2RlbGlucZRLAowWbXRoc19zaW5jZV9sYXN0X3JlY29yZJRLAowIb3Blbl9hY2OUSwKM
B3B1Yl9yZWOUSwKMCXJldm9sX2JhbJRLAowKcmV2b2xfdXRpbJRLAowJdG90YWxfYWNjlEsCjBNp
bml0aWFsX2xpc3Rfc3RhdHVzlEsBjAlvdXRfcHJuY3CUSwKMC3RvdGFsX3B5bW50lEsCjA90b3Rh
bF9yZWNfcHJuY3CUSwKMDXRvdGFsX3JlY19pbnSUSwKMEnRvdGFsX3JlY19sYXRlX2ZlZZRLAowK
cmVjb3Zlcmllc5RLAowXY29sbGVjdGlvbl9yZWNvdmVyeV9mZWWUSwKMDGxhc3RfcHltbnRfZJRL
AYwPbGFzdF9weW1udF9hbW50lEsCjBpjb2xsZWN0aW9uc18xMl9tdGhzX2V4X21lZJRLAYwbbXRo
c19zaW5jZV9sYXN0X21ham9yX2Rlcm9nlEsCjBBhbm51YWxfaW5jX2pvaW50lEsCjAlkdGlfam9p
bnSUSwKMGXZlcmlmaWNhdGlvbl9zdGF0dXNfam9pbnSUSwKMDmFjY19ub3dfZGVsaW5xlEsBjAx0
b3RfY29sbF9hbXSUSwKMC3RvdF9jdXJfYmFslEsCjAtvcGVuX2FjY182bZRLAowKb3Blbl9pbF82
bZRLAowLb3Blbl9pbF8xMm2USwKMC29wZW5faWxfMjRtlEsCjBJtdGhzX3NpbmNlX3JjbnRfaWyU
SwKMDHRvdGFsX2JhbF9pbJRLAowHaWxfdXRpbJRLAowLb3Blbl9ydl8xMm2USwKMC29wZW5fcnZf
MjRtlEsCjAptYXhfYmFsX2JjlEsCjAhhbGxfdXRpbJRLAowQdG90YWxfcmV2X2hpX2xpbZRLAowG
aW5xX2ZplEsCjAt0b3RhbF9jdV90bJRLAowMaW5xX2xhc3RfMTJtlEsCjAhnb29kX2JhZJRLAXVo
bn2UKIwEZGVzY5RLA4wQZWFybGllc3RfY3JfbGluZZRLA3V1YmV1Lg==
</properties>
		<properties node_id="4" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 3, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xff\xff\xff\xff\xff\xf9\x00\x00\x05\x00\x00\x00\x02\xa0\x00\x00\x01\xae\x00\x00\x00\xc5\x00\x00\x05\x80\x00\x00\x03\x9b\x00\x00\x00\x00\x02\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x04\xff\x00\x00\x02\x9f', 'scriptLibrary': [{'name': 'Table from numpy', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': 'import matplotlib.pyplot as plt\nimport pandas as pd\nfrom Orange.data import Table, Domain, ContinuousVariable\n\n# Convertendo os dados de entrada do Orange para um DataFrame do Pandas\ndata = pd.DataFrame(in_data.X, columns=[var.name for var in in_data.domain.attributes])\ntarget = pd.Series(in_data.Y, name=in_data.domain.class_var.name)\n\n# Verifique se os dados possuem as variáveis "grade", "Good", "Bad" e "WoE"\nif \'grade\' in data.columns and \'WoE\' in data.columns and \'Good\' in data.columns and \'Bad\' in data.columns:\n    \n    # Definir as categorias (grade), WoE e as taxas de inadimplência (Good e Bad)\n    categories = data[\'grade\']\n    woe = data[\'WoE\'].astype(\'float\')\n    good_row = data[\'Good\'].astype(\'float\')  # Substituir pela sua variável de bons pagadores\n    bad_row = data[\'Bad\'].astype(\'float\')  # Substituir pela sua variável de maus pagadores\n\n    # Criação da figura com subplots\n    fig, ax = plt.subplots(1, 2, figsize=(12, 6))\n\n    # Gráfico de barras empilhadas para taxa de inadimplência\n    bad_bars = ax[0].barh(y=categories, width=bad_row, color=\'#8d0801\', label=\'Bad\')\n    good_bars = ax[0].barh(y=categories, width=good_row, left=bad_row, color=\'#8a817c\', label=\'Good\')\n\n    # Anotando valores percentuais dentro de cada barra\n    for good_bar, bad_bar, good_rate, bad_rate in zip(good_bars, bad_bars, good_row, bad_row):\n        x_position_good = good_bar.get_x() + good_bar.get_width() / 2\n        x_position_bad = bad_bar.get_x() + bad_bar.get_width() / 2  \n        y_position = good_bar.get_y() + good_bar.get_height() / 2\n\n        ax[0].text(x_position_good, y_position, f\'{good_rate:.2f}%\', ha=\'center\', va=\'center\', color=\'white\', fontsize=10)\n        ax[0].text(x_position_bad, y_position, f\'{bad_rate:.2f}%\', ha=\'center\', va=\'center\', color=\'white\', fontsize=10)\n\n    ax[0].set_title(\'Default rate by Grade\')\n    ax[0].invert_yaxis()\n    ax[0].grid(False)\n    ax[0].legend(bbox_to_anchor=(-0.2, 1.1), loc=\'upper left\')\n\n    # Gráfico de linha para WoE\n    ax[1].plot(categories, woe, marker=\'o\', linestyle=\'--\')\n    ax[1].set_title(\'WoE by Grade\')\n    ax[1].set_xticks(categories.unique())\n    \n    plt.tight_layout()\n    plt.show()\n\n# Convertendo o DataFrame de volta para uma tabela do Orange\ndomain = Domain([ContinuousVariable(col) for col in data.columns])\nout_data = Table.from_numpy(domain, data.to_numpy())\n', 'filename': None}], 'scriptText': 'import matplotlib.pyplot as plt\nimport pandas as pd\nimport numpy as np\nfrom Orange.data import Table, Domain, ContinuousVariable, DiscreteVariable\n\ndef plot_woe_bad_rate_by_variable(in_data, target_variable=\'purpose\', outcome_variable=None, figsize=(20, 12)):\n    try:\n        # Get the purpose variable from the domain\n        purpose_var = in_data.domain[target_variable]\n        if not isinstance(purpose_var, DiscreteVariable):\n            raise ValueError(f"The \'{target_variable}\' variable must be a DiscreteVariable.")\n        \n        # Create a dictionary to map numeric values to purpose names\n        purpose_mapping = {i: value for i, value in enumerate(purpose_var.values)}\n        \n        # Print purpose mapping for verification\n        print("Purpose Mapping:")\n        for key, value in purpose_mapping.items():\n            print(f"{key}: {value}")\n        \n        # Convert Orange data to pandas DataFrame\n        data = pd.DataFrame({\n            var.name: in_data.get_column(var.name)\n            for var in in_data.domain.variables\n        })\n        \n        # Print the first few rows of the DataFrame for verification\n        print("\\nFirst few rows of the DataFrame:")\n        print(data.head())\n        \n        # If outcome_variable is not specified or not in columns, use the last column\n        if outcome_variable is None or outcome_variable not in data.columns:\n            outcome_variable = data.columns[-1]\n        \n        print(f"\\nOutcome variable: {outcome_variable}")\n        \n        # Create \'Good\' and \'Bad\' columns based on the outcome variable\n        median = data[outcome_variable].median()\n        data[\'Good\'] = (data[outcome_variable] &gt;= median).astype(int)\n        data[\'Bad\'] = (data[outcome_variable] &lt; median).astype(int)\n        \n        # Calculate WoE and other metrics\n        grouped = data.groupby(target_variable).agg({\n            \'Good\': \'sum\',\n            \'Bad\': \'sum\'\n        }).reset_index()\n        \n        grouped[\'Total\'] = grouped[\'Good\'] + grouped[\'Bad\']\n        grouped[\'GoodRate\'] = grouped[\'Good\'] / grouped[\'Total\']\n        grouped[\'BadRate\'] = grouped[\'Bad\'] / grouped[\'Total\']\n        \n        total_good = grouped[\'Good\'].sum()\n        total_bad = grouped[\'Bad\'].sum()\n        \n        grouped[\'WoE\'] = np.log((grouped[\'GoodRate\'] / (total_good / grouped[\'Total\'].sum())) / \n                                (grouped[\'BadRate\'] / (total_bad / grouped[\'Total\'].sum())))\n        \n        # Map numeric purposes to their descriptions\n        grouped[\'purpose_description\'] = grouped[target_variable].map(purpose_mapping)\n        \n        # Print grouped data for verification\n        print("\\nGrouped data:")\n        print(grouped)\n        \n        # Sort by WoE for better visualization\n        grouped = grouped.sort_values(\'WoE\')\n        \n        purposes = grouped[\'purpose_description\']\n        woe = grouped[\'WoE\']\n        good_rate = grouped[\'GoodRate\'] * 100\n        bad_rate = grouped[\'BadRate\'] * 100\n        \n        # Create the plot\n        fig, (ax1, ax2) = plt.subplots(1, 2, figsize=figsize)\n        \n        # Stacked bar chart\n        ax1.barh(purposes, bad_rate, label=\'Bad\', color=\'#FF9999\')\n        ax1.barh(purposes, good_rate, left=bad_rate, label=\'Good\', color=\'#66B2FF\')\n        \n        ax1.set_title(\'Good/Bad Rate by Purpose\')\n        ax1.set_xlabel(\'Percentage\')\n        ax1.set_ylabel(\'Purpose\')\n        ax1.legend(loc=\'lower right\')\n        \n        # Add percentage labels\n        for i, (bad, good) in enumerate(zip(bad_rate, good_rate)):\n            ax1.text(bad/2, i, f\'{bad:.1f}%\', va=\'center\', ha=\'center\')\n            ax1.text(bad + good/2, i, f\'{good:.1f}%\', va=\'center\', ha=\'center\')\n        \n        # WoE chart\n        ax2.plot(woe, purposes, marker=\'o\')\n        ax2.set_title(\'Weight of Evidence (WoE) by Purpose\')\n        ax2.set_xlabel(\'WoE\')\n        ax2.set_ylabel(\'Purpose\')\n        ax2.axvline(x=0, color=\'r\', linestyle=\'--\')\n        \n        # Add WoE values as text\n        for i, (purpose, w) in enumerate(zip(purposes, woe)):\n            ax2.text(w, i, f\'{w:.2f}\', va=\'center\', ha=\'left\' if w &gt;= 0 else \'right\')\n        \n        plt.tight_layout()\n        plt.show()\n\n        # Create a new Orange table with the plot data\n        domain = Domain([DiscreteVariable(target_variable, values=purposes.tolist()),\n                         ContinuousVariable("WoE"),\n                         ContinuousVariable("Good_Rate"),\n                         ContinuousVariable("Bad_Rate")])\n        out_data = Table.from_numpy(domain, \n                                    X=np.column_stack((\n                                        grouped[target_variable],  # Use original numeric values\n                                        woe,\n                                        good_rate,\n                                        bad_rate\n                                    )))\n        return out_data\n    \n    except Exception as e:\n        print(f"Error creating the plot: {str(e)}")\n        return None\n\n# Usage of the function\nif in_data is not None:\n    out_data = plot_woe_bad_rate_by_variable(in_data, target_variable=\'purpose\', outcome_variable=None, figsize=(20, 12))\nelse:\n    print("No input data provided.")\n    out_data = None', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xac\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="5" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 3, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xf8\x7f\xff\xff\xff\xca\x00\x00\x00\x00\x00\x00\x03\xd0\xff\xff\xf8\x80\xff\xff\xff\xdf\xff\xff\xff\xff\x00\x00\x03\xcf\x00\x00\x00\x01\x02\x00\x00\x00\x07\x80\xff\xff\xf8\x80\xff\xff\xff\xdf\xff\xff\xff\xff\x00\x00\x03\xcf', 'scriptLibrary': [{'name': 'Table from numpy', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': 'import matplotlib.pyplot as plt\nimport pandas as pd\nfrom Orange.data import Table, Domain, ContinuousVariable\n\n# Convertendo os dados de entrada do Orange para um DataFrame do Pandas\ndata = pd.DataFrame(in_data.X, columns=[var.name for var in in_data.domain.attributes])\ntarget = pd.Series(in_data.Y, name=in_data.domain.class_var.name)\n\n# Verifique se os dados possuem as variáveis "grade", "Good", "Bad" e "WoE"\nif \'grade\' in data.columns and \'WoE\' in data.columns and \'Good\' in data.columns and \'Bad\' in data.columns:\n    \n    # Definir as categorias (grade), WoE e as taxas de inadimplência (Good e Bad)\n    categories = data[\'grade\']\n    woe = data[\'WoE\'].astype(\'float\')\n    good_row = data[\'Good\'].astype(\'float\')  # Substituir pela sua variável de bons pagadores\n    bad_row = data[\'Bad\'].astype(\'float\')  # Substituir pela sua variável de maus pagadores\n\n    # Criação da figura com subplots\n    fig, ax = plt.subplots(1, 2, figsize=(12, 6))\n\n    # Gráfico de barras empilhadas para taxa de inadimplência\n    bad_bars = ax[0].barh(y=categories, width=bad_row, color=\'#8d0801\', label=\'Bad\')\n    good_bars = ax[0].barh(y=categories, width=good_row, left=bad_row, color=\'#8a817c\', label=\'Good\')\n\n    # Anotando valores percentuais dentro de cada barra\n    for good_bar, bad_bar, good_rate, bad_rate in zip(good_bars, bad_bars, good_row, bad_row):\n        x_position_good = good_bar.get_x() + good_bar.get_width() / 2\n        x_position_bad = bad_bar.get_x() + bad_bar.get_width() / 2  \n        y_position = good_bar.get_y() + good_bar.get_height() / 2\n\n        ax[0].text(x_position_good, y_position, f\'{good_rate:.2f}%\', ha=\'center\', va=\'center\', color=\'white\', fontsize=10)\n        ax[0].text(x_position_bad, y_position, f\'{bad_rate:.2f}%\', ha=\'center\', va=\'center\', color=\'white\', fontsize=10)\n\n    ax[0].set_title(\'Default rate by Grade\')\n    ax[0].invert_yaxis()\n    ax[0].grid(False)\n    ax[0].legend(bbox_to_anchor=(-0.2, 1.1), loc=\'upper left\')\n\n    # Gráfico de linha para WoE\n    ax[1].plot(categories, woe, marker=\'o\', linestyle=\'--\')\n    ax[1].set_title(\'WoE by Grade\')\n    ax[1].set_xticks(categories.unique())\n    \n    plt.tight_layout()\n    plt.show()\n\n# Convertendo o DataFrame de volta para uma tabela do Orange\ndomain = Domain([ContinuousVariable(col) for col in data.columns])\nout_data = Table.from_numpy(domain, data.to_numpy())\n', 'filename': None}], 'scriptText': 'import matplotlib.pyplot as plt\nimport pandas as pd\nimport numpy as np\nfrom Orange.data import Table, Domain, ContinuousVariable, DiscreteVariable\n\ndef plot_woe_bad_rate_by_variable(in_data, target_variable, outcome_variable=None, figsize=(20, 12)):\n    try:\n        # Get the target variable from the domain\n        target_var = in_data.domain[target_variable]\n        if not isinstance(target_var, DiscreteVariable):\n            raise ValueError(f"The \'{target_variable}\' variable must be a DiscreteVariable.")\n        \n        # Create a dictionary to map numeric values to target names\n        target_mapping = {i: value for i, value in enumerate(target_var.values)}\n        \n        # Print target mapping for verification\n        print(f"{target_variable} Mapping:")\n        for key, value in target_mapping.items():\n            print(f"{key}: {value}")\n        \n        # Convert Orange data to pandas DataFrame\n        data = pd.DataFrame({\n            var.name: in_data.get_column(var.name)\n            for var in in_data.domain.variables\n        })\n        \n        # Print the first few rows of the DataFrame for verification\n        print("\\nFirst few rows of the DataFrame:")\n        print(data.head())\n        \n        # If outcome_variable is not specified or not in columns, use the last column\n        if outcome_variable is None or outcome_variable not in data.columns:\n            outcome_variable = data.columns[-1]\n        \n        print(f"\\nOutcome variable: {outcome_variable}")\n        \n        # Create \'Good\' and \'Bad\' columns based on the outcome variable\n        median = data[outcome_variable].median()\n        data[\'Good\'] = (data[outcome_variable] &gt;= median).astype(int)\n        data[\'Bad\'] = (data[outcome_variable] &lt; median).astype(int)\n        \n        # Calculate WoE and other metrics\n        grouped = data.groupby(target_variable).agg({\n            \'Good\': \'sum\',\n            \'Bad\': \'sum\'\n        }).reset_index()\n        \n        grouped[\'Total\'] = grouped[\'Good\'] + grouped[\'Bad\']\n        grouped[\'GoodRate\'] = grouped[\'Good\'] / grouped[\'Total\']\n        grouped[\'BadRate\'] = grouped[\'Bad\'] / grouped[\'Total\']\n        \n        total_good = grouped[\'Good\'].sum()\n        total_bad = grouped[\'Bad\'].sum()\n        \n        grouped[\'WoE\'] = np.log((grouped[\'GoodRate\'] / (total_good / grouped[\'Total\'].sum())) / \n                                (grouped[\'BadRate\'] / (total_bad / grouped[\'Total\'].sum())))\n        \n        # Map numeric targets to their descriptions\n        grouped[\'target_description\'] = grouped[target_variable].map(target_mapping)\n        \n        # Print grouped data for verification\n        print("\\nGrouped data:")\n        print(grouped)\n        \n        # Sort by WoE for better visualization\n        grouped = grouped.sort_values(\'WoE\')\n        \n        targets = grouped[\'target_description\']\n        woe = grouped[\'WoE\']\n        good_rate = grouped[\'GoodRate\'] * 100\n        bad_rate = grouped[\'BadRate\'] * 100\n        \n        # Create the plot\n        fig, (ax1, ax2) = plt.subplots(1, 2, figsize=figsize)\n        \n        # Stacked bar chart\n        ax1.barh(targets, bad_rate, label=\'Bad\', color=\'#FF9999\')\n        ax1.barh(targets, good_rate, left=bad_rate, label=\'Good\', color=\'#66B2FF\')\n        \n        ax1.set_title(f\'Good/Bad Rate by {target_variable.capitalize()}\')\n        ax1.set_xlabel(\'Percentage\')\n        ax1.set_ylabel(target_variable.capitalize())\n        ax1.legend(loc=\'lower right\')\n        \n        # Add percentage labels\n        for i, (bad, good) in enumerate(zip(bad_rate, good_rate)):\n            ax1.text(bad/2, i, f\'{bad:.1f}%\', va=\'center\', ha=\'center\')\n            ax1.text(bad + good/2, i, f\'{good:.1f}%\', va=\'center\', ha=\'center\')\n        \n        # WoE chart\n        ax2.plot(woe, targets, marker=\'o\')\n        ax2.set_title(f\'Weight of Evidence (WoE) by {target_variable.capitalize()}\')\n        ax2.set_xlabel(\'WoE\')\n        ax2.set_ylabel(target_variable.capitalize())\n        ax2.axvline(x=0, color=\'r\', linestyle=\'--\')\n        \n        # Add WoE values as text\n        for i, (target, w) in enumerate(zip(targets, woe)):\n            ax2.text(w, i, f\'{w:.2f}\', va=\'center\', ha=\'left\' if w &gt;= 0 else \'right\')\n        \n        plt.tight_layout()\n        plt.show()\n\n        # Create a new Orange table with the plot data\n        domain = Domain([DiscreteVariable(target_variable, values=targets.tolist()),\n                         ContinuousVariable("WoE"),\n                         ContinuousVariable("Good_Rate"),\n                         ContinuousVariable("Bad_Rate")])\n        out_data = Table.from_numpy(domain, \n                                    X=np.column_stack((\n                                        grouped[target_variable],  # Use original numeric values\n                                        woe,\n                                        good_rate,\n                                        bad_rate\n                                    )))\n        return out_data\n    \n    except Exception as e:\n        print(f"Error creating the plot: {str(e)}")\n        return None\n\n# Example usage of the function\nif in_data is not None:\n     out_data = plot_woe_bad_rate_by_variable(in_data, target_variable=\'grade\', outcome_variable=None, figsize=(20, 12))\n# else:\n#     print("No input data provided.")\n#     out_data = None', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xac\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="6" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 3, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x07\x80\x00\x00\x00\x00\x00\x00\x0e\xff\x00\x00\x047\x00\x00\x07\x80\x00\x00\x00%\x00\x00\x0e\xff\x00\x00\x04\x15\x00\x00\x00\x01\x02\x00\x00\x00\x07\x80\x00\x00\x07\x80\x00\x00\x00%\x00\x00\x0e\xff\x00\x00\x047', 'scriptLibrary': [{'name': 'Table from numpy', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': 'import matplotlib.pyplot as plt\nimport pandas as pd\nfrom Orange.data import Table, Domain, ContinuousVariable\n\n# Convertendo os dados de entrada do Orange para um DataFrame do Pandas\ndata = pd.DataFrame(in_data.X, columns=[var.name for var in in_data.domain.attributes])\ntarget = pd.Series(in_data.Y, name=in_data.domain.class_var.name)\n\n# Verifique se os dados possuem as variáveis "grade", "Good", "Bad" e "WoE"\nif \'grade\' in data.columns and \'WoE\' in data.columns and \'Good\' in data.columns and \'Bad\' in data.columns:\n    \n    # Definir as categorias (grade), WoE e as taxas de inadimplência (Good e Bad)\n    categories = data[\'grade\']\n    woe = data[\'WoE\'].astype(\'float\')\n    good_row = data[\'Good\'].astype(\'float\')  # Substituir pela sua variável de bons pagadores\n    bad_row = data[\'Bad\'].astype(\'float\')  # Substituir pela sua variável de maus pagadores\n\n    # Criação da figura com subplots\n    fig, ax = plt.subplots(1, 2, figsize=(12, 6))\n\n    # Gráfico de barras empilhadas para taxa de inadimplência\n    bad_bars = ax[0].barh(y=categories, width=bad_row, color=\'#8d0801\', label=\'Bad\')\n    good_bars = ax[0].barh(y=categories, width=good_row, left=bad_row, color=\'#8a817c\', label=\'Good\')\n\n    # Anotando valores percentuais dentro de cada barra\n    for good_bar, bad_bar, good_rate, bad_rate in zip(good_bars, bad_bars, good_row, bad_row):\n        x_position_good = good_bar.get_x() + good_bar.get_width() / 2\n        x_position_bad = bad_bar.get_x() + bad_bar.get_width() / 2  \n        y_position = good_bar.get_y() + good_bar.get_height() / 2\n\n        ax[0].text(x_position_good, y_position, f\'{good_rate:.2f}%\', ha=\'center\', va=\'center\', color=\'white\', fontsize=10)\n        ax[0].text(x_position_bad, y_position, f\'{bad_rate:.2f}%\', ha=\'center\', va=\'center\', color=\'white\', fontsize=10)\n\n    ax[0].set_title(\'Default rate by Grade\')\n    ax[0].invert_yaxis()\n    ax[0].grid(False)\n    ax[0].legend(bbox_to_anchor=(-0.2, 1.1), loc=\'upper left\')\n\n    # Gráfico de linha para WoE\n    ax[1].plot(categories, woe, marker=\'o\', linestyle=\'--\')\n    ax[1].set_title(\'WoE by Grade\')\n    ax[1].set_xticks(categories.unique())\n    \n    plt.tight_layout()\n    plt.show()\n\n# Convertendo o DataFrame de volta para uma tabela do Orange\ndomain = Domain([ContinuousVariable(col) for col in data.columns])\nout_data = Table.from_numpy(domain, data.to_numpy())\n', 'filename': None}], 'scriptText': 'import Orange\nimport matplotlib.pyplot as plt\n\n# Função para criar o gráfico de barras com porcentagens\ndef criar_grafico_inadimplencia(data):\n    # Assumindo que \'good_bad\' é uma coluna discreta onde 0 indica inadimplente e 1 indica adimplente\n    inadimplentes = sum(1 for d in data if d[\'good_bad\'] == 0)\n    adimplentes = sum(1 for d in data if d[\'good_bad\'] == 1)\n    total = len(data)\n\n    # Criando o gráfico de barras\n    categorias = [\'Inadimplentes\', \'Adimplentes\']\n    valores = [inadimplentes, adimplentes]\n    porcentagens = [(inadimplentes / total) * 100, (adimplentes / total) * 100]\n\n    plt.figure(figsize=(10, 7))\n    barras = plt.bar(categorias, valores, color=[\'#FF9999\', \'#66B2FF\'])\n    \n    # Adicionando as porcentagens no topo das barras\n    for barra, porcentagem in zip(barras, porcentagens):\n        altura = barra.get_height()\n        plt.text(barra.get_x() + barra.get_width() / 2, altura, f\'{porcentagem:.1f}%\', \n                 ha=\'center\', va=\'bottom\', fontsize=12)\n\n    # Adicionando título e rótulos\n    plt.title(\'Quantidade e Porcentagem de Inadimplentes e Adimplentes\')\n    plt.xlabel(\'Status\')\n    plt.ylabel(\'Quantidade\')\n    plt.show()\n\n    # Criando uma nova tabela Orange com os resultados\n    domain = Orange.data.Domain([Orange.data.DiscreteVariable("Status", values=["Inadimplentes", "Adimplentes"]),\n                                 Orange.data.ContinuousVariable("Quantidade")])\n    \n    resultado = Orange.data.Table.from_list(domain, [\n        ["Inadimplentes", inadimplentes],\n        ["Adimplentes", adimplentes]\n    ])\n\n    return resultado\n\n# Exemplo de uso (assumindo que \'in_data\' é sua tabela Orange de entrada)\nif in_data is not None:\n    resultado = criar_grafico_inadimplencia(in_data)\n    print(resultado)\nelse:\n    print("Nenhum dado de entrada fornecido.")\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xac\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="7" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 3, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xf8\x7f\xff\xff\xff\xca\x00\x00\x00\x00\x00\x00\x03\xd0\xff\xff\xf8\x80\xff\xff\xff\xdf\xff\xff\xff\xff\x00\x00\x03\xcf\x00\x00\x00\x01\x02\x00\x00\x00\x07\x80\xff\xff\xf8\x80\xff\xff\xff\xdf\xff\xff\xff\xff\x00\x00\x03\xcf', 'scriptLibrary': [{'name': 'Table from numpy', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': 'import matplotlib.pyplot as plt\nimport pandas as pd\nfrom Orange.data import Table, Domain, ContinuousVariable\n\n# Convertendo os dados de entrada do Orange para um DataFrame do Pandas\ndata = pd.DataFrame(in_data.X, columns=[var.name for var in in_data.domain.attributes])\ntarget = pd.Series(in_data.Y, name=in_data.domain.class_var.name)\n\n# Verifique se os dados possuem as variáveis "grade", "Good", "Bad" e "WoE"\nif \'grade\' in data.columns and \'WoE\' in data.columns and \'Good\' in data.columns and \'Bad\' in data.columns:\n    \n    # Definir as categorias (grade), WoE e as taxas de inadimplência (Good e Bad)\n    categories = data[\'grade\']\n    woe = data[\'WoE\'].astype(\'float\')\n    good_row = data[\'Good\'].astype(\'float\')  # Substituir pela sua variável de bons pagadores\n    bad_row = data[\'Bad\'].astype(\'float\')  # Substituir pela sua variável de maus pagadores\n\n    # Criação da figura com subplots\n    fig, ax = plt.subplots(1, 2, figsize=(12, 6))\n\n    # Gráfico de barras empilhadas para taxa de inadimplência\n    bad_bars = ax[0].barh(y=categories, width=bad_row, color=\'#8d0801\', label=\'Bad\')\n    good_bars = ax[0].barh(y=categories, width=good_row, left=bad_row, color=\'#8a817c\', label=\'Good\')\n\n    # Anotando valores percentuais dentro de cada barra\n    for good_bar, bad_bar, good_rate, bad_rate in zip(good_bars, bad_bars, good_row, bad_row):\n        x_position_good = good_bar.get_x() + good_bar.get_width() / 2\n        x_position_bad = bad_bar.get_x() + bad_bar.get_width() / 2  \n        y_position = good_bar.get_y() + good_bar.get_height() / 2\n\n        ax[0].text(x_position_good, y_position, f\'{good_rate:.2f}%\', ha=\'center\', va=\'center\', color=\'white\', fontsize=10)\n        ax[0].text(x_position_bad, y_position, f\'{bad_rate:.2f}%\', ha=\'center\', va=\'center\', color=\'white\', fontsize=10)\n\n    ax[0].set_title(\'Default rate by Grade\')\n    ax[0].invert_yaxis()\n    ax[0].grid(False)\n    ax[0].legend(bbox_to_anchor=(-0.2, 1.1), loc=\'upper left\')\n\n    # Gráfico de linha para WoE\n    ax[1].plot(categories, woe, marker=\'o\', linestyle=\'--\')\n    ax[1].set_title(\'WoE by Grade\')\n    ax[1].set_xticks(categories.unique())\n    \n    plt.tight_layout()\n    plt.show()\n\n# Convertendo o DataFrame de volta para uma tabela do Orange\ndomain = Domain([ContinuousVariable(col) for col in data.columns])\nout_data = Table.from_numpy(domain, data.to_numpy())\n', 'filename': None}], 'scriptText': 'import Orange\nimport matplotlib.pyplot as plt\n\n# Função para criar gráfico de barras com porcentagens\ndef criar_grafico_barras(data, variavel):\n    # Verifica se a variável existe no dataset\n    if variavel not in data.domain:\n        print(f"Variável \'{variavel}\' não encontrada no dataset.")\n        return\n    \n    # Conta as ocorrências de cada valor da variável categórica\n    categorias = {}\n    for d in data:\n        valor = d[variavel].value\n        categorias[valor] = categorias.get(valor, 0) + 1\n    \n    # Converte o dicionário em listas e ordena do maior para o menor\n    categorias_ordenadas = sorted(categorias.items(), key=lambda x: x[1], reverse=True)\n    nomes_categorias, valores = zip(*categorias_ordenadas)\n    \n    total = sum(valores)\n    porcentagens = [(v / total) * 100 for v in valores]\n\n    # Criando o gráfico de barras\n    plt.figure(figsize=(10, 7))\n    barras = plt.bar(nomes_categorias, valores, color=[\'#FF9999\', \'#66B2FF\', \'#99FF99\', \'#FFCC99\'])\n\n    # Adicionando as porcentagens no topo das barras\n    for barra, porcentagem in zip(barras, porcentagens):\n        altura = barra.get_height()\n        plt.text(barra.get_x() + barra.get_width() / 2, altura, f\'{porcentagem:.1f}%\', \n                 ha=\'center\', va=\'bottom\', fontsize=12)\n\n    # Adicionando título e rótulos\n    plt.title(f\'Quantidade e Porcentagem por "{variavel}"\')\n    plt.xlabel(variavel)\n    plt.ylabel(\'Quantidade\')\n    plt.show()\n\n    # Criando uma nova tabela Orange com os resultados\n    domain = Orange.data.Domain([Orange.data.DiscreteVariable("Categoria", values=list(nomes_categorias)),\n                                 Orange.data.ContinuousVariable("Quantidade")])\n    \n    resultado = Orange.data.Table.from_list(domain, [\n        [categoria, valor] for categoria, valor in zip(nomes_categorias, valores)\n    ])\n\n    return resultado\n\n# Exemplo de uso (assumindo que \'in_data\' é sua tabela Orange de entrada)\nif in_data is not None:\n    # Substitua \'purpose\' por qualquer outra variável categórica do dataset\n    resultado = criar_grafico_barras(in_data, \'purpose\')\n    print(resultado)\nelse:\n    print("Nenhum dado de entrada fornecido.")\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xac\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="8" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 3, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xf8\x7f\xff\xff\xff\xca\x00\x00\x00\x00\x00\x00\x03\xd0\xff\xff\xf8\x80\xff\xff\xff\xdf\xff\xff\xff\xff\x00\x00\x03\xcf\x00\x00\x00\x01\x02\x00\x00\x00\x07\x80\xff\xff\xf8\x80\xff\xff\xff\xdf\xff\xff\xff\xff\x00\x00\x03\xcf', 'scriptLibrary': [{'name': 'Table from numpy', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': 'import matplotlib.pyplot as plt\nimport pandas as pd\nfrom Orange.data import Table, Domain, ContinuousVariable\n\n# Convertendo os dados de entrada do Orange para um DataFrame do Pandas\ndata = pd.DataFrame(in_data.X, columns=[var.name for var in in_data.domain.attributes])\ntarget = pd.Series(in_data.Y, name=in_data.domain.class_var.name)\n\n# Verifique se os dados possuem as variáveis "grade", "Good", "Bad" e "WoE"\nif \'grade\' in data.columns and \'WoE\' in data.columns and \'Good\' in data.columns and \'Bad\' in data.columns:\n    \n    # Definir as categorias (grade), WoE e as taxas de inadimplência (Good e Bad)\n    categories = data[\'grade\']\n    woe = data[\'WoE\'].astype(\'float\')\n    good_row = data[\'Good\'].astype(\'float\')  # Substituir pela sua variável de bons pagadores\n    bad_row = data[\'Bad\'].astype(\'float\')  # Substituir pela sua variável de maus pagadores\n\n    # Criação da figura com subplots\n    fig, ax = plt.subplots(1, 2, figsize=(12, 6))\n\n    # Gráfico de barras empilhadas para taxa de inadimplência\n    bad_bars = ax[0].barh(y=categories, width=bad_row, color=\'#8d0801\', label=\'Bad\')\n    good_bars = ax[0].barh(y=categories, width=good_row, left=bad_row, color=\'#8a817c\', label=\'Good\')\n\n    # Anotando valores percentuais dentro de cada barra\n    for good_bar, bad_bar, good_rate, bad_rate in zip(good_bars, bad_bars, good_row, bad_row):\n        x_position_good = good_bar.get_x() + good_bar.get_width() / 2\n        x_position_bad = bad_bar.get_x() + bad_bar.get_width() / 2  \n        y_position = good_bar.get_y() + good_bar.get_height() / 2\n\n        ax[0].text(x_position_good, y_position, f\'{good_rate:.2f}%\', ha=\'center\', va=\'center\', color=\'white\', fontsize=10)\n        ax[0].text(x_position_bad, y_position, f\'{bad_rate:.2f}%\', ha=\'center\', va=\'center\', color=\'white\', fontsize=10)\n\n    ax[0].set_title(\'Default rate by Grade\')\n    ax[0].invert_yaxis()\n    ax[0].grid(False)\n    ax[0].legend(bbox_to_anchor=(-0.2, 1.1), loc=\'upper left\')\n\n    # Gráfico de linha para WoE\n    ax[1].plot(categories, woe, marker=\'o\', linestyle=\'--\')\n    ax[1].set_title(\'WoE by Grade\')\n    ax[1].set_xticks(categories.unique())\n    \n    plt.tight_layout()\n    plt.show()\n\n# Convertendo o DataFrame de volta para uma tabela do Orange\ndomain = Domain([ContinuousVariable(col) for col in data.columns])\nout_data = Table.from_numpy(domain, data.to_numpy())\n', 'filename': None}], 'scriptText': 'import matplotlib.pyplot as plt\nimport pandas as pd\nimport numpy as np\nfrom Orange.data import Table, Domain, ContinuousVariable, DiscreteVariable\n\ndef plot_woe_bad_rate_by_variable(in_data, target_variable, outcome_variable=None, figsize=(20, 12)):\n    try:\n        # Get the target variable from the domain\n        target_var = in_data.domain[target_variable]\n        if not isinstance(target_var, DiscreteVariable):\n            raise ValueError(f"The \'{target_variable}\' variable must be a DiscreteVariable.")\n        \n        # Create a dictionary to map numeric values to target names\n        target_mapping = {i: value for i, value in enumerate(target_var.values)}\n        \n        # Print target mapping for verification\n        print(f"{target_variable} Mapping:")\n        for key, value in target_mapping.items():\n            print(f"{key}: {value}")\n        \n        # Convert Orange data to pandas DataFrame\n        data = pd.DataFrame({\n            var.name: in_data.get_column(var.name)\n            for var in in_data.domain.variables\n        })\n        \n        # Print the first few rows of the DataFrame for verification\n        print("\\nFirst few rows of the DataFrame:")\n        print(data.head())\n        \n        # If outcome_variable is not specified or not in columns, use the last column\n        if outcome_variable is None or outcome_variable not in data.columns:\n            outcome_variable = data.columns[-1]\n        \n        print(f"\\nOutcome variable: {outcome_variable}")\n        \n        # Create \'Good\' and \'Bad\' columns based on the outcome variable\n        median = data[outcome_variable].median()\n        data[\'Good\'] = (data[outcome_variable] &gt;= median).astype(int)\n        data[\'Bad\'] = (data[outcome_variable] &lt; median).astype(int)\n        \n        # Calculate WoE and other metrics\n        grouped = data.groupby(target_variable).agg({\n            \'Good\': \'sum\',\n            \'Bad\': \'sum\'\n        }).reset_index()\n        \n        grouped[\'Total\'] = grouped[\'Good\'] + grouped[\'Bad\']\n        grouped[\'GoodRate\'] = grouped[\'Good\'] / grouped[\'Total\']\n        grouped[\'BadRate\'] = grouped[\'Bad\'] / grouped[\'Total\']\n        \n        total_good = grouped[\'Good\'].sum()\n        total_bad = grouped[\'Bad\'].sum()\n        \n        grouped[\'WoE\'] = np.log((grouped[\'GoodRate\'] / (total_good / grouped[\'Total\'].sum())) / \n                                (grouped[\'BadRate\'] / (total_bad / grouped[\'Total\'].sum())))\n        \n        # Map numeric targets to their descriptions\n        grouped[\'target_description\'] = grouped[target_variable].map(target_mapping)\n        \n        # Print grouped data for verification\n        print("\\nGrouped data:")\n        print(grouped)\n        \n        # Sort by WoE for better visualization\n        grouped = grouped.sort_values(\'WoE\')\n        \n        targets = grouped[\'target_description\']\n        woe = grouped[\'WoE\']\n        good_rate = grouped[\'GoodRate\'] * 100\n        bad_rate = grouped[\'BadRate\'] * 100\n        \n        # Create the plot\n        fig, (ax1, ax2) = plt.subplots(1, 2, figsize=figsize)\n        \n        # Stacked bar chart\n        ax1.barh(targets, bad_rate, label=\'Bad\', color=\'#FF9999\')\n        ax1.barh(targets, good_rate, left=bad_rate, label=\'Good\', color=\'#66B2FF\')\n        \n        ax1.set_title(f\'Good/Bad Rate by {target_variable.capitalize()}\')\n        ax1.set_xlabel(\'Percentage\')\n        ax1.set_ylabel(target_variable.capitalize())\n        ax1.legend(loc=\'lower right\')\n        \n        # Add percentage labels\n        for i, (bad, good) in enumerate(zip(bad_rate, good_rate)):\n            ax1.text(bad/2, i, f\'{bad:.1f}%\', va=\'center\', ha=\'center\')\n            ax1.text(bad + good/2, i, f\'{good:.1f}%\', va=\'center\', ha=\'center\')\n        \n        # WoE chart\n        ax2.plot(woe, targets, marker=\'o\')\n        ax2.set_title(f\'Weight of Evidence (WoE) by {target_variable.capitalize()}\')\n        ax2.set_xlabel(\'WoE\')\n        ax2.set_ylabel(target_variable.capitalize())\n        ax2.axvline(x=0, color=\'r\', linestyle=\'--\')\n        \n        # Add WoE values as text\n        for i, (target, w) in enumerate(zip(targets, woe)):\n            ax2.text(w, i, f\'{w:.2f}\', va=\'center\', ha=\'left\' if w &gt;= 0 else \'right\')\n        \n        plt.tight_layout()\n        plt.show()\n\n        # Create a new Orange table with the plot data\n        domain = Domain([DiscreteVariable(target_variable, values=targets.tolist()),\n                         ContinuousVariable("WoE"),\n                         ContinuousVariable("Good_Rate"),\n                         ContinuousVariable("Bad_Rate")])\n        out_data = Table.from_numpy(domain, \n                                    X=np.column_stack((\n                                        grouped[target_variable],  # Use original numeric values\n                                        woe,\n                                        good_rate,\n                                        bad_rate\n                                    )))\n        return out_data\n    \n    except Exception as e:\n        print(f"Error creating the plot: {str(e)}")\n        return None\n\n# Example usage of the function\nif in_data is not None:\n     out_data = plot_woe_bad_rate_by_variable(in_data, target_variable=\'emp_length\', outcome_variable=None, figsize=(20, 12))\n# else:\n#     print("No input data provided.")\n#     out_data = None', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xac\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="9" format="pickle">gASVbwsAAAAAAAB9lCiMC2F1dG9fY29tbWl0lIiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBNzYXZl
ZFdpZGdldEdlb21ldHJ5lENCAdnQywADAAD///h/////ygAAAAAAAAPQ///4gP///9//////AAAD
zwAAAAECAAAAB4D///iA////3/////8AAAPPlIwHc29ydGluZ5RLAIwDc2lwlIwOX3VucGlja2xl
X2VudW2Uk5SMDFB5UXQ1LlF0Q29yZZSMCVNvcnRPcmRlcpRLAIeUUpSGlIwLX192ZXJzaW9uX1+U
SwKMEGNvbnRleHRfc2V0dGluZ3OUXZQojBVvcmFuZ2V3aWRnZXQuc2V0dGluZ3OUjAdDb250ZXh0
lJOUKYGUfZQojAZ2YWx1ZXOUfZQojAljb2xvcl92YXKUjAhnb29kX2JhZJRLZYaUjA1zZWxlY3Rl
ZF92YXJzlF2UjAtpbnN0YWxsbWVudJRLZoaUYUr9////hpRoDksCdYwKYXR0cmlidXRlc5R9lCiM
CUZlYXR1cmUgMZRLAowKVW5uYW1lZDogMJRLAowCaWSUSwKMCW1lbWJlcl9pZJRLAowJbG9hbl9h
bW50lEsCjAtmdW5kZWRfYW1udJRLAowPZnVuZGVkX2FtbnRfaW52lEsCjAR0ZXJtlEsBjAhpbnRf
cmF0ZZRLAmgdSwKMBWdyYWRllEsBjAlzdWJfZ3JhZGWUSwGMCmVtcF9sZW5ndGiUSwGMDmhvbWVf
b3duZXJzaGlwlEsBjAphbm51YWxfaW5jlEsCjBN2ZXJpZmljYXRpb25fc3RhdHVzlEsBjAdpc3N1
ZV9klEsBjAtsb2FuX3N0YXR1c5RLAYwKcHltbnRfcGxhbpRLAYwHcHVycG9zZZRLAYwKYWRkcl9z
dGF0ZZRLAYwDZHRplEsCjAtkZWxpbnFfMnlyc5RLAowOaW5xX2xhc3RfNm10aHOUSwKMFm10aHNf
c2luY2VfbGFzdF9kZWxpbnGUSwKMFm10aHNfc2luY2VfbGFzdF9yZWNvcmSUSwKMCG9wZW5fYWNj
lEsCjAdwdWJfcmVjlEsCjAlyZXZvbF9iYWyUSwKMCnJldm9sX3V0aWyUSwKMCXRvdGFsX2FjY5RL
AowTaW5pdGlhbF9saXN0X3N0YXR1c5RLAYwJb3V0X3BybmNwlEsCjA1vdXRfcHJuY3BfaW52lEsC
jAt0b3RhbF9weW1udJRLAowPdG90YWxfcHltbnRfaW52lEsCjA90b3RhbF9yZWNfcHJuY3CUSwKM
DXRvdGFsX3JlY19pbnSUSwKMEnRvdGFsX3JlY19sYXRlX2ZlZZRLAowKcmVjb3Zlcmllc5RLAowX
Y29sbGVjdGlvbl9yZWNvdmVyeV9mZWWUSwKMDGxhc3RfcHltbnRfZJRLAYwPbGFzdF9weW1udF9h
bW50lEsCjAxuZXh0X3B5bW50X2SUSwGMEmxhc3RfY3JlZGl0X3B1bGxfZJRLAYwaY29sbGVjdGlv
bnNfMTJfbXRoc19leF9tZWSUSwGMG210aHNfc2luY2VfbGFzdF9tYWpvcl9kZXJvZ5RLAowLcG9s
aWN5X2NvZGWUSwGMEGFwcGxpY2F0aW9uX3R5cGWUSwGMEGFubnVhbF9pbmNfam9pbnSUSwKMCWR0
aV9qb2ludJRLAowZdmVyaWZpY2F0aW9uX3N0YXR1c19qb2ludJRLAowOYWNjX25vd19kZWxpbnGU
SwGMDHRvdF9jb2xsX2FtdJRLAowLdG90X2N1cl9iYWyUSwKMC29wZW5fYWNjXzZtlEsCjApvcGVu
X2lsXzZtlEsCjAtvcGVuX2lsXzEybZRLAowLb3Blbl9pbF8yNG2USwKMEm10aHNfc2luY2VfcmNu
dF9pbJRLAowMdG90YWxfYmFsX2lslEsCjAdpbF91dGlslEsCjAtvcGVuX3J2XzEybZRLAowLb3Bl
bl9ydl8yNG2USwKMCm1heF9iYWxfYmOUSwKMCGFsbF91dGlslEsCjBB0b3RhbF9yZXZfaGlfbGlt
lEsCjAZpbnFfZmmUSwKMC3RvdGFsX2N1X3RslEsCjAxpbnFfbGFzdF8xMm2USwKMDmVtcF9sZW5n
dGhfaW50lEsCjBVlYXJsaWVzdF9jcl9saW5lX2RhdGWUSwSMG210aHNfc2luY2VfZWFybGllc3Rf
Y3JfbGluZZRLAowIdGVybV9pbnSUSwKMDGlzc3VlX2RfZGF0ZZRLBIwSbXRoc19zaW5jZV9pc3N1
ZV9klEsCaBlLAXWMBW1ldGFzlH2UKIwJZW1wX3RpdGxllEsDjAN1cmyUSwOMBGRlc2OUSwOMBXRp
dGxllEsDjAh6aXBfY29kZZRLA4wQZWFybGllc3RfY3JfbGluZZRLA3V1YmgTKYGUfZQoaBZ9lCiM
CWNvbG9yX3ZhcpSMCGdvb2RfYmFklEtlhpSMDXNlbGVjdGVkX3ZhcnOUXZSMC2luc3RhbGxtZW50
lEtmhpRhSv3///+GlGgOSwJ1aCB9lCiMCWxvYW5fYW1udJRLAowLZnVuZGVkX2FtbnSUSwKMBHRl
cm2USwGMCGludF9yYXRllEsCaH1LAowFZ3JhZGWUSwGMCXN1Yl9ncmFkZZRLAYwKZW1wX2xlbmd0
aJRLAYwOaG9tZV9vd25lcnNoaXCUSwGMCmFubnVhbF9pbmOUSwKME3ZlcmlmaWNhdGlvbl9zdGF0
dXOUSwGMB2lzc3VlX2SUSwGMC2xvYW5fc3RhdHVzlEsBjAdwdXJwb3NllEsBjAphZGRyX3N0YXRl
lEsBjANkdGmUSwKMC2RlbGlucV8yeXJzlEsCjA5pbnFfbGFzdF82bXRoc5RLAowWbXRoc19zaW5j
ZV9sYXN0X2RlbGlucZRLAowWbXRoc19zaW5jZV9sYXN0X3JlY29yZJRLAowIb3Blbl9hY2OUSwKM
B3B1Yl9yZWOUSwKMCXJldm9sX2JhbJRLAowKcmV2b2xfdXRpbJRLAowJdG90YWxfYWNjlEsCjBNp
bml0aWFsX2xpc3Rfc3RhdHVzlEsBjAlvdXRfcHJuY3CUSwKMC3RvdGFsX3B5bW50lEsCjA90b3Rh
bF9yZWNfcHJuY3CUSwKMDXRvdGFsX3JlY19pbnSUSwKMEnRvdGFsX3JlY19sYXRlX2ZlZZRLAowK
cmVjb3Zlcmllc5RLAowXY29sbGVjdGlvbl9yZWNvdmVyeV9mZWWUSwKMDGxhc3RfcHltbnRfZJRL
AYwPbGFzdF9weW1udF9hbW50lEsCjBpjb2xsZWN0aW9uc18xMl9tdGhzX2V4X21lZJRLAYwbbXRo
c19zaW5jZV9sYXN0X21ham9yX2Rlcm9nlEsCjBBhbm51YWxfaW5jX2pvaW50lEsCjAlkdGlfam9p
bnSUSwKMGXZlcmlmaWNhdGlvbl9zdGF0dXNfam9pbnSUSwKMDmFjY19ub3dfZGVsaW5xlEsBjAx0
b3RfY29sbF9hbXSUSwKMC3RvdF9jdXJfYmFslEsCjAtvcGVuX2FjY182bZRLAowKb3Blbl9pbF82
bZRLAowLb3Blbl9pbF8xMm2USwKMC29wZW5faWxfMjRtlEsCjBJtdGhzX3NpbmNlX3JjbnRfaWyU
SwKMDHRvdGFsX2JhbF9pbJRLAowHaWxfdXRpbJRLAowLb3Blbl9ydl8xMm2USwKMC29wZW5fcnZf
MjRtlEsCjAptYXhfYmFsX2JjlEsCjAhhbGxfdXRpbJRLAowQdG90YWxfcmV2X2hpX2xpbZRLAowG
aW5xX2ZplEsCjAt0b3RhbF9jdV90bJRLAowMaW5xX2xhc3RfMTJtlEsCaHlLAXVobX2UKIwEZGVz
Y5RLA4wQZWFybGllc3RfY3JfbGluZZRLA3V1YmV1Lg==
</properties>
		<properties node_id="10" format="pickle">gASVAEgAAAAAAAB9lCiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjAxyZWNlbnRfcGF0aHOUXZQojB5v
cmFuZ2V3aWRnZXQudXRpbHMuZmlsZWRpYWxvZ3OUjApSZWNlbnRQYXRolJOUKYGUfZQojAdhYnNw
YXRolIw1L2hvbWUvbm9pc2UvRG9jdW1lbnRvcy9yaXNrLWNyZWRpdC9ub3RlYm9va3Mvcmlzay5j
c3aUjAZwcmVmaXiUTowHcmVscGF0aJROjAV0aXRsZZSMAJSMBXNoZWV0lGgOjAtmaWxlX2Zvcm1h
dJROdWJoBimBlH2UKGgJjEdDOi9Vc2Vycy9HcmHDum5hIE1vdG9zL0RvY3VtZW50cy9yaXNrLWNy
ZWRpdC9ub3RlYm9va3Mvcmlza190cmF0YWRvLmNzdpRoC05oDE5oDWgOaA9oDmgQTnViaAYpgZR9
lChoCYw/QzovVXNlcnMvR3Jhw7puYSBNb3Rvcy9Eb2N1bWVudHMvcmlzay1jcmVkaXQvbm90ZWJv
b2tzL3Jpc2suY3N2lGgLTmgMTmgNaA5oD2gOaBBOdWJoBimBlH2UKGgJjGFDOi9VbmliYWxzYXMv
VHJhYmFsaG9zLzIwMjQuMi9JbnRlbGlnZW5jaWEgZG9zIG5lZ29jaW9zL1RFRCAxL2RhZG9zL3Rh
YmVsYV9jdXN0b19kZV92aWRhXzIwMTQuY3N2lGgLTmgMTmgNaA5oD2gOaBBOdWJoBimBlH2UKGgJ
jGFDOi9VbmliYWxzYXMvVHJhYmFsaG9zLzIwMjQuMi9JbnRlbGlnZW5jaWEgZG9zIG5lZ29jaW9z
L1RFRCAxL2RhZG9zL3RhYmVsYV9jdXN0b19kZV92aWRhXzIwMTguY3N2lGgLTmgMTmgNaA5oD2gO
aBBOdWJoBimBlH2UKGgJjGFDOi9VbmliYWxzYXMvVHJhYmFsaG9zLzIwMjQuMi9JbnRlbGlnZW5j
aWEgZG9zIG5lZ29jaW9zL1RFRCAxL2RhZG9zL3RhYmVsYV9jdXN0b19kZV92aWRhXzIwMjEuY3N2
lGgLTmgMTmgNaA5oD2gOaBBOdWJoBimBlH2UKGgJjEFDOi9Vc2Vycy9NcGVkci9Eb3dubG9hZHMv
Q29zdF9vZl9MaXZpbmdfSW5kZXhfYnlfQ291bnRyeV8yMDI0LmNzdpRoC4wHYmFzZWRpcpRoDIwo
Q29zdF9vZl9MaXZpbmdfSW5kZXhfYnlfQ291bnRyeV8yMDI0LmNzdpRoDWgOaA9oDmgQTnViaAYp
gZR9lChoCYxYL2hvbWUvbm9pc2Uvb3JhbmdlX2Vudi9vcmFuZ2VfdmVudi9saWIvcHl0aG9uMy4x
MS9zaXRlLXBhY2thZ2VzL09yYW5nZS9kYXRhc2V0cy9pcmlzLnRhYpRoC4wPc2FtcGxlLWRhdGFz
ZXRzlGgMjAhpcmlzLnRhYpRoDWgOaA9oDmgQTnViaAYpgZR9lChoCYxbL2hvbWUvbm9pc2Uvb3Jh
bmdlX2Vudi9vcmFuZ2VfdmVudi9saWIvcHl0aG9uMy4xMS9zaXRlLXBhY2thZ2VzL09yYW5nZS9k
YXRhc2V0cy90aXRhbmljLnRhYpRoC2goaAyMC3RpdGFuaWMudGFilGgNaA5oD2gOaBBOdWJoBimB
lH2UKGgJjFsvaG9tZS9ub2lzZS9vcmFuZ2VfZW52L29yYW5nZV92ZW52L2xpYi9weXRob24zLjEx
L3NpdGUtcGFja2FnZXMvT3JhbmdlL2RhdGFzZXRzL2hvdXNpbmcudGFilGgLaChoDIwLaG91c2lu
Zy50YWKUaA1oDmgPaA5oEE51YmgGKYGUfZQoaAmMYS9ob21lL25vaXNlL29yYW5nZV9lbnYvb3Jh
bmdlX3ZlbnYvbGliL3B5dGhvbjMuMTEvc2l0ZS1wYWNrYWdlcy9PcmFuZ2UvZGF0YXNldHMvaGVh
cnRfZGlzZWFzZS50YWKUaAtoKGgMjBFoZWFydF9kaXNlYXNlLnRhYpRoDWgOaA9oDmgQTnViaAYp
gZR9lChoCYxiL2hvbWUvbm9pc2Uvb3JhbmdlX2Vudi9vcmFuZ2VfdmVudi9saWIvcHl0aG9uMy4x
MS9zaXRlLXBhY2thZ2VzL09yYW5nZS9kYXRhc2V0cy9icm93bi1zZWxlY3RlZC50YWKUaAtoKGgM
jBJicm93bi1zZWxlY3RlZC50YWKUaA1oDmgPaA5oEE51YmgGKYGUfZQoaAmMVy9ob21lL25vaXNl
L29yYW5nZV9lbnYvb3JhbmdlX3ZlbnYvbGliL3B5dGhvbjMuMTEvc2l0ZS1wYWNrYWdlcy9PcmFu
Z2UvZGF0YXNldHMvem9vLnRhYpRoC2goaAyMB3pvby50YWKUaA1oDmgPaA5oEE51YmWMC3JlY2Vu
dF91cmxzlF2UjBNzYXZlZFdpZGdldEdlb21ldHJ5lENCAdnQywADAAAAAAKAAAAA9QAABP8AAAND
AAACgAAAAPUAAAT/AAADQwAAAAAAAAAAB4AAAAKAAAAA9QAABP8AAANDlIwLc2hlZXRfbmFtZXOU
fZSMBnNvdXJjZZRLAIwDdXJslGgOjA1kb21haW5fZWRpdG9ylH2UjAtfX3ZlcnNpb25fX5RLAYwQ
Y29udGV4dF9zZXR0aW5nc5RdlCiMFW9yYW5nZXdpZGdldC5zZXR0aW5nc5SMB0NvbnRleHSUk5Qp
gZR9lCiMBnZhbHVlc5R9lCiMCXZhcmlhYmxlc5RdlGhGfZRoUl2UKF2UKIwJRmVhdHVyZSAxlIwU
T3JhbmdlLmRhdGEudmFyaWFibGWUjBJDb250aW51b3VzVmFyaWFibGWUk5RLAGgOiGVdlCiMClVu
bmFtZWQ6IDCUaFpLAGgOiGVdlCiMAmlklGhaSwBoDohlXZQojAltZW1iZXJfaWSUaFpLAGgOiGVd
lCiMCWxvYW5fYW1udJRoWksAaA6IZV2UKIwLZnVuZGVkX2FtbnSUaFpLAGgOiGVdlCiMD2Z1bmRl
ZF9hbW50X2ludpRoWksAaA6IZV2UKIwEdGVybZRoWIwQRGlzY3JldGVWYXJpYWJsZZSTlEsAjBQz
NiBtb250aHMsIDYwIG1vbnRoc5SJZV2UKIwIaW50X3JhdGWUaFpLAGgOiGVdlCiMC2luc3RhbGxt
ZW50lGhaSwBoDohlXZQojAVncmFkZZRoaksAjBNBLCBCLCBDLCBELCBFLCBGLCBHlIllXZQojAlz
dWJfZ3JhZGWUaGpLAIxTQTEsIEEyLCBBMywgQTQsIEE1LCBCMSwgQjIsIEIzLCBCNCwgQjUsIEMx
LCBDMiwgQzMsIEM0LCBDNSwgRDEsIEQyLCBEMywgRDQsIEQ1LCAuLi6UiWVdlCiMCmVtcF9sZW5n
dGiUaGpLAIxjMSB5ZWFyLCAyIHllYXJzLCAzIHllYXJzLCA0IHllYXJzLCA1IHllYXJzLCA2IHll
YXJzLCA3IHllYXJzLCA4IHllYXJzLCA5IHllYXJzLCAxMCsgeWVhcnMsIDwgMSB5ZWFylIllXZQo
jA5ob21lX293bmVyc2hpcJRoaksAjBpNT1JUR0FHRSwgT1RIRVIsIE9XTiwgUkVOVJSJZV2UKIwK
YW5udWFsX2luY5RoWksAaA6IZV2UKIwTdmVyaWZpY2F0aW9uX3N0YXR1c5RoaksAjCdOb3QgVmVy
aWZpZWQsIFNvdXJjZSBWZXJpZmllZCwgVmVyaWZpZWSUiWVdlCiMB2lzc3VlX2SUaGpLAIyeQXBy
LTExLCBBdWctMTAsIEF1Zy0xMSwgRGVjLTEwLCBEZWMtMTEsIEZlYi0xMSwgSmFuLTExLCBKdWwt
MTAsIEp1bC0xMSwgSnVuLTEwLCBKdW4tMTEsIE1hci0xMSwgTWF5LTEwLCBNYXktMTEsIE5vdi0x
MCwgTm92LTExLCBPY3QtMTAsIE9jdC0xMSwgU2VwLTEwLCBTZXAtMTGUiWVdlCiMC2xvYW5fc3Rh
dHVzlGhqSwCMYUNoYXJnZWQgT2ZmLCBDdXJyZW50LCBEZWZhdWx0LCBGdWxseSBQYWlkLCBJbiBH
cmFjZSBQZXJpb2QsIExhdGUgKDE2LTMwIGRheXMpLCBMYXRlICgzMS0xMjAgZGF5cymUiWVdlCiM
CnB5bW50X3BsYW6UaGpLAIwEbiwgeZSJZV2UKIwHcHVycG9zZZRoaksAjKdjYXIsIGNyZWRpdF9j
YXJkLCBkZWJ0X2NvbnNvbGlkYXRpb24sIGVkdWNhdGlvbmFsLCBob21lX2ltcHJvdmVtZW50LCBo
b3VzZSwgbWFqb3JfcHVyY2hhc2UsIG1lZGljYWwsIG1vdmluZywgb3RoZXIsIHJlbmV3YWJsZV9l
bmVyZ3ksIHNtYWxsX2J1c2luZXNzLCB2YWNhdGlvbiwgd2VkZGluZ5SJZV2UKIwKYWRkcl9zdGF0
ZZRoaksAjFNBSywgQUwsIEFSLCBBWiwgQ0EsIENPLCBDVCwgREMsIERFLCBGTCwgR0EsIEhJLCBJ
QSwgSUwsIEtTLCBLWSwgTEEsIE1BLCBNRCwgTUksIC4uLpSJZV2UKIwDZHRplGhaSwBoDohlXZQo
jAtkZWxpbnFfMnlyc5RoWksAaA6IZV2UKIwOaW5xX2xhc3RfNm10aHOUaFpLAGgOiGVdlCiMFm10
aHNfc2luY2VfbGFzdF9kZWxpbnGUaFpLAGgOiGVdlCiMFm10aHNfc2luY2VfbGFzdF9yZWNvcmSU
aFpLAGgOiGVdlCiMCG9wZW5fYWNjlGhaSwBoDohlXZQojAdwdWJfcmVjlGhaSwBoDohlXZQojAly
ZXZvbF9iYWyUaFpLAGgOiGVdlCiMCnJldm9sX3V0aWyUaFpLAGgOiGVdlCiMCXRvdGFsX2FjY5Ro
WksAaA6IZV2UKIwTaW5pdGlhbF9saXN0X3N0YXR1c5RoaksAjAFmlIllXZQojAlvdXRfcHJuY3CU
aFpLAGgOiGVdlCiMDW91dF9wcm5jcF9pbnaUaFpLAGgOiGVdlCiMC3RvdGFsX3B5bW50lGhaSwBo
DohlXZQojA90b3RhbF9weW1udF9pbnaUaFpLAGgOiGVdlCiMD3RvdGFsX3JlY19wcm5jcJRoWksA
aA6IZV2UKIwNdG90YWxfcmVjX2ludJRoWksAaA6IZV2UKIwSdG90YWxfcmVjX2xhdGVfZmVllGha
SwBoDohlXZQojApyZWNvdmVyaWVzlGhaSwBoDohlXZQojBdjb2xsZWN0aW9uX3JlY292ZXJ5X2Zl
ZZRoWksAaA6IZV2UKIwMbGFzdF9weW1udF9klGhqSwCMo0Fwci0xMSwgQXByLTEyLCBBcHItMTMs
IEFwci0xNCwgQXByLTE1LCBBdWctMTAsIEF1Zy0xMSwgQXVnLTEyLCBBdWctMTMsIEF1Zy0xNCwg
QXVnLTE1LCBEZWMtMTAsIERlYy0xMSwgRGVjLTEyLCBEZWMtMTMsIERlYy0xNCwgRGVjLTE1LCBG
ZWItMTEsIEZlYi0xMiwgRmViLTEzLCAuLi6UiWVdlCiMD2xhc3RfcHltbnRfYW1udJRoWksAaA6I
ZV2UKIwMbmV4dF9weW1udF9klGhqSwCMDkZlYi0xNiwgSmFuLTE2lIllXZQojBJsYXN0X2NyZWRp
dF9wdWxsX2SUaGpLAIyjQXByLTExLCBBcHItMTIsIEFwci0xMywgQXByLTE0LCBBcHItMTUsIEF1
Zy0xMCwgQXVnLTExLCBBdWctMTIsIEF1Zy0xMywgQXVnLTE0LCBBdWctMTUsIERlYy0xMCwgRGVj
LTExLCBEZWMtMTIsIERlYy0xMywgRGVjLTE0LCBEZWMtMTUsIEZlYi0xMSwgRmViLTEyLCBGZWIt
MTMsIC4uLpSJZV2UKIwaY29sbGVjdGlvbnNfMTJfbXRoc19leF9tZWSUaGpLAIwDMC4wlIhlXZQo
jBttdGhzX3NpbmNlX2xhc3RfbWFqb3JfZGVyb2eUaFpLAGgOiGVdlCiMC3BvbGljeV9jb2RllGhq
SwCMATGUiGVdlCiMEGFwcGxpY2F0aW9uX3R5cGWUaGpLAIwKSU5ESVZJRFVBTJSJZV2UKIwQYW5u
dWFsX2luY19qb2ludJRoWksAaA6IZV2UKIwJZHRpX2pvaW50lGhaSwBoDohlXZQojBl2ZXJpZmlj
YXRpb25fc3RhdHVzX2pvaW50lGhaSwBoDohlXZQojA5hY2Nfbm93X2RlbGlucZRoaksAjAMwLjCU
iGVdlCiMDHRvdF9jb2xsX2FtdJRoWksAaA6IZV2UKIwLdG90X2N1cl9iYWyUaFpLAGgOiGVdlCiM
C29wZW5fYWNjXzZtlGhaSwBoDohlXZQojApvcGVuX2lsXzZtlGhaSwBoDohlXZQojAtvcGVuX2ls
XzEybZRoWksAaA6IZV2UKIwLb3Blbl9pbF8yNG2UaFpLAGgOiGVdlCiMEm10aHNfc2luY2VfcmNu
dF9pbJRoWksAaA6IZV2UKIwMdG90YWxfYmFsX2lslGhaSwBoDohlXZQojAdpbF91dGlslGhaSwBo
DohlXZQojAtvcGVuX3J2XzEybZRoWksAaA6IZV2UKIwLb3Blbl9ydl8yNG2UaFpLAGgOiGVdlCiM
Cm1heF9iYWxfYmOUaFpLAGgOiGVdlCiMCGFsbF91dGlslGhaSwBoDohlXZQojBB0b3RhbF9yZXZf
aGlfbGltlGhaSwBoDohlXZQojAZpbnFfZmmUaFpLAGgOiGVdlCiMC3RvdGFsX2N1X3RslGhaSwBo
DohlXZQojAxpbnFfbGFzdF8xMm2UaFpLAGgOiGVdlCiMDmVtcF9sZW5ndGhfaW50lGhaSwBoDohl
XZQojBVlYXJsaWVzdF9jcl9saW5lX2RhdGWUaFiMDFRpbWVWYXJpYWJsZZSTlEsAaA6IZV2UKIwb
bXRoc19zaW5jZV9lYXJsaWVzdF9jcl9saW5llGhaSwBoDohlXZQojAh0ZXJtX2ludJRoWksAaA6I
ZV2UKIwMaXNzdWVfZF9kYXRllGj/SwBoDohlXZQojBJtdGhzX3NpbmNlX2lzc3VlX2SUaFpLAGgO
iGVdlCiMCGdvb2RfYmFklGhqSwGMBDAsIDGUiGVdlCiMCWVtcF90aXRsZZRoWIwOU3RyaW5nVmFy
aWFibGWUk5RLAmgOiWVdlCiMA3VybJRqDgEAAEsCaA6JZV2UKIwEZGVzY5RqDgEAAEsCaA6JZV2U
KIwFdGl0bGWUag4BAABLAmgOiWVdlCiMCHppcF9jb2RllGoOAQAASwJoDollXZQojBBlYXJsaWVz
dF9jcl9saW5llGoOAQAASwJoDollZXNoSEsBdYwKYXR0cmlidXRlc5QoaFdLAoaUaFxLAoaUaF5L
AoaUaGBLAoaUaGJLAoaUaGRLAoaUaGZLAoaUaGhdlCiMCTM2IG1vbnRoc5SMCTYwIG1vbnRoc5Rl
hpRobUsChpRob0sChpRocV2UKIwBQZSMAUKUjAFDlIwBRJSMAUWUjAFGlIwBR5RlhpRodF2UKIwC
QTGUjAJBMpSMAkEzlIwCQTSUjAJBNZSMAkIxlIwCQjKUjAJCM5SMAkI0lIwCQjWUjAJDMZSMAkMy
lIwCQzOUjAJDNJSMAkM1lIwCRDGUjAJEMpSMAkQzlIwCRDSUjAJENZSMAkUxlIwCRTKUjAJFM5SM
AkU0lIwCRTWUjAJGMZSMAkYylIwCRjOUjAJGNJSMAkY1lIwCRzGUjAJHMpSMAkczlIwCRzSUjAJH
NZRlhpRod12UKIwGMSB5ZWFylIwHMiB5ZWFyc5SMBzMgeWVhcnOUjAc0IHllYXJzlIwHNSB5ZWFy
c5SMBzYgeWVhcnOUjAc3IHllYXJzlIwHOCB5ZWFyc5SMBzkgeWVhcnOUjAkxMCsgeWVhcnOUjAg8
IDEgeWVhcpRlhpRoel2UKIwITU9SVEdBR0WUjAVPVEhFUpSMA09XTpSMBFJFTlSUZYaUaH1LAoaU
aH9dlCiMDE5vdCBWZXJpZmllZJSMD1NvdXJjZSBWZXJpZmllZJSMCFZlcmlmaWVklGWGlGiCXZQo
jAZBcHItMTGUjAZBdWctMTCUjAZBdWctMTGUjAZEZWMtMTCUjAZEZWMtMTGUjAZGZWItMTGUjAZK
YW4tMTGUjAZKdWwtMTCUjAZKdWwtMTGUjAZKdW4tMTCUjAZKdW4tMTGUjAZNYXItMTGUjAZNYXkt
MTCUjAZNYXktMTGUjAZOb3YtMTCUjAZOb3YtMTGUjAZPY3QtMTCUjAZPY3QtMTGUjAZTZXAtMTCU
jAZTZXAtMTGUZYaUaIVdlCiMC0NoYXJnZWQgT2ZmlIwHQ3VycmVudJSMB0RlZmF1bHSUjApGdWxs
eSBQYWlklIwPSW4gR3JhY2UgUGVyaW9klIwRTGF0ZSAoMTYtMzAgZGF5cymUjBJMYXRlICgzMS0x
MjAgZGF5cymUZYaUaIhdlCiMAW6UjAF5lGWGlGiLXZQojANjYXKUjAtjcmVkaXRfY2FyZJSMEmRl
YnRfY29uc29saWRhdGlvbpSMC2VkdWNhdGlvbmFslIwQaG9tZV9pbXByb3ZlbWVudJSMBWhvdXNl
lIwObWFqb3JfcHVyY2hhc2WUjAdtZWRpY2FslIwGbW92aW5nlIwFb3RoZXKUjBByZW5ld2FibGVf
ZW5lcmd5lIwOc21hbGxfYnVzaW5lc3OUjAh2YWNhdGlvbpSMB3dlZGRpbmeUZYaUaI5dlCiMAkFL
lIwCQUyUjAJBUpSMAkFalIwCQ0GUjAJDT5SMAkNUlIwCREOUjAJERZSMAkZMlIwCR0GUjAJISZSM
AklBlIwCSUyUjAJLU5SMAktZlIwCTEGUjAJNQZSMAk1ElIwCTUmUjAJNTpSMAk1PlIwCTVOUjAJN
VJSMAk5DlIwCTkiUjAJOSpSMAk5NlIwCTlaUjAJOWZSMAk9IlIwCT0uUjAJPUpSMAlBBlIwCUkmU
jAJTQ5SMAlNElIwCVE6UjAJUWJSMAlVUlIwCVkGUjAJWVJSMAldBlIwCV0mUjAJXVpSMAldZlGWG
lGiRSwKGlGiTSwKGlGiVSwKGlGiXSwKGlGiZSwKGlGibSwKGlGidSwKGlGifSwKGlGihSwKGlGij
SwKGlGilXZRopmGGlGioSwKGlGiqSwKGlGisSwKGlGiuSwKGlGiwSwKGlGiySwKGlGi0SwKGlGi2
SwKGlGi4SwKGlGi6XZQojAZBcHItMTGUjAZBcHItMTKUjAZBcHItMTOUjAZBcHItMTSUjAZBcHIt
MTWUjAZBdWctMTCUjAZBdWctMTGUjAZBdWctMTKUjAZBdWctMTOUjAZBdWctMTSUjAZBdWctMTWU
jAZEZWMtMTCUjAZEZWMtMTGUjAZEZWMtMTKUjAZEZWMtMTOUjAZEZWMtMTSUjAZEZWMtMTWUjAZG
ZWItMTGUjAZGZWItMTKUjAZGZWItMTOUjAZGZWItMTSUjAZGZWItMTWUjAZKYW4tMTGUjAZKYW4t
MTKUjAZKYW4tMTOUjAZKYW4tMTSUjAZKYW4tMTWUjAZKYW4tMTaUjAZKdWwtMTCUjAZKdWwtMTGU
jAZKdWwtMTKUjAZKdWwtMTOUjAZKdWwtMTSUjAZKdWwtMTWUjAZKdW4tMTGUjAZKdW4tMTKUjAZK
dW4tMTOUjAZKdW4tMTSUjAZKdW4tMTWUjAZNYXItMTGUjAZNYXItMTKUjAZNYXItMTOUjAZNYXIt
MTSUjAZNYXItMTWUjAZNYXktMTGUjAZNYXktMTKUjAZNYXktMTOUjAZNYXktMTSUjAZNYXktMTWU
jAZOb3YtMTCUjAZOb3YtMTGUjAZOb3YtMTKUjAZOb3YtMTOUjAZOb3YtMTSUjAZOb3YtMTWUjAZP
Y3QtMTCUjAZPY3QtMTGUjAZPY3QtMTKUjAZPY3QtMTOUjAZPY3QtMTSUjAZPY3QtMTWUjAZTZXAt
MTCUjAZTZXAtMTGUjAZTZXAtMTKUjAZTZXAtMTOUjAZTZXAtMTSUjAZTZXAtMTWUZYaUaL1LAoaU
aL9dlCiMBkZlYi0xNpSMBkphbi0xNpRlhpRowl2UKIwGQXByLTExlIwGQXByLTEylIwGQXByLTEz
lIwGQXByLTE0lIwGQXByLTE1lIwGQXVnLTEwlIwGQXVnLTExlIwGQXVnLTEylIwGQXVnLTEzlIwG
QXVnLTE0lIwGQXVnLTE1lIwGRGVjLTEwlIwGRGVjLTExlIwGRGVjLTEylIwGRGVjLTEzlIwGRGVj
LTE0lIwGRGVjLTE1lIwGRmViLTExlIwGRmViLTEylIwGRmViLTEzlIwGRmViLTE0lIwGRmViLTE1
lIwGSmFuLTExlIwGSmFuLTEylIwGSmFuLTEzlIwGSmFuLTE0lIwGSmFuLTE1lIwGSmFuLTE2lIwG
SnVsLTEwlIwGSnVsLTExlIwGSnVsLTEylIwGSnVsLTEzlIwGSnVsLTE0lIwGSnVsLTE1lIwGSnVu
LTEwlIwGSnVuLTExlIwGSnVuLTEylIwGSnVuLTEzlIwGSnVuLTE0lIwGSnVuLTE1lIwGTWFyLTEx
lIwGTWFyLTEylIwGTWFyLTEzlIwGTWFyLTE0lIwGTWFyLTE1lIwGTWF5LTExlIwGTWF5LTEylIwG
TWF5LTEzlIwGTWF5LTE0lIwGTWF5LTE1lIwGTm92LTEwlIwGTm92LTExlIwGTm92LTEylIwGTm92
LTEzlIwGTm92LTE0lIwGTm92LTE1lIwGT2N0LTEwlIwGT2N0LTExlIwGT2N0LTEylIwGT2N0LTEz
lIwGT2N0LTE0lIwGT2N0LTE1lIwGU2VwLTEwlIwGU2VwLTExlIwGU2VwLTEylIwGU2VwLTEzlIwG
U2VwLTE0lIwGU2VwLTE1lGWGlGjFXZRoxmGGlGjISwKGlGjKXZRoy2GGlGjNXZRozmGGlGjQSwKG
lGjSSwKGlGjUSwKGlGjWXZRo12GGlGjZSwKGlGjbSwKGlGjdSwKGlGjfSwKGlGjhSwKGlGjjSwKG
lGjlSwKGlGjnSwKGlGjpSwKGlGjrSwKGlGjtSwKGlGjvSwKGlGjxSwKGlGjzSwKGlGj1SwKGlGj3
SwKGlGj5SwKGlGj7SwKGlGj9SwSGlGoBAQAASwKGlGoDAQAASwKGlGoFAQAASwSGlGoHAQAASwKG
lGoJAQAAXZQojAEwlGjLZYaUdJSMBW1ldGFzlChqDAEAAEsDhpRqEAEAAEsDhpRqEgEAAEsDhpRq
FAEAAEsDhpRqFgEAAEsDhpRqGAEAAEsDhpR0lIwKY2xhc3NfdmFyc5QpjBJtb2RpZmllZF92YXJp
YWJsZXOUXZR1YmhNKYGUfZQoaFB9lCiMCXZhcmlhYmxlc5RdlIwNZG9tYWluX2VkaXRvcpR9lGqr
AgAAXZQoXZQojAlGZWF0dXJlIDGUaFpLAGgOiGVdlCiMCWxvYW5fYW1udJRoWksAaA6IZV2UKIwL
ZnVuZGVkX2FtbnSUaFpLAGgOiGVdlCiMBHRlcm2UaGpLAIwUMzYgbW9udGhzLCA2MCBtb250aHOU
iWVdlCiMCGludF9yYXRllGhaSwBoDohlXZQojAtpbnN0YWxsbWVudJRoWksAaA6IZV2UKIwFZ3Jh
ZGWUaGpLAIwTQSwgQiwgQywgRCwgRSwgRiwgR5SJZV2UKIwJc3ViX2dyYWRllGhqSwCMU0ExLCBB
MiwgQTMsIEE0LCBBNSwgQjEsIEIyLCBCMywgQjQsIEI1LCBDMSwgQzIsIEMzLCBDNCwgQzUsIEQx
LCBEMiwgRDMsIEQ0LCBENSwgLi4ulIllXZQojAplbXBfbGVuZ3RolGhqSwCMYzEgeWVhciwgMiB5
ZWFycywgMyB5ZWFycywgNCB5ZWFycywgNSB5ZWFycywgNiB5ZWFycywgNyB5ZWFycywgOCB5ZWFy
cywgOSB5ZWFycywgMTArIHllYXJzLCA8IDEgeWVhcpSJZV2UKIwOaG9tZV9vd25lcnNoaXCUaGpL
AIwTTU9SVEdBR0UsIE9XTiwgUkVOVJSJZV2UKIwKYW5udWFsX2luY5RoWksAaA6IZV2UKIwTdmVy
aWZpY2F0aW9uX3N0YXR1c5RoaksAjCdOb3QgVmVyaWZpZWQsIFNvdXJjZSBWZXJpZmllZCwgVmVy
aWZpZWSUiWVdlCiMB2lzc3VlX2SUaGpLAIwWRGVjLTExLCBOb3YtMTEsIE9jdC0xMZSJZV2UKIwL
bG9hbl9zdGF0dXOUaGpLAIxhQ2hhcmdlZCBPZmYsIEN1cnJlbnQsIERlZmF1bHQsIEZ1bGx5IFBh
aWQsIEluIEdyYWNlIFBlcmlvZCwgTGF0ZSAoMTYtMzAgZGF5cyksIExhdGUgKDMxLTEyMCBkYXlz
KZSJZV2UKIwHcHVycG9zZZRoaksAjJpjYXIsIGNyZWRpdF9jYXJkLCBkZWJ0X2NvbnNvbGlkYXRp
b24sIGhvbWVfaW1wcm92ZW1lbnQsIGhvdXNlLCBtYWpvcl9wdXJjaGFzZSwgbWVkaWNhbCwgbW92
aW5nLCBvdGhlciwgcmVuZXdhYmxlX2VuZXJneSwgc21hbGxfYnVzaW5lc3MsIHZhY2F0aW9uLCB3
ZWRkaW5nlIllXZQojAphZGRyX3N0YXRllGhqSwCMU0FLLCBBTCwgQVIsIEFaLCBDQSwgQ08sIENU
LCBEQywgREUsIEZMLCBHQSwgSEksIElMLCBLUywgS1ksIExBLCBNQSwgTUQsIE1JLCBNTiwgLi4u
lIllXZQojANkdGmUaFpLAGgOiGVdlCiMC2RlbGlucV8yeXJzlGhaSwBoDohlXZQojA5pbnFfbGFz
dF82bXRoc5RoWksAaA6IZV2UKIwWbXRoc19zaW5jZV9sYXN0X2RlbGlucZRoWksAaA6IZV2UKIwW
bXRoc19zaW5jZV9sYXN0X3JlY29yZJRoWksAaA6IZV2UKIwIb3Blbl9hY2OUaFpLAGgOiGVdlCiM
B3B1Yl9yZWOUaFpLAGgOiGVdlCiMCXJldm9sX2JhbJRoWksAaA6IZV2UKIwKcmV2b2xfdXRpbJRo
WksAaA6IZV2UKIwJdG90YWxfYWNjlGhaSwBoDohlXZQojBNpbml0aWFsX2xpc3Rfc3RhdHVzlGhq
SwBopollXZQojAlvdXRfcHJuY3CUaFpLAGgOiGVdlCiMC3RvdGFsX3B5bW50lGhaSwBoDohlXZQo
jA90b3RhbF9yZWNfcHJuY3CUaFpLAGgOiGVdlCiMDXRvdGFsX3JlY19pbnSUaFpLAGgOiGVdlCiM
EnRvdGFsX3JlY19sYXRlX2ZlZZRoWksAaA6IZV2UKIwKcmVjb3Zlcmllc5RoWksAaA6IZV2UKIwX
Y29sbGVjdGlvbl9yZWNvdmVyeV9mZWWUaFpLAGgOiGVdlCiMDGxhc3RfcHltbnRfZJRoaksAjKNB
cHItMTIsIEFwci0xMywgQXByLTE0LCBBcHItMTUsIEF1Zy0xMiwgQXVnLTEzLCBBdWctMTQsIEF1
Zy0xNSwgRGVjLTExLCBEZWMtMTIsIERlYy0xMywgRGVjLTE0LCBEZWMtMTUsIEZlYi0xMiwgRmVi
LTEzLCBGZWItMTQsIEZlYi0xNSwgSmFuLTEyLCBKYW4tMTMsIEphbi0xNCwgLi4ulIllXZQojA9s
YXN0X3B5bW50X2FtbnSUaFpLAGgOiGVdlCiMGmNvbGxlY3Rpb25zXzEyX210aHNfZXhfbWVklGhq
SwCMAzAuMJSIZV2UKIwbbXRoc19zaW5jZV9sYXN0X21ham9yX2Rlcm9nlGhaSwBoDohlXZQojBBh
bm51YWxfaW5jX2pvaW50lGhaSwBoDohlXZQojAlkdGlfam9pbnSUaFpLAGgOiGVdlCiMGXZlcmlm
aWNhdGlvbl9zdGF0dXNfam9pbnSUaFpLAGgOiGVdlCiMDmFjY19ub3dfZGVsaW5xlGhqSwCMAzAu
MJSIZV2UKIwMdG90X2NvbGxfYW10lGhaSwBoDohlXZQojAt0b3RfY3VyX2JhbJRoWksAaA6IZV2U
KIwLb3Blbl9hY2NfNm2UaFpLAGgOiGVdlCiMCm9wZW5faWxfNm2UaFpLAGgOiGVdlCiMC29wZW5f
aWxfMTJtlGhaSwBoDohlXZQojAtvcGVuX2lsXzI0bZRoWksAaA6IZV2UKIwSbXRoc19zaW5jZV9y
Y250X2lslGhaSwBoDohlXZQojAx0b3RhbF9iYWxfaWyUaFpLAGgOiGVdlCiMB2lsX3V0aWyUaFpL
AGgOiGVdlCiMC29wZW5fcnZfMTJtlGhaSwBoDohlXZQojAtvcGVuX3J2XzI0bZRoWksAaA6IZV2U
KIwKbWF4X2JhbF9iY5RoWksAaA6IZV2UKIwIYWxsX3V0aWyUaFpLAGgOiGVdlCiMEHRvdGFsX3Jl
dl9oaV9saW2UaFpLAGgOiGVdlCiMBmlucV9maZRoWksAaA6IZV2UKIwLdG90YWxfY3VfdGyUaFpL
AGgOiGVdlCiMDGlucV9sYXN0XzEybZRoWksAaA6IZV2UKIwIZ29vZF9iYWSUaGpLAYwEMCwgMZSI
ZV2UKIwOZW1wX2xlbmd0aF9pbnSUaFpLAGgOiGVdlCiMFWVhcmxpZXN0X2NyX2xpbmVfZGF0ZZRo
/0sAaA6IZV2UKIwbbXRoc19zaW5jZV9lYXJsaWVzdF9jcl9saW5llGhaSwBoDohlXZQojAh0ZXJt
X2ludJRoWksAaA6IZV2UKIwMaXNzdWVfZF9kYXRllGj/SwBoDohlXZQojBJtdGhzX3NpbmNlX2lz
c3VlX2SUaFpLAGgOiGVdlCiMBGRlc2OUag4BAABLAmgOiWVdlCiMEGVhcmxpZXN0X2NyX2xpbmWU
ag4BAABLAmgOiWVlc2hISwF1ahkBAAAoarECAABLAoaUarMCAABLAoaUarUCAABLAoaUarcCAABd
lCiMCTM2IG1vbnRoc5SMCTYwIG1vbnRoc5RlhpRqugIAAEsChpRqvAIAAEsChpRqvgIAAF2UKGoo
AQAAaikBAABqKgEAAGorAQAAaiwBAABqLQEAAGouAQAAZYaUasECAABdlCiMAkExlIwCQTKUjAJB
M5SMAkE0lIwCQTWUjAJCMZSMAkIylIwCQjOUjAJCNJSMAkI1lIwCQzGUjAJDMpSMAkMzlIwCQzSU
jAJDNZSMAkQxlIwCRDKUjAJEM5SMAkQ0lIwCRDWUjAJFMZSMAkUylIwCRTOUjAJFNJSMAkU1lIwC
RjGUjAJGMpSMAkYzlIwCRjSUjAJGNZSMAkcxlIwCRzKUjAJHM5SMAkc0lIwCRzWUZYaUasQCAABd
lCiMBjEgeWVhcpSMBzIgeWVhcnOUjAczIHllYXJzlIwHNCB5ZWFyc5SMBzUgeWVhcnOUjAc2IHll
YXJzlIwHNyB5ZWFyc5SMBzggeWVhcnOUjAc5IHllYXJzlIwJMTArIHllYXJzlIwIPCAxIHllYXKU
ZYaUascCAABdlCiMCE1PUlRHQUdFlIwDT1dOlIwEUkVOVJRlhpRqygIAAEsChpRqzAIAAF2UKIwM
Tm90IFZlcmlmaWVklIwPU291cmNlIFZlcmlmaWVklIwIVmVyaWZpZWSUZYaUas8CAABdlCiMBkRl
Yy0xMZSMBk5vdi0xMZSMBk9jdC0xMZRlhpRq0gIAAF2UKIwLQ2hhcmdlZCBPZmaUjAdDdXJyZW50
lIwHRGVmYXVsdJSMCkZ1bGx5IFBhaWSUjA9JbiBHcmFjZSBQZXJpb2SUjBFMYXRlICgxNi0zMCBk
YXlzKZSMEkxhdGUgKDMxLTEyMCBkYXlzKZRlhpRq1QIAAF2UKIwDY2FylIwLY3JlZGl0X2NhcmSU
jBJkZWJ0X2NvbnNvbGlkYXRpb26UjBBob21lX2ltcHJvdmVtZW50lIwFaG91c2WUjA5tYWpvcl9w
dXJjaGFzZZSMB21lZGljYWyUjAZtb3ZpbmeUjAVvdGhlcpSMEHJlbmV3YWJsZV9lbmVyZ3mUjA5z
bWFsbF9idXNpbmVzc5SMCHZhY2F0aW9ulIwHd2VkZGluZ5RlhpRq2AIAAF2UKIwCQUuUjAJBTJSM
AkFSlIwCQVqUjAJDQZSMAkNPlIwCQ1SUjAJEQ5SMAkRFlIwCRkyUjAJHQZSMAkhJlIwCSUyUjAJL
U5SMAktZlIwCTEGUjAJNQZSMAk1ElIwCTUmUjAJNTpSMAk1PlIwCTVOUjAJNVJSMAk5DlIwCTkiU
jAJOSpSMAk5NlIwCTlaUjAJOWZSMAk9IlIwCT0uUjAJPUpSMAlBBlIwCUkmUjAJTQ5SMAlNElIwC
VE6UjAJUWJSMAlVUlIwCVkGUjAJWVJSMAldBlIwCV0mUjAJXVpSMAldZlGWGlGrbAgAASwKGlGrd
AgAASwKGlGrfAgAASwKGlGrhAgAASwKGlGrjAgAASwKGlGrlAgAASwKGlGrnAgAASwKGlGrpAgAA
SwKGlGrrAgAASwKGlGrtAgAASwKGlGrvAgAAXZRopmGGlGrxAgAASwKGlGrzAgAASwKGlGr1AgAA
SwKGlGr3AgAASwKGlGr5AgAASwKGlGr7AgAASwKGlGr9AgAASwKGlGr/AgAAXZQojAZBcHItMTKU
jAZBcHItMTOUjAZBcHItMTSUjAZBcHItMTWUjAZBdWctMTKUjAZBdWctMTOUjAZBdWctMTSUjAZB
dWctMTWUjAZEZWMtMTGUjAZEZWMtMTKUjAZEZWMtMTOUjAZEZWMtMTSUjAZEZWMtMTWUjAZGZWIt
MTKUjAZGZWItMTOUjAZGZWItMTSUjAZGZWItMTWUjAZKYW4tMTKUjAZKYW4tMTOUjAZKYW4tMTSU
jAZKYW4tMTWUjAZKYW4tMTaUjAZKdWwtMTKUjAZKdWwtMTOUjAZKdWwtMTSUjAZKdWwtMTWUjAZK
dW4tMTKUjAZKdW4tMTOUjAZKdW4tMTSUjAZKdW4tMTWUjAZNYXItMTKUjAZNYXItMTOUjAZNYXIt
MTSUjAZNYXItMTWUjAZNYXktMTKUjAZNYXktMTOUjAZNYXktMTSUjAZNYXktMTWUjAZOb3YtMTGU
jAZOb3YtMTKUjAZOb3YtMTOUjAZOb3YtMTSUjAZOb3YtMTWUjAZPY3QtMTKUjAZPY3QtMTOUjAZP
Y3QtMTSUjAZPY3QtMTWUjAZTZXAtMTKUjAZTZXAtMTOUjAZTZXAtMTSUjAZTZXAtMTWUZYaUagID
AABLAoaUagQDAABdlGoFAwAAYYaUagcDAABLAoaUagkDAABLAoaUagsDAABLAoaUag0DAABLAoaU
ag8DAABdlGoQAwAAYYaUahIDAABLAoaUahQDAABLAoaUahYDAABLAoaUahgDAABLAoaUahoDAABL
AoaUahwDAABLAoaUah4DAABLAoaUaiADAABLAoaUaiIDAABLAoaUaiQDAABLAoaUaiYDAABLAoaU
aigDAABLAoaUaioDAABLAoaUaiwDAABLAoaUai4DAABLAoaUajADAABLAoaUajIDAABLAoaUajQD
AABdlChqmgIAAGjLZYaUajcDAABLAoaUajkDAABLBIaUajsDAABLAoaUaj0DAABLAoaUaj8DAABL
BIaUakEDAABLAoaUdJRqnQIAAGpDAwAASwOGlGpFAwAASwOGlIaUaqUCAAApaqYCAABdlHViaE0p
gZR9lChoUH2UKGqrAgAAXZRqrQIAAH2UaqsCAABdlChdlCiMCWxvYW5fYW1udJRoWksAaA6IZV2U
KIwLZnVuZGVkX2FtbnSUaFpLAGgOiGVdlCiMBHRlcm2UaGpLAIwUMzYgbW9udGhzLCA2MCBtb250
aHOUiWVdlCiMCGludF9yYXRllGhaSwBoDohlXZQojAtpbnN0YWxsbWVudJRoWksAaA6IZV2UKIwF
Z3JhZGWUaGpLAIwTQSwgQiwgQywgRCwgRSwgRiwgR5SJZV2UKIwJc3ViX2dyYWRllGhqSwCMU0Ex
LCBBMiwgQTMsIEE0LCBBNSwgQjEsIEIyLCBCMywgQjQsIEI1LCBDMSwgQzIsIEMzLCBDNCwgQzUs
IEQxLCBEMiwgRDMsIEQ0LCBENSwgLi4ulIllXZQojAplbXBfbGVuZ3RolGhqSwCMYzEgeWVhciwg
MiB5ZWFycywgMyB5ZWFycywgNCB5ZWFycywgNSB5ZWFycywgNiB5ZWFycywgNyB5ZWFycywgOCB5
ZWFycywgOSB5ZWFycywgMTArIHllYXJzLCA8IDEgeWVhcpSJZV2UKIwOaG9tZV9vd25lcnNoaXCU
aGpLAIwTTU9SVEdBR0UsIE9XTiwgUkVOVJSJZV2UKIwKYW5udWFsX2luY5RoWksAaA6IZV2UKIwT
dmVyaWZpY2F0aW9uX3N0YXR1c5RoaksAjCdOb3QgVmVyaWZpZWQsIFNvdXJjZSBWZXJpZmllZCwg
VmVyaWZpZWSUiWVdlCiMB2lzc3VlX2SUaGpLAIwWRGVjLTExLCBOb3YtMTEsIE9jdC0xMZSJZV2U
KIwLbG9hbl9zdGF0dXOUaGpLAIxhQ2hhcmdlZCBPZmYsIEN1cnJlbnQsIERlZmF1bHQsIEZ1bGx5
IFBhaWQsIEluIEdyYWNlIFBlcmlvZCwgTGF0ZSAoMTYtMzAgZGF5cyksIExhdGUgKDMxLTEyMCBk
YXlzKZSJZV2UKIwHcHVycG9zZZRoaksAjJpjYXIsIGNyZWRpdF9jYXJkLCBkZWJ0X2NvbnNvbGlk
YXRpb24sIGhvbWVfaW1wcm92ZW1lbnQsIGhvdXNlLCBtYWpvcl9wdXJjaGFzZSwgbWVkaWNhbCwg
bW92aW5nLCBvdGhlciwgcmVuZXdhYmxlX2VuZXJneSwgc21hbGxfYnVzaW5lc3MsIHZhY2F0aW9u
LCB3ZWRkaW5nlIllXZQojAphZGRyX3N0YXRllGhqSwCMU0FLLCBBTCwgQVIsIEFaLCBDQSwgQ08s
IENULCBEQywgREUsIEZMLCBHQSwgSEksIElMLCBLUywgS1ksIExBLCBNQSwgTUQsIE1JLCBNTiwg
Li4ulIllXZQojANkdGmUaFpLAGgOiGVdlCiMC2RlbGlucV8yeXJzlGhaSwBoDohlXZQojA5pbnFf
bGFzdF82bXRoc5RoWksAaA6IZV2UKIwWbXRoc19zaW5jZV9sYXN0X2RlbGlucZRoWksAaA6IZV2U
KIwWbXRoc19zaW5jZV9sYXN0X3JlY29yZJRoWksAaA6IZV2UKIwIb3Blbl9hY2OUaFpLAGgOiGVd
lCiMB3B1Yl9yZWOUaFpLAGgOiGVdlCiMCXJldm9sX2JhbJRoWksAaA6IZV2UKIwKcmV2b2xfdXRp
bJRoWksAaA6IZV2UKIwJdG90YWxfYWNjlGhaSwBoDohlXZQojBNpbml0aWFsX2xpc3Rfc3RhdHVz
lGhqSwBopollXZQojAlvdXRfcHJuY3CUaFpLAGgOiGVdlCiMC3RvdGFsX3B5bW50lGhaSwBoDohl
XZQojA90b3RhbF9yZWNfcHJuY3CUaFpLAGgOiGVdlCiMDXRvdGFsX3JlY19pbnSUaFpLAGgOiGVd
lCiMEnRvdGFsX3JlY19sYXRlX2ZlZZRoWksAaA6IZV2UKIwKcmVjb3Zlcmllc5RoWksAaA6IZV2U
KIwXY29sbGVjdGlvbl9yZWNvdmVyeV9mZWWUaFpLAGgOiGVdlCiMDGxhc3RfcHltbnRfZJRoaksA
jKNBcHItMTIsIEFwci0xMywgQXByLTE0LCBBcHItMTUsIEF1Zy0xMiwgQXVnLTEzLCBBdWctMTQs
IEF1Zy0xNSwgRGVjLTExLCBEZWMtMTIsIERlYy0xMywgRGVjLTE0LCBEZWMtMTUsIEZlYi0xMiwg
RmViLTEzLCBGZWItMTQsIEZlYi0xNSwgSmFuLTEyLCBKYW4tMTMsIEphbi0xNCwgLi4ulIllXZQo
jA9sYXN0X3B5bW50X2FtbnSUaFpLAGgOiGVdlCiMGmNvbGxlY3Rpb25zXzEyX210aHNfZXhfbWVk
lGhqSwCMAzAuMJSIZV2UKIwbbXRoc19zaW5jZV9sYXN0X21ham9yX2Rlcm9nlGhaSwBoDohlXZQo
jBBhbm51YWxfaW5jX2pvaW50lGhaSwBoDohlXZQojAlkdGlfam9pbnSUaFpLAGgOiGVdlCiMGXZl
cmlmaWNhdGlvbl9zdGF0dXNfam9pbnSUaFpLAGgOiGVdlCiMDmFjY19ub3dfZGVsaW5xlGhqSwCM
AzAuMJSIZV2UKIwMdG90X2NvbGxfYW10lGhaSwBoDohlXZQojAt0b3RfY3VyX2JhbJRoWksAaA6I
ZV2UKIwLb3Blbl9hY2NfNm2UaFpLAGgOiGVdlCiMCm9wZW5faWxfNm2UaFpLAGgOiGVdlCiMC29w
ZW5faWxfMTJtlGhaSwBoDohlXZQojAtvcGVuX2lsXzI0bZRoWksAaA6IZV2UKIwSbXRoc19zaW5j
ZV9yY250X2lslGhaSwBoDohlXZQojAx0b3RhbF9iYWxfaWyUaFpLAGgOiGVdlCiMB2lsX3V0aWyU
aFpLAGgOiGVdlCiMC29wZW5fcnZfMTJtlGhaSwBoDohlXZQojAtvcGVuX3J2XzI0bZRoWksAaA6I
ZV2UKIwKbWF4X2JhbF9iY5RoWksAaA6IZV2UKIwIYWxsX3V0aWyUaFpLAGgOiGVdlCiMEHRvdGFs
X3Jldl9oaV9saW2UaFpLAGgOiGVdlCiMBmlucV9maZRoWksAaA6IZV2UKIwLdG90YWxfY3VfdGyU
aFpLAGgOiGVdlCiMDGlucV9sYXN0XzEybZRoWksAaA6IZV2UKIwIZ29vZF9iYWSUaGpLAYwEMCwg
MZSIZV2UKIwEZGVzY5RqDgEAAEsCaA6JZV2UKIwQZWFybGllc3RfY3JfbGluZZRqDgEAAEsCaA6J
ZWVzaEhLAXVqGQEAACiMCWxvYW5fYW1udJRLAoaUjAtmdW5kZWRfYW1udJRLAoaUjAR0ZXJtlF2U
KIwJMzYgbW9udGhzlIwJNjAgbW9udGhzlGWGlIwIaW50X3JhdGWUSwKGlIwLaW5zdGFsbG1lbnSU
SwKGlIwFZ3JhZGWUXZQoaigBAABqKQEAAGoqAQAAaisBAABqLAEAAGotAQAAai4BAABlhpSMCXN1
Yl9ncmFkZZRdlCiMAkExlIwCQTKUjAJBM5SMAkE0lIwCQTWUjAJCMZSMAkIylIwCQjOUjAJCNJSM
AkI1lIwCQzGUjAJDMpSMAkMzlIwCQzSUjAJDNZSMAkQxlIwCRDKUjAJEM5SMAkQ0lIwCRDWUjAJF
MZSMAkUylIwCRTOUjAJFNJSMAkU1lIwCRjGUjAJGMpSMAkYzlIwCRjSUjAJGNZSMAkcxlIwCRzKU
jAJHM5SMAkc0lIwCRzWUZYaUjAplbXBfbGVuZ3RolF2UKIwGMSB5ZWFylIwHMiB5ZWFyc5SMBzMg
eWVhcnOUjAc0IHllYXJzlIwHNSB5ZWFyc5SMBzYgeWVhcnOUjAc3IHllYXJzlIwHOCB5ZWFyc5SM
BzkgeWVhcnOUjAkxMCsgeWVhcnOUjAg8IDEgeWVhcpRlhpSMDmhvbWVfb3duZXJzaGlwlF2UKIwI
TU9SVEdBR0WUjANPV06UjARSRU5UlGWGlIwKYW5udWFsX2luY5RLAoaUjBN2ZXJpZmljYXRpb25f
c3RhdHVzlF2UKIwMTm90IFZlcmlmaWVklIwPU291cmNlIFZlcmlmaWVklIwIVmVyaWZpZWSUZYaU
jAdpc3N1ZV9klF2UKIwGRGVjLTExlIwGTm92LTExlIwGT2N0LTExlGWGlIwLbG9hbl9zdGF0dXOU
XZQojAtDaGFyZ2VkIE9mZpSMB0N1cnJlbnSUjAdEZWZhdWx0lIwKRnVsbHkgUGFpZJSMD0luIEdy
YWNlIFBlcmlvZJSMEUxhdGUgKDE2LTMwIGRheXMplIwSTGF0ZSAoMzEtMTIwIGRheXMplGWGlIwH
cHVycG9zZZRdlCiMA2NhcpSMC2NyZWRpdF9jYXJklIwSZGVidF9jb25zb2xpZGF0aW9ulIwQaG9t
ZV9pbXByb3ZlbWVudJSMBWhvdXNllIwObWFqb3JfcHVyY2hhc2WUjAdtZWRpY2FslIwGbW92aW5n
lIwFb3RoZXKUjBByZW5ld2FibGVfZW5lcmd5lIwOc21hbGxfYnVzaW5lc3OUjAh2YWNhdGlvbpSM
B3dlZGRpbmeUZYaUjAphZGRyX3N0YXRllF2UKIwCQUuUjAJBTJSMAkFSlIwCQVqUjAJDQZSMAkNP
lIwCQ1SUjAJEQ5SMAkRFlIwCRkyUjAJHQZSMAkhJlIwCSUyUjAJLU5SMAktZlIwCTEGUjAJNQZSM
Ak1ElIwCTUmUjAJNTpSMAk1PlIwCTVOUjAJNVJSMAk5DlIwCTkiUjAJOSpSMAk5NlIwCTlaUjAJO
WZSMAk9IlIwCT0uUjAJPUpSMAlBBlIwCUkmUjAJTQ5SMAlNElIwCVE6UjAJUWJSMAlVUlIwCVkGU
jAJWVJSMAldBlIwCV0mUjAJXVpSMAldZlGWGlIwDZHRplEsChpSMC2RlbGlucV8yeXJzlEsChpSM
DmlucV9sYXN0XzZtdGhzlEsChpSMFm10aHNfc2luY2VfbGFzdF9kZWxpbnGUSwKGlIwWbXRoc19z
aW5jZV9sYXN0X3JlY29yZJRLAoaUjAhvcGVuX2FjY5RLAoaUjAdwdWJfcmVjlEsChpSMCXJldm9s
X2JhbJRLAoaUjApyZXZvbF91dGlslEsChpSMCXRvdGFsX2FjY5RLAoaUjBNpbml0aWFsX2xpc3Rf
c3RhdHVzlF2UaKZhhpSMCW91dF9wcm5jcJRLAoaUjAt0b3RhbF9weW1udJRLAoaUjA90b3RhbF9y
ZWNfcHJuY3CUSwKGlIwNdG90YWxfcmVjX2ludJRLAoaUjBJ0b3RhbF9yZWNfbGF0ZV9mZWWUSwKG
lIwKcmVjb3Zlcmllc5RLAoaUjBdjb2xsZWN0aW9uX3JlY292ZXJ5X2ZlZZRLAoaUjAxsYXN0X3B5
bW50X2SUXZQojAZBcHItMTKUjAZBcHItMTOUjAZBcHItMTSUjAZBcHItMTWUjAZBdWctMTKUjAZB
dWctMTOUjAZBdWctMTSUjAZBdWctMTWUjAZEZWMtMTGUjAZEZWMtMTKUjAZEZWMtMTOUjAZEZWMt
MTSUjAZEZWMtMTWUjAZGZWItMTKUjAZGZWItMTOUjAZGZWItMTSUjAZGZWItMTWUjAZKYW4tMTKU
jAZKYW4tMTOUjAZKYW4tMTSUjAZKYW4tMTWUjAZKYW4tMTaUjAZKdWwtMTKUjAZKdWwtMTOUjAZK
dWwtMTSUjAZKdWwtMTWUjAZKdW4tMTKUjAZKdW4tMTOUjAZKdW4tMTSUjAZKdW4tMTWUjAZNYXIt
MTKUjAZNYXItMTOUjAZNYXItMTSUjAZNYXItMTWUjAZNYXktMTKUjAZNYXktMTOUjAZNYXktMTSU
jAZNYXktMTWUjAZOb3YtMTGUjAZOb3YtMTKUjAZOb3YtMTOUjAZOb3YtMTSUjAZOb3YtMTWUjAZP
Y3QtMTKUjAZPY3QtMTOUjAZPY3QtMTSUjAZPY3QtMTWUjAZTZXAtMTKUjAZTZXAtMTOUjAZTZXAt
MTSUjAZTZXAtMTWUZYaUjA9sYXN0X3B5bW50X2FtbnSUSwKGlIwaY29sbGVjdGlvbnNfMTJfbXRo
c19leF9tZWSUXZSMAzAuMJRhhpSMG210aHNfc2luY2VfbGFzdF9tYWpvcl9kZXJvZ5RLAoaUjBBh
bm51YWxfaW5jX2pvaW50lEsChpSMCWR0aV9qb2ludJRLAoaUjBl2ZXJpZmljYXRpb25fc3RhdHVz
X2pvaW50lEsChpSMDmFjY19ub3dfZGVsaW5xlF2UjAMwLjCUYYaUjAx0b3RfY29sbF9hbXSUSwKG
lIwLdG90X2N1cl9iYWyUSwKGlIwLb3Blbl9hY2NfNm2USwKGlIwKb3Blbl9pbF82bZRLAoaUjAtv
cGVuX2lsXzEybZRLAoaUjAtvcGVuX2lsXzI0bZRLAoaUjBJtdGhzX3NpbmNlX3JjbnRfaWyUSwKG
lIwMdG90YWxfYmFsX2lslEsChpSMB2lsX3V0aWyUSwKGlIwLb3Blbl9ydl8xMm2USwKGlIwLb3Bl
bl9ydl8yNG2USwKGlIwKbWF4X2JhbF9iY5RLAoaUjAhhbGxfdXRpbJRLAoaUjBB0b3RhbF9yZXZf
aGlfbGltlEsChpSMBmlucV9maZRLAoaUjAt0b3RhbF9jdV90bJRLAoaUjAxpbnFfbGFzdF8xMm2U
SwKGlIwIZ29vZF9iYWSUXZQoapoCAABoy2WGlHSUap0CAACMBGRlc2OUSwOGlIwQZWFybGllc3Rf
Y3JfbGluZZRLA4aUhpRqpQIAAClqpgIAAF2UdWJldS4=
</properties>
		<properties node_id="11" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x07\x80\x00\x00\x01\x0e\x00\x00\r\x16\x00\x00\x02\xeb\x00\x00\x07\x80\x00\x00\x01\x0e\x00\x00\r\x16\x00\x00\x02\xeb\x00\x00\x00\x01\x00\x00\x00\x00\x07\x80\x00\x00\x07\x80\x00\x00\x01\x0e\x00\x00\r\x16\x00\x00\x02\xeb', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="12" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x07\x80\x00\x00\x00\x00\x00\x00\x0e\xff\x00\x00\x047\x00\x00\x07\x80\x00\x00\x00%\x00\x00\x0e\xff\x00\x00\x047\x00\x00\x00\x01\x02\x00\x00\x00\x07\x80\x00\x00\x07\x80\x00\x00\x00%\x00\x00\x0e\xff\x00\x00\x047', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="13" format="pickle">gASVpxQAAAAAAAB9lCiMC2F1dG9fY29tbWl0lIiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBNpZ25v
cmVfbmV3X2ZlYXR1cmVzlImME3NhdmVkV2lkZ2V0R2VvbWV0cnmUQ0IB2dDLAAMAAAAAB4AAAAAL
AAALAwAAAq8AAAeAAAAAMAAACwMAAAKvAAAAAQAAAAAHgAAAB4AAAAAwAAALAwAAAq+UjBJ1c2Vf
aW5wdXRfZmVhdHVyZXOUiYwLX192ZXJzaW9uX1+USwGMEGNvbnRleHRfc2V0dGluZ3OUXZQojBVv
cmFuZ2V3aWRnZXQuc2V0dGluZ3OUjAdDb250ZXh0lJOUKYGUfZQojAZ2YWx1ZXOUfZQojBFkb21h
aW5fcm9sZV9oaW50c5R9lCiMC2Z1bmRlZF9hbW50lEsChpSMCWF2YWlsYWJsZZRLAIaUjAtpbnN0
YWxsbWVudJRLAoaUaBVLAYaUjApyZXZvbF91dGlslEsChpRoFUsChpSMAmlklEsChpRoFUsDhpSM
ClVubmFtZWQ6IDCUSwKGlGgVSwSGlIwJRmVhdHVyZSAxlEsChpRoFUsFhpSMCW91dF9wcm5jcJRL
AoaUaBVLBoaUjAt0b3RhbF9weW1udJRLAoaUaBVLB4aUjA90b3RhbF9yZWNfcHJuY3CUSwKGlGgV
SwiGlIwNdG90YWxfcmVjX2ludJRLAoaUaBVLCYaUjBJ0b3RhbF9yZWNfbGF0ZV9mZWWUSwKGlGgV
SwqGlIwWbXRoc19zaW5jZV9sYXN0X3JlY29yZJRLAoaUaBVLC4aUjAllbXBfdGl0bGWUSwOGlGgV
SwyGlIwIemlwX2NvZGWUSwOGlGgVSw2GlIwWbXRoc19zaW5jZV9sYXN0X2RlbGlucZRLAoaUaBVL
DoaUjAV0aXRsZZRLA4aUaBVLD4aUjAN1cmyUSwOGlGgVSxCGlIwKcmVjb3Zlcmllc5RLAoaUaBVL
EYaUjBdjb2xsZWN0aW9uX3JlY292ZXJ5X2ZlZZRLAoaUaBVLEoaUjAxpbnFfbGFzdF8xMm2USwKG
lGgVSxOGlIwPbGFzdF9weW1udF9hbW50lEsChpRoFUsUhpSMGmNvbGxlY3Rpb25zXzEyX210aHNf
ZXhfbWVklEsBhpRoFUsVhpSMCGFsbF91dGlslEsChpRoFUsWhpSMDHRvdF9jb2xsX2FtdJRLAoaU
aBVLF4aUjAt0b3RhbF9jdV90bJRLAoaUaBVLGIaUjAtkZWxpbnFfMnlyc5RLAoaUaBVLGYaUjA5h
Y2Nfbm93X2RlbGlucZRLAYaUaBVLGoaUjAptYXhfYmFsX2JjlEsChpRoFUsbhpSMBmlucV9maZRL
AoaUaBVLHIaUjBB0b3RhbF9yZXZfaGlfbGltlEsChpRoFUsdhpSMC2xvYW5fc3RhdHVzlEsBhpRo
FUsehpSMB3B1Yl9yZWOUSwKGlGgVSx+GlIwbbXRoc19zaW5jZV9sYXN0X21ham9yX2Rlcm9nlEsC
hpRoFUsghpSMEGFubnVhbF9pbmNfam9pbnSUSwKGlGgVSyGGlIwEZGVzY5RLA4aUaBVLIoaUjBBl
YXJsaWVzdF9jcl9saW5llEsDhpRoFUsjhpSMCWR0aV9qb2ludJRLAoaUaBVLJIaUjAx0b3RhbF9i
YWxfaWyUSwKGlGgVSyWGlIwLb3Blbl9ydl8yNG2USwKGlGgVSyaGlIwHaWxfdXRpbJRLAoaUaBVL
J4aUjAtvcGVuX3J2XzEybZRLAoaUaBVLKIaUjBJtdGhzX3NpbmNlX3JjbnRfaWyUSwKGlGgVSymG
lIwZdmVyaWZpY2F0aW9uX3N0YXR1c19qb2ludJRLAoaUaBVLKoaUjAt0b3RfY3VyX2JhbJRLAoaU
aBVLK4aUjAtvcGVuX2FjY182bZRLAoaUaBVLLIaUjAtvcGVuX2lsXzI0bZRLAoaUaBVLLYaUjAtv
cGVuX2lsXzEybZRLAoaUaBVLLoaUjApvcGVuX2lsXzZtlEsChpRoFUsvhpSMCWxvYW5fYW1udJRL
AoaUjAlhdHRyaWJ1dGWUSwCGlIwEdGVybZRLAYaUaKZLAYaUjAltZW1iZXJfaWSUSwKGlGimSwKG
lIwIaW50X3JhdGWUSwKGlGimSwOGlIwFZ3JhZGWUSwGGlGimSwSGlIwJc3ViX2dyYWRllEsBhpRo
pksFhpSMD2Z1bmRlZF9hbW50X2ludpRLAoaUaKZLBoaUjAplbXBfbGVuZ3RolEsBhpRopksHhpSM
DmhvbWVfb3duZXJzaGlwlEsBhpRopksIhpSMCmFubnVhbF9pbmOUSwKGlGimSwmGlIwTdmVyaWZp
Y2F0aW9uX3N0YXR1c5RLAYaUaKZLCoaUjAdpc3N1ZV9klEsBhpRopksLhpSMB3B1cnBvc2WUSwGG
lGimSwyGlIwKYWRkcl9zdGF0ZZRLAYaUaKZLDYaUjANkdGmUSwKGlGimSw6GlIwOaW5xX2xhc3Rf
Nm10aHOUSwKGlGimSw+GlIwIb3Blbl9hY2OUSwKGlGimSxCGlIwJcmV2b2xfYmFslEsChpRopksR
hpSMCXRvdGFsX2FjY5RLAoaUaKZLEoaUjApweW1udF9wbGFulEsBhpRopksThpSME2luaXRpYWxf
bGlzdF9zdGF0dXOUSwGGlGimSxSGlIwMbGFzdF9weW1udF9klEsBhpRopksVhpSMDmVtcF9sZW5n
dGhfaW50lEsChpRopksWhpSMFWVhcmxpZXN0X2NyX2xpbmVfZGF0ZZRLBIaUaKZLF4aUjBttdGhz
X3NpbmNlX2VhcmxpZXN0X2NyX2xpbmWUSwKGlGimSxiGlIwIdGVybV9pbnSUSwKGlGimSxmGlIwM
aXNzdWVfZF9kYXRllEsEhpRopksahpSMEm10aHNfc2luY2VfaXNzdWVfZJRLAoaUaKZLG4aUjA1v
dXRfcHJuY3BfaW52lEsChpRopkschpSMD3RvdGFsX3B5bW50X2ludpRLAoaUaKZLHYaUjAxuZXh0
X3B5bW50X2SUSwGGlGimSx6GlIwSbGFzdF9jcmVkaXRfcHVsbF9klEsBhpRopksfhpSMC3BvbGlj
eV9jb2RllEsBhpRopksghpSMEGFwcGxpY2F0aW9uX3R5cGWUSwGGlGimSyGGlIwIZ29vZF9iYWSU
SwGGlIwFY2xhc3OUSwCGlHVK/v///4aUaAdLAXWMCmF0dHJpYnV0ZXOUfZQoaCNLAmggSwJoHUsC
aKtLAmikSwJoE0sCaLdLAmioSwForksCaBdLAmixSwFotEsBaLpLAWi9SwFowEsCaMNLAWjGSwFo
bksBaN5LAWjJSwFozEsBaM9LAmhfSwJo0ksCaD5LAmg1SwJo1UsCaHFLAmjYSwJoGksCaNtLAmjh
SwFoJksCaPlLAmgpSwJo/EsCaCxLAmgvSwJoMksCaEdLAmhKSwJo5EsBaFBLAmj/SwFqAgEAAEsB
aFNLAWh0SwJqBQEAAEsBaggBAABLAWh3SwJogEsCaJJLAmhiSwFoWUsCaJVLAmiYSwJooUsCaJ5L
AmibSwJoj0sCaINLAmiJSwJojEsCaIZLAmhlSwJoVksCaGtLAmhoSwJoXEsCaE1LAmjnSwJo6ksE
aO1LAmjwSwJo80sEaPZLAmoLAQAASwF1jAVtZXRhc5R9lChoOEsDaERLA2h6SwNoQUsDaDtLA2h9
SwN1dWJoDCmBlH2UKGgPfZQojBFkb21haW5fcm9sZV9oaW50c5R9lCiMC2Z1bmRlZF9hbW50lEsC
hpSMCWF2YWlsYWJsZZRLAIaUjAtpbnN0YWxsbWVudJRLAoaUahsBAABLAYaUjApyZXZvbF91dGls
lEsChpRqGwEAAEsChpSMCW91dF9wcm5jcJRLAoaUahsBAABLA4aUjAt0b3RhbF9weW1udJRLAoaU
ahsBAABLBIaUjA90b3RhbF9yZWNfcHJuY3CUSwKGlGobAQAASwWGlIwNdG90YWxfcmVjX2ludJRL
AoaUahsBAABLBoaUjBJ0b3RhbF9yZWNfbGF0ZV9mZWWUSwKGlGobAQAASweGlIwWbXRoc19zaW5j
ZV9sYXN0X3JlY29yZJRLAoaUahsBAABLCIaUjBZtdGhzX3NpbmNlX2xhc3RfZGVsaW5xlEsChpRq
GwEAAEsJhpSMCnJlY292ZXJpZXOUSwKGlGobAQAASwqGlIwXY29sbGVjdGlvbl9yZWNvdmVyeV9m
ZWWUSwKGlGobAQAASwuGlIwMaW5xX2xhc3RfMTJtlEsChpRqGwEAAEsMhpSMD2xhc3RfcHltbnRf
YW1udJRLAoaUahsBAABLDYaUjBpjb2xsZWN0aW9uc18xMl9tdGhzX2V4X21lZJRLAYaUahsBAABL
DoaUjAhhbGxfdXRpbJRLAoaUahsBAABLD4aUjAx0b3RfY29sbF9hbXSUSwKGlGobAQAASxCGlIwL
dG90YWxfY3VfdGyUSwKGlGobAQAASxGGlIwLZGVsaW5xXzJ5cnOUSwKGlGobAQAASxKGlIwOYWNj
X25vd19kZWxpbnGUSwGGlGobAQAASxOGlIwKbWF4X2JhbF9iY5RLAoaUahsBAABLFIaUjAZpbnFf
ZmmUSwKGlGobAQAASxWGlIwQdG90YWxfcmV2X2hpX2xpbZRLAoaUahsBAABLFoaUjAtsb2FuX3N0
YXR1c5RLAYaUahsBAABLF4aUjAdwdWJfcmVjlEsChpRqGwEAAEsYhpSMG210aHNfc2luY2VfbGFz
dF9tYWpvcl9kZXJvZ5RLAoaUahsBAABLGYaUjBBhbm51YWxfaW5jX2pvaW50lEsChpRqGwEAAEsa
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
</properties>
		<properties node_id="14" format="pickle">gASVDh4AAAAAAAB9lCiMC2F1dG9fY29tbWl0lIiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBNpZ25v
cmVfbmV3X2ZlYXR1cmVzlImME3NhdmVkV2lkZ2V0R2VvbWV0cnmUQ0IB2dDLAAMAAAAAB4AAAADM
AAAJ1gAAA0YAAAeAAAAA8QAACdYAAANGAAAAAQAAAAAHgAAAB4AAAADxAAAJ1gAAA0aUjBJ1c2Vf
aW5wdXRfZmVhdHVyZXOUiYwLX192ZXJzaW9uX1+USwGMEGNvbnRleHRfc2V0dGluZ3OUXZQojBVv
cmFuZ2V3aWRnZXQuc2V0dGluZ3OUjAdDb250ZXh0lJOUKYGUfZQojAZ2YWx1ZXOUfZQojBFkb21h
aW5fcm9sZV9oaW50c5R9lCiMBHRlcm2USwGGlIwJYXZhaWxhYmxllEsAhpSMBWdyYWRllEsBhpRo
FUsBhpSMCXN1Yl9ncmFkZZRLAYaUaBVLAoaUjAltZW1iZXJfaWSUSwKGlGgVSwOGlIwKZW1wX2xl
bmd0aJRLAYaUaBVLBIaUjA5ob21lX293bmVyc2hpcJRLAYaUaBVLBYaUjBN2ZXJpZmljYXRpb25f
c3RhdHVzlEsBhpRoFUsGhpSMCnB5bW50X3BsYW6USwGGlGgVSweGlIwLcG9saWN5X2NvZGWUSwGG
lGgVSwiGlIwSbGFzdF9jcmVkaXRfcHVsbF9klEsBhpRoFUsJhpSMDG5leHRfcHltbnRfZJRLAYaU
aBVLCoaUjAdpc3N1ZV9klEsBhpRoFUsLhpSMEGFwcGxpY2F0aW9uX3R5cGWUSwGGlGgVSwyGlIwK
YWRkcl9zdGF0ZZRLAYaUaBVLDYaUjAdwdXJwb3NllEsBhpRoFUsOhpSME2luaXRpYWxfbGlzdF9z
dGF0dXOUSwGGlGgVSw+GlIwMbGFzdF9weW1udF9klEsBhpRoFUsQhpSMFWVhcmxpZXN0X2NyX2xp
bmVfZGF0ZZRLBIaUaBVLEYaUjAxpc3N1ZV9kX2RhdGWUSwSGlGgVSxKGlIwJbG9hbl9hbW50lEsC
hpSMCWF0dHJpYnV0ZZRLAIaUjAhpbnRfcmF0ZZRLAoaUaE9LAYaUjAphbm51YWxfaW5jlEsChpRo
T0sChpSMA2R0aZRLAoaUaE9LA4aUjA5pbnFfbGFzdF82bXRoc5RLAoaUaE9LBIaUjAhvcGVuX2Fj
Y5RLAoaUaE9LBYaUjA9mdW5kZWRfYW1udF9pbnaUSwKGlGhPSwaGlIwJcmV2b2xfYmFslEsChpRo
T0sHhpSMCXRvdGFsX2FjY5RLAoaUaE9LCIaUjA5lbXBfbGVuZ3RoX2ludJRLAoaUaE9LCYaUjBtt
dGhzX3NpbmNlX2VhcmxpZXN0X2NyX2xpbmWUSwKGlGhPSwqGlIwIdGVybV9pbnSUSwKGlGhPSwuG
lIwSbXRoc19zaW5jZV9pc3N1ZV9klEsChpRoT0sMhpSMDW91dF9wcm5jcF9pbnaUSwKGlGhPSw2G
lIwPdG90YWxfcHltbnRfaW52lEsChpRoT0sOhpSMCGdvb2RfYmFklEsBhpSMBWNsYXNzlEsAhpR1
Sv7///+GlGgHSwF1jAphdHRyaWJ1dGVzlH2UKGhNSwJoE0sBaB1LAmhRSwJoF0sBaBpLAWhgSwJo
IEsBaCNLAWhUSwJoJksBaDVLAWg+SwFoO0sBaFdLAmhaSwJoXUsCaGNLAmhmSwJoKUsBaEFLAWhE
SwFoaUsCaEdLBGhsSwJob0sCaEpLBGhySwJodUsCaHhLAmgySwFoL0sBaCxLAWg4SwFoe0sBdYwF
bWV0YXOUfZR1YmgMKYGUfZQoaA99lCiMEWRvbWFpbl9yb2xlX2hpbnRzlH2UKIwEdGVybZRLAYaU
jAlhdmFpbGFibGWUSwCGlIwJRmVhdHVyZSAxlEsChpRoi0sBhpSMBWdyYWRllEsBhpRoi0sChpSM
CXN1Yl9ncmFkZZRLAYaUaItLA4aUjAplbXBfbGVuZ3RolEsBhpRoi0sEhpSMDmhvbWVfb3duZXJz
aGlwlEsBhpRoi0sFhpSME3ZlcmlmaWNhdGlvbl9zdGF0dXOUSwGGlGiLSwaGlIwHaXNzdWVfZJRL
AYaUaItLB4aUjAphZGRyX3N0YXRllEsBhpRoi0sIhpSMB3B1cnBvc2WUSwGGlGiLSwmGlIwTaW5p
dGlhbF9saXN0X3N0YXR1c5RLAYaUaItLCoaUjAxsYXN0X3B5bW50X2SUSwGGlGiLSwuGlIwVZWFy
bGllc3RfY3JfbGluZV9kYXRllEsEhpRoi0sMhpSMDGlzc3VlX2RfZGF0ZZRLBIaUaItLDYaUjAhn
b29kX2JhZJRLAYaUaItLDoaUjAlsb2FuX2FtbnSUSwKGlIwJYXR0cmlidXRllEsAhpSMCGludF9y
YXRllEsChpRouUsBhpSMCmFubnVhbF9pbmOUSwKGlGi5SwKGlIwDZHRplEsChpRouUsDhpSMDmlu
cV9sYXN0XzZtdGhzlEsChpRouUsEhpSMCG9wZW5fYWNjlEsChpRouUsFhpSMCXJldm9sX2JhbJRL
AoaUaLlLBoaUjAl0b3RhbF9hY2OUSwKGlGi5SweGlIwOZW1wX2xlbmd0aF9pbnSUSwKGlGi5SwiG
lIwbbXRoc19zaW5jZV9lYXJsaWVzdF9jcl9saW5llEsChpRouUsJhpSMCHRlcm1faW50lEsChpRo
uUsKhpSMEm10aHNfc2luY2VfaXNzdWVfZJRLAoaUaLlLC4aUdUr+////hpRoB0sBdWiAfZQoaI1L
Ami3SwJoiUsBaLtLAmiQSwFok0sBaJZLAWiZSwFovksCaJxLAWifSwFopUsBaKJLAWjBSwJoxEsC
aMdLAmjKSwJozUsCaKhLAWirSwFo0EsCaK5LBGjTSwJo1ksCaLFLBGjZSwJotEsBdWiCfZR1YmgM
KYGUfZQoaA99lChoEX2UKGgTSwGGlGgVSwCGlGgXSwGGlGgVSwGGlGgaSwGGlGgVSwKGlGggSwGG
lGgVSwOGlGgjSwGGlGgVSwSGlGgmSwGGlGgVSwWGlGg1SwGGlGgVSwaGlGg7SwGGlGgVSweGlGg+
SwGGlGgVSwiGlGhBSwGGlGgVSwmGlGhESwGGlGgVSwqGlGhHSwSGlGgVSwuGlGhKSwSGlGgVSwyG
lGh7SwGGlGgVSw2GlGhNSwKGlGhPSwCGlGhRSwKGlGhPSwGGlGgdSwKGlGhPSwKGlGhUSwKGlGhP
SwOGlGhXSwKGlGhPSwSGlGhaSwKGlGhPSwWGlGhdSwKGlGhPSwaGlGhgSwKGlGhPSweGlGhjSwKG
lGhPSwiGlGhmSwKGlGhPSwmGlGhpSwKGlGhPSwqGlGhsSwKGlGhPSwuGlGhvSwKGlGhPSwyGlGhy
SwKGlGhPSw2GlGgpSwGGlGhPSw6GlGh1SwKGlGhPSw+GlGh4SwKGlGhPSxCGlGgySwGGlGhPSxGG
lGgvSwGGlGhPSxKGlGgsSwGGlGhPSxOGlGg4SwGGlGhPSxSGlIwIemlwX2NvZGWUSwOGlIwEbWV0
YZRLAIaUdUr+////hpRoB0sBdWiAfZQoaE1LAmgTSwFoHUsCaFFLAmgXSwFoGksBaGBLAmggSwFo
I0sBaFRLAmgmSwFoNUsBaD5LAWg7SwFoV0sCaFpLAmhdSwJoY0sCaGZLAmgpSwFoQUsBaERLAWhp
SwJoR0sEaGxLAmhvSwJoSksEaHJLAmh1SwJoeEsCaDJLAWgvSwFoLEsBaDhLAWh7SwF1aIJ9lGop
AQAASwNzdWJoDCmBlH2UKGgPfZQoaBF9lChoE0sBhpRoFUsAhpRoF0sBhpRoFUsBhpRoGksBhpRo
FUsChpRoIEsBhpRoFUsDhpRoI0sBhpRoFUsEhpRoJksBhpRoFUsFhpRoNUsBhpRoFUsGhpRoO0sB
hpRoFUsHhpRoPksBhpRoFUsIhpRoQUsBhpRoFUsJhpRoREsBhpRoFUsKhpRoR0sEhpRoFUsLhpRo
SksEhpRoFUsMhpRoe0sBhpRoFUsNhpRoTUsChpRoT0sAhpRoUUsChpRoT0sBhpRoHUsChpRoT0sC
hpRoVEsChpRoT0sDhpRoV0sChpRoT0sEhpRoWksChpRoT0sFhpRoXUsChpRoT0sGhpRoYEsChpRo
T0sHhpRoY0sChpRoT0sIhpRoZksChpRoT0sJhpRoaUsChpRoT0sKhpRobEsChpRoT0sLhpRob0sC
hpRoT0sMhpRocksChpRoT0sNhpRoKUsBhpRoT0sOhpRodUsChpRoT0sPhpRoeEsChpRoT0sQhpRo
MksBhpRoT0sRhpRoL0sBhpRoT0sShpRoLEsBhpRoT0sThpRoOEsBhpRoT0sUhpSMCWVtcF90aXRs
ZZRLA4aUaisBAABLAIaUaikBAABLA4aUaisBAABLAYaUdUr+////hpRoB0sBdWiAfZQoaE1LAmgT
SwFoHUsCaFFLAmgXSwFoGksBaGBLAmggSwFoI0sBaFRLAmgmSwFoNUsBaD5LAWg7SwFoV0sCaFpL
AmhdSwJoY0sCaGZLAmgpSwFoQUsBaERLAWhpSwJoR0sEaGxLAmhvSwJoSksEaHJLAmh1SwJoeEsC
aDJLAWgvSwFoLEsBaDhLAWh7SwF1aIJ9lChqegEAAEsDaikBAABLA3V1YmgMKYGUfZQoaA99lCho
EX2UKGgTSwGGlGgVSwCGlGgXSwGGlGgVSwGGlGgaSwGGlGgVSwKGlGggSwGGlGgVSwOGlGgjSwGG
lGgVSwSGlGgmSwGGlGgVSwWGlGg1SwGGlGgVSwaGlGg7SwGGlGgVSweGlGg+SwGGlGgVSwiGlGhB
SwGGlGgVSwmGlGhESwGGlGgVSwqGlGhHSwSGlGgVSwuGlGhKSwSGlGgVSwyGlGh7SwGGlGgVSw2G
lGhNSwKGlGhPSwCGlGhRSwKGlGhPSwGGlGgdSwKGlGhPSwKGlGhUSwKGlGhPSwOGlGhXSwKGlGhP
SwSGlGhaSwKGlGhPSwWGlGhdSwKGlGhPSwaGlGhgSwKGlGhPSweGlGhjSwKGlGhPSwiGlGhmSwKG
lGhPSwmGlGhpSwKGlGhPSwqGlGhsSwKGlGhPSwuGlGhvSwKGlGhPSwyGlGhySwKGlGhPSw2GlGgp
SwGGlGhPSw6GlGh1SwKGlGhPSw+GlGh4SwKGlGhPSxCGlGgySwGGlGhPSxGGlGgvSwGGlGhPSxKG
lGgsSwGGlGhPSxOGlGg4SwGGlGhPSxSGlGp6AQAASwOGlGorAQAASwCGlIwFdGl0bGWUSwOGlGor
AQAASwGGlGopAQAASwOGlGorAQAASwKGlHVK/v///4aUaAdLAXVogH2UKGhNSwJoE0sBaB1LAmhR
SwJoF0sBaBpLAWhgSwJoIEsBaCNLAWhUSwJoJksBaDVLAWg+SwFoO0sBaFdLAmhaSwJoXUsCaGNL
AmhmSwJoKUsBaEFLAWhESwFoaUsCaEdLBGhsSwJob0sCaEpLBGhySwJodUsCaHhLAmgySwFoL0sB
aCxLAWg4SwFoe0sBdWiCfZQoanoBAABLA2rOAQAASwNqKQEAAEsDdXViaAwpgZR9lChoD32UKGgR
fZQoaBNLAYaUaBVLAIaUaBdLAYaUaBVLAYaUaBpLAYaUaBVLAoaUaCBLAYaUaBVLA4aUaCNLAYaU
aBVLBIaUaCZLAYaUaBVLBYaUaDVLAYaUaBVLBoaUaDtLAYaUaBVLB4aUaD5LAYaUaBVLCIaUaEFL
AYaUaBVLCYaUaERLAYaUaBVLCoaUaEdLBIaUaBVLC4aUaEpLBIaUaBVLDIaUaHtLAYaUaBVLDYaU
aE1LAoaUaE9LAIaUaFFLAoaUaE9LAYaUaB1LAoaUaE9LAoaUaFRLAoaUaE9LA4aUaFdLAoaUaE9L
BIaUaFpLAoaUaE9LBYaUaF1LAoaUaE9LBoaUaGBLAoaUaE9LB4aUaGNLAoaUaE9LCIaUaGZLAoaU
aE9LCYaUaGlLAoaUaE9LCoaUaGxLAoaUaE9LC4aUaG9LAoaUaE9LDIaUaHJLAoaUaE9LDYaUaClL
AYaUaE9LDoaUaHVLAoaUaE9LD4aUaHhLAoaUaE9LEIaUaDJLAYaUaE9LEYaUaC9LAYaUaE9LEoaU
aCxLAYaUaE9LE4aUaDhLAYaUaE9LFIaUanoBAABLA4aUaisBAABLAIaUjAN1cmyUSwOGlGorAQAA
SwGGlGrOAQAASwOGlGorAQAASwKGlGopAQAASwOGlGorAQAASwOGlHVK/v///4aUaAdLAXVogH2U
KGhNSwJoE0sBaB1LAmhRSwJoF0sBaBpLAWhgSwJoIEsBaCNLAWhUSwJoJksBaDVLAWg+SwFoO0sB
aFdLAmhaSwJoXUsCaGNLAmhmSwJoKUsBaEFLAWhESwFoaUsCaEdLBGhsSwJob0sCaEpLBGhySwJo
dUsCaHhLAmgySwFoL0sBaCxLAWg4SwFoe0sBdWiCfZQoanoBAABLA2oiAgAASwNqzgEAAEsDaikB
AABLA3V1YmgMKYGUfZQoaA99lChoEX2UKGgTSwGGlGgVSwCGlGgXSwGGlGgVSwGGlGgaSwGGlGgV
SwKGlGggSwGGlGgVSwOGlGgjSwGGlGgVSwSGlGgmSwGGlGgVSwWGlGg1SwGGlGgVSwaGlGg7SwGG
lGgVSweGlGg+SwGGlGgVSwiGlGhBSwGGlGgVSwmGlGhESwGGlGgVSwqGlGhHSwSGlGgVSwuGlGhK
SwSGlGgVSwyGlGh7SwGGlGgVSw2GlGhNSwKGlGhPSwCGlIwCaWSUSwKGlGhPSwGGlGhRSwKGlGhP
SwKGlGhUSwKGlGhPSwOGlGgdSwKGlGhPSwSGlGhXSwKGlGhPSwWGlGhaSwKGlGhPSwaGlGhdSwKG
lGhPSweGlGhjSwKGlGhPSwiGlGhgSwKGlGhPSwmGlGhmSwKGlGhPSwqGlGhpSwKGlGhPSwuGlGhs
SwKGlGhPSwyGlGhvSwKGlGhPSw2GlGhySwKGlGhPSw6GlGgpSwGGlGhPSw+GlGh1SwKGlGhPSxCG
lGh4SwKGlGhPSxGGlGgySwGGlGhPSxKGlGgvSwGGlGhPSxOGlGgsSwGGlGhPSxSGlGg4SwGGlGhP
SxWGlGp6AQAASwOGlGorAQAASwCGlGoiAgAASwOGlGorAQAASwGGlGrOAQAASwOGlGorAQAASwKG
lGopAQAASwOGlGorAQAASwOGlHVK/v///4aUaAdLAXVogH2UKGhNSwJqTgIAAEsCaBNLAWgdSwJo
UUsCaBdLAWgaSwFoYEsCaCBLAWgjSwFoVEsCaCZLAWg1SwFoPksBaDtLAWhXSwJoWksCaF1LAmhj
SwJoZksCaClLAWhBSwFoREsBaGlLAmhHSwRobEsCaG9LAmhKSwRocksCaHVLAmh4SwJoMksBaC9L
AWgsSwFoOEsBaHtLAXVogn2UKGp6AQAASwNqIgIAAEsDas4BAABLA2opAQAASwN1dWJoDCmBlH2U
KGgPfZQoaBF9lChoE0sBhpRoFUsAhpRoF0sBhpRoFUsBhpRoGksBhpRoFUsChpRoIEsBhpRoFUsD
hpRoI0sBhpRoFUsEhpRoJksBhpRoFUsFhpRoNUsBhpRoFUsGhpRoO0sBhpRoFUsHhpRoPksBhpRo
FUsIhpRoe0sBhpRoFUsJhpRoTUsChpRoT0sAhpSMClVubmFtZWQ6IDCUSwKGlGhPSwGGlGhRSwKG
lGhPSwKGlGhUSwKGlGhPSwOGlGpOAgAASwKGlGhPSwSGlGhXSwKGlGhPSwWGlGhaSwKGlGhPSwaG
lGgdSwKGlGhPSweGlGhdSwKGlGhPSwiGlGhjSwKGlGhPSwmGlGhmSwKGlGhPSwqGlGhgSwKGlGhP
SwuGlGgpSwGGlGhPSwyGlGhBSwGGlGhPSw2GlGhESwGGlGhPSw6GlGhpSwKGlGhPSw+GlGhHSwSG
lGhPSxCGlGhsSwKGlGhPSxGGlGhvSwKGlGhPSxKGlGhKSwSGlGhPSxOGlGhySwKGlGhPSxSGlGh1
SwKGlGhPSxWGlGh4SwKGlGhPSxaGlGgySwGGlGhPSxeGlGgvSwGGlGhPSxiGlGgsSwGGlGhPSxmG
lGg4SwGGlGhPSxqGlGp6AQAASwOGlGorAQAASwCGlGoiAgAASwOGlGorAQAASwGGlGrOAQAASwOG
lGorAQAASwKGlGopAQAASwOGlGorAQAASwOGlHVK/v///4aUaAdLAXVogH2UKGqeAgAASwJoTUsC
ak4CAABLAmgTSwFoHUsCaFFLAmgXSwFoGksBaGBLAmggSwFoI0sBaFRLAmgmSwFoNUsBaD5LAWg7
SwFoV0sCaFpLAmhdSwJoY0sCaGZLAmgpSwFoQUsBaERLAWhpSwJoR0sEaGxLAmhvSwJoSksEaHJL
Amh1SwJoeEsCaDJLAWgvSwFoLEsBaDhLAWh7SwF1aIJ9lChqegEAAEsDaiICAABLA2rOAQAASwNq
KQEAAEsDdXViaAwpgZR9lChoD32UKGgRfZQoaBNLAYaUaBVLAIaUjAlGZWF0dXJlIDGUSwKGlGgV
SwGGlGgXSwGGlGgVSwKGlGgaSwGGlGgVSwOGlGggSwGGlGgVSwSGlGgjSwGGlGgVSwWGlGgmSwGG
lGgVSwaGlGg1SwGGlGgVSweGlGg7SwGGlGgVSwiGlGg+SwGGlGgVSwmGlGh7SwGGlGgVSwqGlGhN
SwKGlGhPSwCGlGqeAgAASwKGlGhPSwGGlGhRSwKGlGhPSwKGlGhUSwKGlGhPSwOGlGpOAgAASwKG
lGhPSwSGlGhXSwKGlGhPSwWGlGhaSwKGlGhPSwaGlGgdSwKGlGhPSweGlGhdSwKGlGhPSwiGlGhj
SwKGlGhPSwmGlGhmSwKGlGhPSwqGlGhgSwKGlGhPSwuGlGgpSwGGlGhPSwyGlGhBSwGGlGhPSw2G
lGhESwGGlGhPSw6GlGhpSwKGlGhPSw+GlGhHSwSGlGhPSxCGlGhsSwKGlGhPSxGGlGhvSwKGlGhP
SxKGlGhKSwSGlGhPSxOGlGhySwKGlGhPSxSGlGh1SwKGlGhPSxWGlGh4SwKGlGhPSxaGlGgySwGG
lGhPSxeGlGgvSwGGlGhPSxiGlGgsSwGGlGhPSxmGlGg4SwGGlGhPSxqGlGp6AQAASwOGlGorAQAA
SwCGlGoiAgAASwOGlGorAQAASwGGlGrOAQAASwOGlGorAQAASwKGlGopAQAASwOGlGorAQAASwOG
lHVK/v///4aUaAdLAXVogH2UKGrkAgAASwJqngIAAEsCaE1LAmpOAgAASwJoE0sBaB1LAmhRSwJo
F0sBaBpLAWhgSwJoIEsBaCNLAWhUSwJoJksBaDVLAWg+SwFoO0sBaFdLAmhaSwJoXUsCaGNLAmhm
SwJoKUsBaEFLAWhESwFoaUsCaEdLBGhsSwJob0sCaEpLBGhySwJodUsCaHhLAmgySwFoL0sBaCxL
AWg4SwFoe0sBdWiCfZQoanoBAABLA2oiAgAASwNqzgEAAEsDaikBAABLA3V1YmgMKYGUfZQoaA99
lChoEX2UKGgTSwGGlGgVSwCGlGrkAgAASwKGlGgVSwGGlGgXSwGGlGgVSwKGlGgaSwGGlGgVSwOG
lGggSwGGlGgVSwSGlGgjSwGGlGgVSwWGlGgmSwGGlGgVSwaGlGg1SwGGlGgVSweGlGg7SwGGlGgV
SwiGlGg+SwGGlGgVSwmGlGh7SwGGlGgVSwqGlGhNSwKGlGhPSwCGlGqeAgAASwKGlGhPSwGGlGhR
SwKGlGhPSwKGlGhUSwKGlGhPSwOGlGpOAgAASwKGlGhPSwSGlGhXSwKGlGhPSwWGlGhaSwKGlGhP
SwaGlGgdSwKGlGhPSweGlGhdSwKGlGhPSwiGlGhjSwKGlGhPSwmGlGhmSwKGlGhPSwqGlGhgSwKG
lGhPSwuGlGp6AQAASwOGlGorAQAASwCGlGoiAgAASwOGlGorAQAASwGGlGrOAQAASwOGlGorAQAA
SwKGlGopAQAASwOGlGorAQAASwOGlHVK/v///4aUaAdLAXVogH2UKGrkAgAASwJqngIAAEsCaE1L
AmpOAgAASwJoE0sBaB1LAmhRSwJoF0sBaBpLAWhgSwJoIEsBaCNLAWhUSwJoJksBaDVLAWg+SwFo
O0sBaFdLAmhaSwJoXUsCaGNLAmhmSwJoe0sBdWiCfZQoanoBAABLA2oiAgAASwNqzgEAAEsDaikB
AABLA3V1YmV1Lg==
</properties>
		<properties node_id="15" format="pickle">gASVCB4AAAAAAAB9lCiMC2F1dG9fY29tbWl0lIiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBNpZ25v
cmVfbmV3X2ZlYXR1cmVzlImME3NhdmVkV2lkZ2V0R2VvbWV0cnmUQ0IB2dDLAAMAAAAAB4AAAAC3
AAALAwAAA1sAAAeAAAAA3AAACwMAAANbAAAAAQAAAAAHgAAAB4AAAADcAAALAwAAA1uUjBJ1c2Vf
aW5wdXRfZmVhdHVyZXOUiYwLX192ZXJzaW9uX1+USwGMEGNvbnRleHRfc2V0dGluZ3OUXZQojBVv
cmFuZ2V3aWRnZXQuc2V0dGluZ3OUjAdDb250ZXh0lJOUKYGUfZQojAZ2YWx1ZXOUfZQojBFkb21h
aW5fcm9sZV9oaW50c5R9lCiMDW91dF9wcm5jcF9pbnaUSwKGlIwJYXZhaWxhYmxllEsAhpSMD3Rv
dGFsX3B5bW50X2ludpRLAoaUaBVLAYaUjAR0ZXJtlEsBhpRoFUsChpSMD2Z1bmRlZF9hbW50X2lu
dpRLAoaUaBVLA4aUjAVncmFkZZRLAYaUaBVLBIaUjAphbm51YWxfaW5jlEsChpRoFUsFhpSMB2lz
c3VlX2SUSwGGlGgVSwaGlIwJbWVtYmVyX2lklEsChpRoFUsHhpSMEGFwcGxpY2F0aW9uX3R5cGWU
SwGGlGgVSwiGlIwDZHRplEsChpRoFUsJhpSMDmlucV9sYXN0XzZtdGhzlEsChpRoFUsKhpSMCWxv
YW5fYW1udJRLAoaUaBVLC4aUjAtwb2xpY3lfY29kZZRLAYaUaBVLDIaUjAhpbnRfcmF0ZZRLAoaU
aBVLDYaUjAhvcGVuX2FjY5RLAoaUaBVLDoaUjAlyZXZvbF9iYWyUSwKGlGgVSw+GlIwJdG90YWxf
YWNjlEsChpRoFUsQhpSMDmVtcF9sZW5ndGhfaW50lEsChpRoFUsRhpSMFWVhcmxpZXN0X2NyX2xp
bmVfZGF0ZZRLBIaUaBVLEoaUjBttdGhzX3NpbmNlX2VhcmxpZXN0X2NyX2xpbmWUSwKGlGgVSxOG
lIwMaXNzdWVfZF9kYXRllEsEhpRoFUsUhpSMEm10aHNfc2luY2VfaXNzdWVfZJRLAoaUaBVLFYaU
jAh0ZXJtX2ludJRLAoaUaBVLFoaUjAhnb29kX2JhZJRLAYaUaBVLF4aUjAlzdWJfZ3JhZGWUSwGG
lIwJYXR0cmlidXRllEsAhpSMCmVtcF9sZW5ndGiUSwGGlGheSwGGlIwOaG9tZV9vd25lcnNoaXCU
SwGGlGheSwKGlIwTdmVyaWZpY2F0aW9uX3N0YXR1c5RLAYaUaF5LA4aUjAdwdXJwb3NllEsBhpRo
XksEhpSMCmFkZHJfc3RhdGWUSwGGlGheSwWGlIwTaW5pdGlhbF9saXN0X3N0YXR1c5RLAYaUaF5L
BoaUjAxsYXN0X3B5bW50X2SUSwGGlGheSweGlIwKcHltbnRfcGxhbpRLAYaUaF5LCIaUjAxuZXh0
X3B5bW50X2SUSwGGlGheSwmGlIwSbGFzdF9jcmVkaXRfcHVsbF9klEsBhpRoXksKhpR1Sv7///+G
lGgHSwF1jAphdHRyaWJ1dGVzlH2UKGg1SwJoGksBaClLAmg7SwJoIEsBaFxLAWgdSwJoYEsBaGNL
AWgjSwJoZksBaCZLAWhpSwFobEsBaC9LAmgySwJoPksCaEFLAmhESwJodUsBaG9LAWhySwFoR0sC
aEpLBGhNSwJoVksCaFBLBGhTSwJoE0sCaBdLAmh4SwFoe0sBaDhLAWgsSwFoWUsBdYwFbWV0YXOU
fZR1YmgMKYGUfZQoaA99lCiMEWRvbWFpbl9yb2xlX2hpbnRzlH2UKIwJRmVhdHVyZSAxlEsChpSM
CWF2YWlsYWJsZZRLAIaUjAlsb2FuX2FtbnSUSwKGlGiKSwGGlIwIaW50X3JhdGWUSwKGlGiKSwKG
lIwKYW5udWFsX2luY5RLAoaUaIpLA4aUjANkdGmUSwKGlGiKSwSGlIwOaW5xX2xhc3RfNm10aHOU
SwKGlGiKSwWGlIwIb3Blbl9hY2OUSwKGlGiKSwaGlIwJcmV2b2xfYmFslEsChpRoiksHhpSMCXRv
dGFsX2FjY5RLAoaUaIpLCIaUjA5lbXBfbGVuZ3RoX2ludJRLAoaUaIpLCYaUjBVlYXJsaWVzdF9j
cl9saW5lX2RhdGWUSwSGlGiKSwqGlIwbbXRoc19zaW5jZV9lYXJsaWVzdF9jcl9saW5llEsChpRo
iksLhpSMDGlzc3VlX2RfZGF0ZZRLBIaUaIpLDIaUjBJtdGhzX3NpbmNlX2lzc3VlX2SUSwKGlGiK
Sw2GlIwIdGVybV9pbnSUSwKGlGiKSw6GlIwIZ29vZF9iYWSUSwGGlGiKSw+GlIwEdGVybZRLAYaU
jAlhdHRyaWJ1dGWUSwCGlIwFZ3JhZGWUSwGGlGi7SwGGlIwJc3ViX2dyYWRllEsBhpRou0sChpSM
CmVtcF9sZW5ndGiUSwGGlGi7SwOGlIwOaG9tZV9vd25lcnNoaXCUSwGGlGi7SwSGlIwTdmVyaWZp
Y2F0aW9uX3N0YXR1c5RLAYaUaLtLBYaUjAdpc3N1ZV9klEsBhpRou0sGhpSMB3B1cnBvc2WUSwGG
lGi7SweGlIwKYWRkcl9zdGF0ZZRLAYaUaLtLCIaUjBNpbml0aWFsX2xpc3Rfc3RhdHVzlEsBhpRo
u0sJhpSMDGxhc3RfcHltbnRfZJRLAYaUaLtLCoaUdUr+////hpRoB0sBdWh/fZQoaIhLAmiMSwJo
uUsBaI9LAmi9SwFowEsBaMNLAWjGSwFokksCaMlLAWjMSwFoz0sBaNJLAWiVSwJomEsCaJtLAmie
SwJooUsCaNVLAWjYSwFopEsCaKdLBGiqSwJos0sCaK1LBGiwSwJotksBdWiBfZR1YmgMKYGUfZQo
aA99lChoEX2UKGg1SwKGlGgVSwCGlGg7SwKGlGgVSwGGlGgjSwKGlGgVSwKGlGgvSwKGlGgVSwOG
lGgySwKGlGgVSwSGlGg+SwKGlGgVSwWGlGhBSwKGlGgVSwaGlGhESwKGlGgVSweGlGhHSwKGlGgV
SwiGlGhKSwSGlGgVSwmGlGhNSwKGlGgVSwqGlGhQSwSGlGgVSwuGlGhTSwKGlGgVSwyGlGhWSwKG
lGgVSw2GlGhZSwGGlGgVSw6GlGgaSwGGlGheSwCGlGggSwGGlGheSwGGlGgpSwKGlGheSwKGlGhc
SwGGlGheSwOGlGhgSwGGlGheSwSGlGhjSwGGlGheSwWGlGhmSwGGlGheSwaGlGgdSwKGlGheSweG
lGgmSwGGlGheSwiGlGhpSwGGlGheSwmGlGhsSwGGlGheSwqGlGhvSwGGlGheSwuGlGhySwGGlGhe
SwyGlGh1SwGGlGheSw2GlGgTSwKGlGheSw6GlGgXSwKGlGheSw+GlGh4SwGGlGheSxCGlGh7SwGG
lGheSxGGlGg4SwGGlGheSxKGlGgsSwGGlGheSxOGlIwIemlwX2NvZGWUSwOGlIwEbWV0YZRLAIaU
dUr+////hpRoB0sBdWh/fZQoaDVLAmgaSwFoKUsCaDtLAmggSwFoXEsBaB1LAmhgSwFoY0sBaCNL
AmhmSwFoJksBaGlLAWhsSwFoL0sCaDJLAmg+SwJoQUsCaERLAmh1SwFob0sBaHJLAWhHSwJoSksE
aE1LAmhWSwJoUEsEaFNLAmgTSwJoF0sCaHhLAWh7SwFoOEsBaCxLAWhZSwF1aIF9lGooAQAASwNz
dWJoDCmBlH2UKGgPfZQoaBF9lChoNUsChpRoFUsAhpRoO0sChpRoFUsBhpRoI0sChpRoFUsChpRo
L0sChpRoFUsDhpRoMksChpRoFUsEhpRoPksChpRoFUsFhpRoQUsChpRoFUsGhpRoREsChpRoFUsH
hpRoR0sChpRoFUsIhpRoSksEhpRoFUsJhpRoTUsChpRoFUsKhpRoUEsEhpRoFUsLhpRoU0sChpRo
FUsMhpRoVksChpRoFUsNhpRoWUsBhpRoFUsOhpRoGksBhpRoXksAhpRoIEsBhpRoXksBhpRoKUsC
hpRoXksChpRoXEsBhpRoXksDhpRoYEsBhpRoXksEhpRoY0sBhpRoXksFhpRoZksBhpRoXksGhpRo
HUsChpRoXksHhpRoJksBhpRoXksIhpRoaUsBhpRoXksJhpRobEsBhpRoXksKhpRob0sBhpRoXksL
hpRocksBhpRoXksMhpRodUsBhpRoXksNhpRoE0sChpRoXksOhpRoF0sChpRoXksPhpRoeEsBhpRo
XksQhpRoe0sBhpRoXksRhpRoOEsBhpRoXksShpRoLEsBhpRoXksThpSMCWVtcF90aXRsZZRLA4aU
aioBAABLAIaUaigBAABLA4aUaioBAABLAYaUdUr+////hpRoB0sBdWh/fZQoaDVLAmgaSwFoKUsC
aDtLAmggSwFoXEsBaB1LAmhgSwFoY0sBaCNLAmhmSwFoJksBaGlLAWhsSwFoL0sCaDJLAmg+SwJo
QUsCaERLAmh1SwFob0sBaHJLAWhHSwJoSksEaE1LAmhWSwJoUEsEaFNLAmgTSwJoF0sCaHhLAWh7
SwFoOEsBaCxLAWhZSwF1aIF9lChqeQEAAEsDaigBAABLA3V1YmgMKYGUfZQoaA99lChoEX2UKGg1
SwKGlGgVSwCGlGg7SwKGlGgVSwGGlGgjSwKGlGgVSwKGlGgvSwKGlGgVSwOGlGgySwKGlGgVSwSG
lGg+SwKGlGgVSwWGlGhBSwKGlGgVSwaGlGhESwKGlGgVSweGlGhHSwKGlGgVSwiGlGhKSwSGlGgV
SwmGlGhNSwKGlGgVSwqGlGhQSwSGlGgVSwuGlGhTSwKGlGgVSwyGlGhWSwKGlGgVSw2GlGhZSwGG
lGgVSw6GlGgaSwGGlGheSwCGlGggSwGGlGheSwGGlGgpSwKGlGheSwKGlGhcSwGGlGheSwOGlGhg
SwGGlGheSwSGlGhjSwGGlGheSwWGlGhmSwGGlGheSwaGlGgdSwKGlGheSweGlGgmSwGGlGheSwiG
lGhpSwGGlGheSwmGlGhsSwGGlGheSwqGlGhvSwGGlGheSwuGlGhySwGGlGheSwyGlGh1SwGGlGhe
Sw2GlGgTSwKGlGheSw6GlGgXSwKGlGheSw+GlGh4SwGGlGheSxCGlGh7SwGGlGheSxGGlGg4SwGG
lGheSxKGlGgsSwGGlGheSxOGlGp5AQAASwOGlGoqAQAASwCGlIwFdGl0bGWUSwOGlGoqAQAASwGG
lGooAQAASwOGlGoqAQAASwKGlHVK/v///4aUaAdLAXVof32UKGg1SwJoGksBaClLAmg7SwJoIEsB
aFxLAWgdSwJoYEsBaGNLAWgjSwJoZksBaCZLAWhpSwFobEsBaC9LAmgySwJoPksCaEFLAmhESwJo
dUsBaG9LAWhySwFoR0sCaEpLBGhNSwJoVksCaFBLBGhTSwJoE0sCaBdLAmh4SwFoe0sBaDhLAWgs
SwFoWUsBdWiBfZQoankBAABLA2rNAQAASwNqKAEAAEsDdXViaAwpgZR9lChoD32UKGgRfZQoaDVL
AoaUaBVLAIaUaDtLAoaUaBVLAYaUaCNLAoaUaBVLAoaUaC9LAoaUaBVLA4aUaDJLAoaUaBVLBIaU
aD5LAoaUaBVLBYaUaEFLAoaUaBVLBoaUaERLAoaUaBVLB4aUaEdLAoaUaBVLCIaUaEpLBIaUaBVL
CYaUaE1LAoaUaBVLCoaUaFBLBIaUaBVLC4aUaFNLAoaUaBVLDIaUaFZLAoaUaBVLDYaUaFlLAYaU
aBVLDoaUaBpLAYaUaF5LAIaUaCBLAYaUaF5LAYaUaClLAoaUaF5LAoaUaFxLAYaUaF5LA4aUaGBL
AYaUaF5LBIaUaGNLAYaUaF5LBYaUaGZLAYaUaF5LBoaUaB1LAoaUaF5LB4aUaCZLAYaUaF5LCIaU
aGlLAYaUaF5LCYaUaGxLAYaUaF5LCoaUaG9LAYaUaF5LC4aUaHJLAYaUaF5LDIaUaHVLAYaUaF5L
DYaUaBNLAoaUaF5LDoaUaBdLAoaUaF5LD4aUaHhLAYaUaF5LEIaUaHtLAYaUaF5LEYaUaDhLAYaU
aF5LEoaUaCxLAYaUaF5LE4aUankBAABLA4aUaioBAABLAIaUjAN1cmyUSwOGlGoqAQAASwGGlGrN
AQAASwOGlGoqAQAASwKGlGooAQAASwOGlGoqAQAASwOGlHVK/v///4aUaAdLAXVof32UKGg1SwJo
GksBaClLAmg7SwJoIEsBaFxLAWgdSwJoYEsBaGNLAWgjSwJoZksBaCZLAWhpSwFobEsBaC9LAmgy
SwJoPksCaEFLAmhESwJodUsBaG9LAWhySwFoR0sCaEpLBGhNSwJoVksCaFBLBGhTSwJoE0sCaBdL
Amh4SwFoe0sBaDhLAWgsSwFoWUsBdWiBfZQoankBAABLA2ohAgAASwNqzQEAAEsDaigBAABLA3V1
YmgMKYGUfZQoaA99lChoEX2UKGg1SwKGlGgVSwCGlGg7SwKGlGgVSwGGlGgjSwKGlGgVSwKGlGgv
SwKGlGgVSwOGlGgySwKGlGgVSwSGlGg+SwKGlGgVSwWGlGhBSwKGlGgVSwaGlGhESwKGlGgVSweG
lGhHSwKGlGgVSwiGlGhKSwSGlGgVSwmGlGhNSwKGlGgVSwqGlGhQSwSGlGgVSwuGlGhTSwKGlGgV
SwyGlGhWSwKGlGgVSw2GlGhZSwGGlGgVSw6GlGgaSwGGlGheSwCGlIwCaWSUSwKGlGheSwGGlGgg
SwGGlGheSwKGlGhcSwGGlGheSwOGlGgpSwKGlGheSwSGlGhgSwGGlGheSwWGlGhjSwGGlGheSwaG
lGhmSwGGlGheSweGlGgmSwGGlGheSwiGlGgdSwKGlGheSwmGlGhpSwGGlGheSwqGlGhsSwGGlGhe
SwuGlGhvSwGGlGheSwyGlGhySwGGlGheSw2GlGh1SwGGlGheSw6GlGgTSwKGlGheSw+GlGgXSwKG
lGheSxCGlGh4SwGGlGheSxGGlGh7SwGGlGheSxKGlGg4SwGGlGheSxOGlGgsSwGGlGheSxSGlGp5
AQAASwOGlGoqAQAASwCGlGohAgAASwOGlGoqAQAASwGGlGrNAQAASwOGlGoqAQAASwKGlGooAQAA
SwOGlGoqAQAASwOGlHVK/v///4aUaAdLAXVof32UKGg1SwJqTwIAAEsCaBpLAWgpSwJoO0sCaCBL
AWhcSwFoHUsCaGBLAWhjSwFoI0sCaGZLAWgmSwFoaUsBaGxLAWgvSwJoMksCaD5LAmhBSwJoREsC
aHVLAWhvSwFocksBaEdLAmhKSwRoTUsCaFZLAmhQSwRoU0sCaBNLAmgXSwJoeEsBaHtLAWg4SwFo
LEsBaFlLAXVogX2UKGp5AQAASwNqIQIAAEsDas0BAABLA2ooAQAASwN1dWJoDCmBlH2UKGgPfZQo
aBF9lChoNUsChpRoFUsAhpRoO0sChpRoFUsBhpRoI0sChpRoFUsChpRoL0sChpRoFUsDhpRoMksC
hpRoFUsEhpRoPksChpRoFUsFhpRoQUsChpRoFUsGhpRoREsChpRoFUsHhpRoWUsBhpRoFUsIhpRo
GksBhpRoXksAhpSMClVubmFtZWQ6IDCUSwKGlGheSwGGlGggSwGGlGheSwKGlGhcSwGGlGheSwOG
lGpPAgAASwKGlGheSwSGlGhgSwGGlGheSwWGlGhjSwGGlGheSwaGlGgpSwKGlGheSweGlGhmSwGG
lGheSwiGlGgmSwGGlGheSwmGlGhpSwGGlGheSwqGlGhsSwGGlGheSwuGlGgdSwKGlGheSwyGlGh1
SwGGlGheSw2GlGhvSwGGlGheSw6GlGhySwGGlGheSw+GlGhHSwKGlGheSxCGlGhKSwSGlGheSxGG
lGhNSwKGlGheSxKGlGhWSwKGlGheSxOGlGhQSwSGlGheSxSGlGhTSwKGlGheSxWGlGgTSwKGlGhe
SxaGlGgXSwKGlGheSxeGlGh4SwGGlGheSxiGlGh7SwGGlGheSxmGlGg4SwGGlGheSxqGlGgsSwGG
lGheSxuGlGp5AQAASwOGlGoqAQAASwCGlGohAgAASwOGlGoqAQAASwGGlGrNAQAASwOGlGoqAQAA
SwKGlGooAQAASwOGlGoqAQAASwOGlHVK/v///4aUaAdLAXVof32UKGqbAgAASwJoNUsCak8CAABL
AmgaSwFoKUsCaDtLAmggSwFoXEsBaB1LAmhgSwFoY0sBaCNLAmhmSwFoJksBaGlLAWhsSwFoL0sC
aDJLAmg+SwJoQUsCaERLAmh1SwFob0sBaHJLAWhHSwJoSksEaE1LAmhWSwJoUEsEaFNLAmgTSwJo
F0sCaHhLAWh7SwFoOEsBaCxLAWhZSwF1aIF9lChqeQEAAEsDaiECAABLA2rNAQAASwNqKAEAAEsD
dXViaAwpgZR9lChoD32UKGgRfZQojAlGZWF0dXJlIDGUSwKGlGgVSwCGlGg1SwKGlGgVSwGGlGg7
SwKGlGgVSwKGlGgjSwKGlGgVSwOGlGgvSwKGlGgVSwSGlGgySwKGlGgVSwWGlGg+SwKGlGgVSwaG
lGhBSwKGlGgVSweGlGhESwKGlGgVSwiGlGhZSwGGlGgVSwmGlGgaSwGGlGheSwCGlGqbAgAASwKG
lGheSwGGlGggSwGGlGheSwKGlGhcSwGGlGheSwOGlGpPAgAASwKGlGheSwSGlGhgSwGGlGheSwWG
lGhjSwGGlGheSwaGlGgpSwKGlGheSweGlGhmSwGGlGheSwiGlGgmSwGGlGheSwmGlGhpSwGGlGhe
SwqGlGhsSwGGlGheSwuGlGgdSwKGlGheSwyGlGh1SwGGlGheSw2GlGhvSwGGlGheSw6GlGhySwGG
lGheSw+GlGhHSwKGlGheSxCGlGhKSwSGlGheSxGGlGhNSwKGlGheSxKGlGhWSwKGlGheSxOGlGhQ
SwSGlGheSxSGlGhTSwKGlGheSxWGlGgTSwKGlGheSxaGlGgXSwKGlGheSxeGlGh4SwGGlGheSxiG
lGh7SwGGlGheSxmGlGg4SwGGlGheSxqGlGgsSwGGlGheSxuGlGp5AQAASwOGlGoqAQAASwCGlGoh
AgAASwOGlGoqAQAASwGGlGrNAQAASwOGlGoqAQAASwKGlGooAQAASwOGlGoqAQAASwOGlHVK/v//
/4aUaAdLAXVof32UKGrhAgAASwJqmwIAAEsCaDVLAmpPAgAASwJoGksBaClLAmg7SwJoIEsBaFxL
AWgdSwJoYEsBaGNLAWgjSwJoZksBaCZLAWhpSwFobEsBaC9LAmgySwJoPksCaEFLAmhESwJodUsB
aG9LAWhySwFoR0sCaEpLBGhNSwJoVksCaFBLBGhTSwJoE0sCaBdLAmh4SwFoe0sBaDhLAWgsSwFo
WUsBdWiBfZQoankBAABLA2ohAgAASwNqzQEAAEsDaigBAABLA3V1YmgMKYGUfZQoaA99lChoEX2U
KGrhAgAASwKGlGgVSwCGlGg1SwKGlGgVSwGGlGg7SwKGlGgVSwKGlGgjSwKGlGgVSwOGlGgvSwKG
lGgVSwSGlGgySwKGlGgVSwWGlGg+SwKGlGgVSwaGlGhBSwKGlGgVSweGlGhESwKGlGgVSwiGlGhZ
SwGGlGgVSwmGlGgaSwGGlGheSwCGlGqbAgAASwKGlGheSwGGlGggSwGGlGheSwKGlGhcSwGGlGhe
SwOGlGpPAgAASwKGlGheSwSGlGhgSwGGlGheSwWGlGhjSwGGlGheSwaGlGgpSwKGlGheSweGlGhm
SwGGlGheSwiGlGgmSwGGlGheSwmGlGhpSwGGlGheSwqGlGhsSwGGlGheSwuGlGgdSwKGlGheSwyG
lGp5AQAASwOGlGoqAQAASwCGlGohAgAASwOGlGoqAQAASwGGlGrNAQAASwOGlGoqAQAASwKGlGoo
AQAASwOGlGoqAQAASwOGlHVK/v///4aUaAdLAXVof32UKGrhAgAASwJqmwIAAEsCaDVLAmpPAgAA
SwJoGksBaClLAmg7SwJoIEsBaFxLAWgdSwJoYEsBaGNLAWgjSwJoZksBaCZLAWhpSwFobEsBaC9L
AmgySwJoPksCaEFLAmhESwJoWUsBdWiBfZQoankBAABLA2ohAgAASwNqzQEAAEsDaigBAABLA3V1
YmV1Lg==
</properties>
		<properties node_id="16" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 3, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x07\x80\x00\x00\x00\x00\x00\x00\x0e\xff\x00\x00\x047\x00\x00\x07\x80\x00\x00\x00%\x00\x00\x0e\xff\x00\x00\x04\x15\x00\x00\x00\x01\x02\x00\x00\x00\x07\x80\x00\x00\x07\x80\x00\x00\x00%\x00\x00\x0e\xff\x00\x00\x047', 'scriptLibrary': [{'name': 'Table from numpy', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': "\n    \n    # Convertendo o Orange Table para um DataFrame pandas\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n    \n    # Extrair dados do Orange Table\npurpose_sum = defaultdict(float)\nfor row in in_data:\n    purpose = row['Purpose'].value\n    credit_amount = float(row['Credit amount'])\n    purpose_sum[purpose] += credit_amount\n    \n    # Ordenar os dados\nsorted_data = sorted(purpose_sum.items(), key=lambda x: x[1], reverse=True)\npurposes, amounts = zip(*sorted_data)\n    \n    # Criar o gráfico de barras\nplt.figure(figsize=(10, 6))\nplt.bar(purposes, amounts)\nplt.title('Soma de Crédito por Propósito')\nplt.xlabel('Propósito')\nplt.ylabel('Soma do Montante de Crédito')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n    \nreturn in_data \n    \n\n", 'filename': None}, {'name': 'New script', 'script': 'import matplotlib.pyplot as plt\nimport pandas as pd\nfrom Orange.data import Table, Domain, ContinuousVariable\n\n# Convertendo os dados de entrada do Orange para um DataFrame do Pandas\ndata = pd.DataFrame(in_data.X, columns=[var.name for var in in_data.domain.attributes])\ntarget = pd.Series(in_data.Y, name=in_data.domain.class_var.name)\n\n# Verifique se os dados possuem as variáveis "grade", "Good", "Bad" e "WoE"\nif \'grade\' in data.columns and \'WoE\' in data.columns and \'Good\' in data.columns and \'Bad\' in data.columns:\n    \n    # Definir as categorias (grade), WoE e as taxas de inadimplência (Good e Bad)\n    categories = data[\'grade\']\n    woe = data[\'WoE\'].astype(\'float\')\n    good_row = data[\'Good\'].astype(\'float\')  # Substituir pela sua variável de bons pagadores\n    bad_row = data[\'Bad\'].astype(\'float\')  # Substituir pela sua variável de maus pagadores\n\n    # Criação da figura com subplots\n    fig, ax = plt.subplots(1, 2, figsize=(12, 6))\n\n    # Gráfico de barras empilhadas para taxa de inadimplência\n    bad_bars = ax[0].barh(y=categories, width=bad_row, color=\'#8d0801\', label=\'Bad\')\n    good_bars = ax[0].barh(y=categories, width=good_row, left=bad_row, color=\'#8a817c\', label=\'Good\')\n\n    # Anotando valores percentuais dentro de cada barra\n    for good_bar, bad_bar, good_rate, bad_rate in zip(good_bars, bad_bars, good_row, bad_row):\n        x_position_good = good_bar.get_x() + good_bar.get_width() / 2\n        x_position_bad = bad_bar.get_x() + bad_bar.get_width() / 2  \n        y_position = good_bar.get_y() + good_bar.get_height() / 2\n\n        ax[0].text(x_position_good, y_position, f\'{good_rate:.2f}%\', ha=\'center\', va=\'center\', color=\'white\', fontsize=10)\n        ax[0].text(x_position_bad, y_position, f\'{bad_rate:.2f}%\', ha=\'center\', va=\'center\', color=\'white\', fontsize=10)\n\n    ax[0].set_title(\'Default rate by Grade\')\n    ax[0].invert_yaxis()\n    ax[0].grid(False)\n    ax[0].legend(bbox_to_anchor=(-0.2, 1.1), loc=\'upper left\')\n\n    # Gráfico de linha para WoE\n    ax[1].plot(categories, woe, marker=\'o\', linestyle=\'--\')\n    ax[1].set_title(\'WoE by Grade\')\n    ax[1].set_xticks(categories.unique())\n    \n    plt.tight_layout()\n    plt.show()\n\n# Convertendo o DataFrame de volta para uma tabela do Orange\ndomain = Domain([ContinuousVariable(col) for col in data.columns])\nout_data = Table.from_numpy(domain, data.to_numpy())\n', 'filename': None}], 'scriptText': 'from Orange.data import Table, Domain, DiscreteVariable, ContinuousVariable\nfrom Orange.preprocess import Preprocess\nimport numpy as np\n\nclass CatOneHotEncoder(Preprocess):\n    def __init__(self, reference_categories=None):\n        self.reference_categories = reference_categories or [\n            \'&gt;28.1K\', \'60\', \'&gt;22.0\', \'G\',\n            \'G1_F5_G5_G3_G2_F4_F3_G4_F2\',\n            \'0\', \'OTHER_NONE_RENT_ANY\', \'&lt;=20.0K\',\n            \'Verified\', \'small_business_educational_renewable_energy_moving\',\n            \'NE_IA_NV_HI_FL\', \'&gt;28.0\', \'4-33\', \'&lt;=4.0\',\n            \'&lt;=6.0\', \'&lt;=2.0K\', \'&lt;=8.0\', \'f\', \'missing\', \'&lt;=151.0\'\n        ]\n\n    def __call__(self, data):\n        X = Table(data)\n        domain = data.domain\n        new_attrs = []\n        attr_mapping = {}\n\n        for attr in domain.attributes:\n            if isinstance(attr, DiscreteVariable):\n                reference_category = next((cat for cat in attr.values if cat in self.reference_categories), attr.values[-1])\n                attr_mapping[attr.name] = []\n                for value in attr.values:\n                    if value != reference_category:\n                        new_attr = ContinuousVariable.make(f"{attr.name}_{value}")\n                        new_attrs.append(new_attr)\n                        attr_mapping[attr.name].append((value, new_attr))\n            else:\n                new_attrs.append(attr)\n\n        new_domain = Domain(new_attrs, domain.class_vars, domain.metas)\n        new_X = np.zeros((len(X), len(new_attrs)), dtype=float)\n\n        for i, instance in enumerate(X):\n            col_idx = 0\n            for attr in domain.attributes:\n                if isinstance(attr, DiscreteVariable):\n                    value = instance[attr]\n                    if not np.isnan(value):\n                        for orig_value, new_attr in attr_mapping[attr.name]:\n                            if attr.values[int(value)] == orig_value:\n                                new_X[i, col_idx] = 1\n                            col_idx += 1\n                else:\n                    new_X[i, col_idx] = instance[attr]\n                    col_idx += 1\n\n        return Table(new_domain, new_X, X.Y, X.metas)\n\n# Uso no widget "Python Script" do Orange:\ncat_one_hot_encoder = CatOneHotEncoder()\nout_data = cat_one_hot_encoder(in_data)', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xac\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="17" format="literal">{'autocommit': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\t\x8f\x00\x00\x00\xd5\x00\x00\x0c\xdc\x00\x00\x02\xed\x00\x00\t\x8f\x00\x00\x00\xfa\x00\x00\x0c\xdc\x00\x00\x02\xed\x00\x00\x00\x01\x00\x00\x00\x00\x07\x80\x00\x00\t\x8f\x00\x00\x00\xfa\x00\x00\x0c\xdc\x00\x00\x02\xed', 'storedsettings': {'name': '', 'preprocessors': [('orange.preprocess.discretize', {'method': 4})]}, '__version__': 2}</properties>
		<properties node_id="18" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x07\x80\x00\x00\x00\x00\x00\x00\x0e\xff\x00\x00\x047\x00\x00\x07\x80\x00\x00\x00%\x00\x00\x0e\xff\x00\x00\x047\x00\x00\x00\x01\x02\x00\x00\x00\x07\x80\x00\x00\x07\x80\x00\x00\x00%\x00\x00\x0e\xff\x00\x00\x047', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="19" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x07\x80\x00\x00\x00\x00\x00\x00\x0e\xff\x00\x00\x047\x00\x00\x07\x80\x00\x00\x00%\x00\x00\x0e\xff\x00\x00\x047\x00\x00\x00\x01\x02\x00\x00\x00\x07\x80\x00\x00\x07\x80\x00\x00\x00%\x00\x00\x0e\xff\x00\x00\x047', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="20" format="pickle">gASVr3wAAAAAAAB9lCiMCmF1dG9fYXBwbHmUiIwSY29udHJvbEFyZWFWaXNpYmxllIiMB21lcmdp
bmeUSwCME3NhdmVkV2lkZ2V0R2VvbWV0cnmUQ0IB2dDLAAMAAAAACfMAAAFFAAAMeQAAAn0AAAnz
AAABagAADHkAAAJ9AAAAAQAAAAAHgAAACfMAAAFqAAAMeQAAAn2UjAtfX3ZlcnNpb25fX5RLAowQ
Y29udGV4dF9zZXR0aW5nc5RdlCiMFW9yYW5nZXdpZGdldC5zZXR0aW5nc5SMB0NvbnRleHSUk5Qp
gZR9lCiMBnZhbHVlc5R9lCiMCmF0dHJfcGFpcnOUXZRdlCiMCVJvdyBpbmRleJRLZIaUaBNLZIaU
ZWFoBksCdYwKdmFyaWFibGVzMZR9lCiMCWxvYW5fYW1udJRLZYwIaW50X3JhdGWUS2WMCmFubnVh
bF9pbmOUS2WMA2R0aZRLZYwOaW5xX2xhc3RfNm10aHOUS2WMCG9wZW5fYWNjlEtljA9mdW5kZWRf
YW1udF9pbnaUS2WMCXJldm9sX2JhbJRLZYwJdG90YWxfYWNjlEtljA5lbXBfbGVuZ3RoX2ludJRL
ZYwbbXRoc19zaW5jZV9lYXJsaWVzdF9jcl9saW5llEtljAh0ZXJtX2ludJRLZYwSbXRoc19zaW5j
ZV9pc3N1ZV9klEtljA1vdXRfcHJuY3BfaW52lEtljA90b3RhbF9weW1udF9pbnaUS2WMCGdvb2Rf
YmFklEtldYwKdmFyaWFibGVzMpR9lCiMDHN1Yl9ncmFkZV9BMZRLZowMc3ViX2dyYWRlX0EylEtm
jAxzdWJfZ3JhZGVfQTOUS2aMDHN1Yl9ncmFkZV9BNJRLZowMc3ViX2dyYWRlX0E1lEtmjAxzdWJf
Z3JhZGVfQjGUS2aMDHN1Yl9ncmFkZV9CMpRLZowMc3ViX2dyYWRlX0IzlEtmjAxzdWJfZ3JhZGVf
QjSUS2aMDHN1Yl9ncmFkZV9CNZRLZowMc3ViX2dyYWRlX0MxlEtmjAxzdWJfZ3JhZGVfQzKUS2aM
DHN1Yl9ncmFkZV9DM5RLZowMc3ViX2dyYWRlX0M0lEtmjAxzdWJfZ3JhZGVfQzWUS2aMDHN1Yl9n
cmFkZV9EMZRLZowMc3ViX2dyYWRlX0QylEtmjAxzdWJfZ3JhZGVfRDOUS2aMDHN1Yl9ncmFkZV9E
NJRLZowMc3ViX2dyYWRlX0Q1lEtmjAxzdWJfZ3JhZGVfRTGUS2aMDHN1Yl9ncmFkZV9FMpRLZowM
c3ViX2dyYWRlX0UzlEtmjAxzdWJfZ3JhZGVfRTSUS2aMDHN1Yl9ncmFkZV9FNZRLZowMc3ViX2dy
YWRlX0YxlEtmjAxzdWJfZ3JhZGVfRjKUS2aMDHN1Yl9ncmFkZV9GM5RLZowMc3ViX2dyYWRlX0Y0
lEtmjAxzdWJfZ3JhZGVfRjWUS2aMDHN1Yl9ncmFkZV9HMZRLZowMc3ViX2dyYWRlX0cylEtmjAxz
dWJfZ3JhZGVfRzOUS2aMDHN1Yl9ncmFkZV9HNJRLZowRZW1wX2xlbmd0aF8xIHllYXKUS2aMEmVt
cF9sZW5ndGhfMiB5ZWFyc5RLZowSZW1wX2xlbmd0aF8zIHllYXJzlEtmjBJlbXBfbGVuZ3RoXzQg
eWVhcnOUS2aMEmVtcF9sZW5ndGhfNSB5ZWFyc5RLZowSZW1wX2xlbmd0aF82IHllYXJzlEtmjBJl
bXBfbGVuZ3RoXzcgeWVhcnOUS2aMEmVtcF9sZW5ndGhfOCB5ZWFyc5RLZowSZW1wX2xlbmd0aF85
IHllYXJzlEtmjBRlbXBfbGVuZ3RoXzEwKyB5ZWFyc5RLZowXaG9tZV9vd25lcnNoaXBfTU9SVEdB
R0WUS2aMFGhvbWVfb3duZXJzaGlwX09USEVSlEtmjBJob21lX293bmVyc2hpcF9PV06US2aMIHZl
cmlmaWNhdGlvbl9zdGF0dXNfTm90IFZlcmlmaWVklEtmjCN2ZXJpZmljYXRpb25fc3RhdHVzX1Nv
dXJjZSBWZXJpZmllZJRLZowLcHVycG9zZV9jYXKUS2aME3B1cnBvc2VfY3JlZGl0X2NhcmSUS2aM
GnB1cnBvc2VfZGVidF9jb25zb2xpZGF0aW9ulEtmjBNwdXJwb3NlX2VkdWNhdGlvbmFslEtmjBhw
dXJwb3NlX2hvbWVfaW1wcm92ZW1lbnSUS2aMDXB1cnBvc2VfaG91c2WUS2aMFnB1cnBvc2VfbWFq
b3JfcHVyY2hhc2WUS2aMD3B1cnBvc2VfbWVkaWNhbJRLZowOcHVycG9zZV9tb3ZpbmeUS2aMDXB1
cnBvc2Vfb3RoZXKUS2aMGHB1cnBvc2VfcmVuZXdhYmxlX2VuZXJneZRLZowWcHVycG9zZV9zbWFs
bF9idXNpbmVzc5RLZowQcHVycG9zZV92YWNhdGlvbpRLZowNYWRkcl9zdGF0ZV9BS5RLZowNYWRk
cl9zdGF0ZV9BTJRLZowNYWRkcl9zdGF0ZV9BUpRLZowNYWRkcl9zdGF0ZV9BWpRLZowNYWRkcl9z
dGF0ZV9DQZRLZowNYWRkcl9zdGF0ZV9DT5RLZowNYWRkcl9zdGF0ZV9DVJRLZowNYWRkcl9zdGF0
ZV9EQ5RLZowNYWRkcl9zdGF0ZV9ERZRLZowNYWRkcl9zdGF0ZV9GTJRLZowNYWRkcl9zdGF0ZV9H
QZRLZowNYWRkcl9zdGF0ZV9ISZRLZowNYWRkcl9zdGF0ZV9JQZRLZowNYWRkcl9zdGF0ZV9JTJRL
ZowNYWRkcl9zdGF0ZV9LU5RLZowNYWRkcl9zdGF0ZV9LWZRLZowNYWRkcl9zdGF0ZV9MQZRLZowN
YWRkcl9zdGF0ZV9NQZRLZowNYWRkcl9zdGF0ZV9NRJRLZowNYWRkcl9zdGF0ZV9NSZRLZowNYWRk
cl9zdGF0ZV9NTpRLZowNYWRkcl9zdGF0ZV9NT5RLZowNYWRkcl9zdGF0ZV9NU5RLZowNYWRkcl9z
dGF0ZV9NVJRLZowNYWRkcl9zdGF0ZV9OQ5RLZowNYWRkcl9zdGF0ZV9OSJRLZowNYWRkcl9zdGF0
ZV9OSpRLZowNYWRkcl9zdGF0ZV9OTZRLZowNYWRkcl9zdGF0ZV9OVpRLZowNYWRkcl9zdGF0ZV9O
WZRLZowNYWRkcl9zdGF0ZV9PSJRLZowNYWRkcl9zdGF0ZV9PS5RLZowNYWRkcl9zdGF0ZV9PUpRL
ZowNYWRkcl9zdGF0ZV9QQZRLZowNYWRkcl9zdGF0ZV9SSZRLZowNYWRkcl9zdGF0ZV9TQ5RLZowN
YWRkcl9zdGF0ZV9TRJRLZowNYWRkcl9zdGF0ZV9UTpRLZowNYWRkcl9zdGF0ZV9UWJRLZowNYWRk
cl9zdGF0ZV9VVJRLZowNYWRkcl9zdGF0ZV9WQZRLZowNYWRkcl9zdGF0ZV9WVJRLZowNYWRkcl9z
dGF0ZV9XQZRLZowNYWRkcl9zdGF0ZV9XSZRLZowNYWRkcl9zdGF0ZV9XVpRLZowTbGFzdF9weW1u
dF9kX0Fwci0xMZRLZowTbGFzdF9weW1udF9kX0Fwci0xMpRLZowTbGFzdF9weW1udF9kX0Fwci0x
M5RLZowTbGFzdF9weW1udF9kX0Fwci0xNJRLZowTbGFzdF9weW1udF9kX0Fwci0xNZRLZowTbGFz
dF9weW1udF9kX0F1Zy0xMJRLZowTbGFzdF9weW1udF9kX0F1Zy0xMZRLZowTbGFzdF9weW1udF9k
X0F1Zy0xMpRLZowTbGFzdF9weW1udF9kX0F1Zy0xM5RLZowTbGFzdF9weW1udF9kX0F1Zy0xNJRL
ZowTbGFzdF9weW1udF9kX0F1Zy0xNZRLZowTbGFzdF9weW1udF9kX0RlYy0xMJRLZowTbGFzdF9w
eW1udF9kX0RlYy0xMZRLZowTbGFzdF9weW1udF9kX0RlYy0xMpRLZowTbGFzdF9weW1udF9kX0Rl
Yy0xM5RLZowTbGFzdF9weW1udF9kX0RlYy0xNJRLZowTbGFzdF9weW1udF9kX0RlYy0xNZRLZowT
bGFzdF9weW1udF9kX0ZlYi0xMZRLZowTbGFzdF9weW1udF9kX0ZlYi0xMpRLZowTbGFzdF9weW1u
dF9kX0ZlYi0xM5RLZowTbGFzdF9weW1udF9kX0ZlYi0xNJRLZowTbGFzdF9weW1udF9kX0ZlYi0x
NZRLZowTbGFzdF9weW1udF9kX0phbi0xMZRLZowTbGFzdF9weW1udF9kX0phbi0xMpRLZowTbGFz
dF9weW1udF9kX0phbi0xM5RLZowTbGFzdF9weW1udF9kX0phbi0xNJRLZowTbGFzdF9weW1udF9k
X0phbi0xNZRLZowTbGFzdF9weW1udF9kX0phbi0xNpRLZowTbGFzdF9weW1udF9kX0p1bC0xMJRL
ZowTbGFzdF9weW1udF9kX0p1bC0xMZRLZowTbGFzdF9weW1udF9kX0p1bC0xMpRLZowTbGFzdF9w
eW1udF9kX0p1bC0xM5RLZowTbGFzdF9weW1udF9kX0p1bC0xNJRLZowTbGFzdF9weW1udF9kX0p1
bC0xNZRLZowTbGFzdF9weW1udF9kX0p1bi0xMZRLZowTbGFzdF9weW1udF9kX0p1bi0xMpRLZowT
bGFzdF9weW1udF9kX0p1bi0xM5RLZowTbGFzdF9weW1udF9kX0p1bi0xNJRLZowTbGFzdF9weW1u
dF9kX0p1bi0xNZRLZowTbGFzdF9weW1udF9kX01hci0xMZRLZowTbGFzdF9weW1udF9kX01hci0x
MpRLZowTbGFzdF9weW1udF9kX01hci0xM5RLZowTbGFzdF9weW1udF9kX01hci0xNJRLZowTbGFz
dF9weW1udF9kX01hci0xNZRLZowTbGFzdF9weW1udF9kX01heS0xMZRLZowTbGFzdF9weW1udF9k
X01heS0xMpRLZowTbGFzdF9weW1udF9kX01heS0xM5RLZowTbGFzdF9weW1udF9kX01heS0xNJRL
ZowTbGFzdF9weW1udF9kX01heS0xNZRLZowTbGFzdF9weW1udF9kX05vdi0xMJRLZowTbGFzdF9w
eW1udF9kX05vdi0xMZRLZowTbGFzdF9weW1udF9kX05vdi0xMpRLZowTbGFzdF9weW1udF9kX05v
di0xM5RLZowTbGFzdF9weW1udF9kX05vdi0xNJRLZowTbGFzdF9weW1udF9kX05vdi0xNZRLZowT
bGFzdF9weW1udF9kX09jdC0xMJRLZowTbGFzdF9weW1udF9kX09jdC0xMZRLZowTbGFzdF9weW1u
dF9kX09jdC0xMpRLZowTbGFzdF9weW1udF9kX09jdC0xM5RLZowTbGFzdF9weW1udF9kX09jdC0x
NJRLZowTbGFzdF9weW1udF9kX09jdC0xNZRLZowTbGFzdF9weW1udF9kX1NlcC0xMJRLZowTbGFz
dF9weW1udF9kX1NlcC0xMZRLZowTbGFzdF9weW1udF9kX1NlcC0xMpRLZowTbGFzdF9weW1udF9k
X1NlcC0xM5RLZowTbGFzdF9weW1udF9kX1NlcC0xNJRLZowMcHltbnRfcGxhbl9ulEtmjBNuZXh0
X3B5bW50X2RfRmViLTE2lEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfQXByLTExlEtmjBlsYXN0X2Ny
ZWRpdF9wdWxsX2RfQXByLTEylEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfQXByLTEzlEtmjBlsYXN0
X2NyZWRpdF9wdWxsX2RfQXByLTE0lEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfQXByLTE1lEtmjBls
YXN0X2NyZWRpdF9wdWxsX2RfQXVnLTEwlEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfQXVnLTExlEtm
jBlsYXN0X2NyZWRpdF9wdWxsX2RfQXVnLTEylEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfQXVnLTEz
lEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfQXVnLTE0lEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfQXVn
LTE1lEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfRGVjLTEwlEtmjBlsYXN0X2NyZWRpdF9wdWxsX2Rf
RGVjLTExlEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfRGVjLTEylEtmjBlsYXN0X2NyZWRpdF9wdWxs
X2RfRGVjLTEzlEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfRGVjLTE0lEtmjBlsYXN0X2NyZWRpdF9w
dWxsX2RfRGVjLTE1lEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfRmViLTExlEtmjBlsYXN0X2NyZWRp
dF9wdWxsX2RfRmViLTEylEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfRmViLTEzlEtmjBlsYXN0X2Ny
ZWRpdF9wdWxsX2RfRmViLTE0lEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfRmViLTE1lEtmjBlsYXN0
X2NyZWRpdF9wdWxsX2RfSmFuLTExlEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfSmFuLTEylEtmjBls
YXN0X2NyZWRpdF9wdWxsX2RfSmFuLTEzlEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfSmFuLTE0lEtm
jBlsYXN0X2NyZWRpdF9wdWxsX2RfSmFuLTE1lEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfSmFuLTE2
lEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfSnVsLTEwlEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfSnVs
LTExlEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfSnVsLTEylEtmjBlsYXN0X2NyZWRpdF9wdWxsX2Rf
SnVsLTEzlEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfSnVsLTE0lEtmjBlsYXN0X2NyZWRpdF9wdWxs
X2RfSnVsLTE1lEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfSnVuLTEwlEtmjBlsYXN0X2NyZWRpdF9w
dWxsX2RfSnVuLTExlEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfSnVuLTEylEtmjBlsYXN0X2NyZWRp
dF9wdWxsX2RfSnVuLTEzlEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfSnVuLTE0lEtmjBlsYXN0X2Ny
ZWRpdF9wdWxsX2RfSnVuLTE1lEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfTWFyLTExlEtmjBlsYXN0
X2NyZWRpdF9wdWxsX2RfTWFyLTEylEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfTWFyLTEzlEtmjBls
YXN0X2NyZWRpdF9wdWxsX2RfTWFyLTE0lEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfTWFyLTE1lEtm
jBlsYXN0X2NyZWRpdF9wdWxsX2RfTWF5LTExlEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfTWF5LTEy
lEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfTWF5LTEzlEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfTWF5
LTE0lEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfTWF5LTE1lEtmjBlsYXN0X2NyZWRpdF9wdWxsX2Rf
Tm92LTEwlEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfTm92LTExlEtmjBlsYXN0X2NyZWRpdF9wdWxs
X2RfTm92LTEylEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfTm92LTEzlEtmjBlsYXN0X2NyZWRpdF9w
dWxsX2RfTm92LTE0lEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfTm92LTE1lEtmjBlsYXN0X2NyZWRp
dF9wdWxsX2RfT2N0LTEwlEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfT2N0LTExlEtmjBlsYXN0X2Ny
ZWRpdF9wdWxsX2RfT2N0LTEylEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfT2N0LTEzlEtmjBlsYXN0
X2NyZWRpdF9wdWxsX2RfT2N0LTE0lEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfT2N0LTE1lEtmjBls
YXN0X2NyZWRpdF9wdWxsX2RfU2VwLTEwlEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfU2VwLTExlEtm
jBlsYXN0X2NyZWRpdF9wdWxsX2RfU2VwLTEylEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfU2VwLTEz
lEtmjBlsYXN0X2NyZWRpdF9wdWxsX2RfU2VwLTE0lEtmdXViaAspgZR9lChoDn2UKIwKYXR0cl9w
YWlyc5RdlF2UKGgTS2SGlGgTS2SGlGVhaAZLAnVoFn2UKIwJbG9hbl9hbW50lEtljAhpbnRfcmF0
ZZRLZYwKYW5udWFsX2luY5RLZYwDZHRplEtljA5pbnFfbGFzdF82bXRoc5RLZYwIb3Blbl9hY2OU
S2WMD2Z1bmRlZF9hbW50X2ludpRLZYwJcmV2b2xfYmFslEtljAl0b3RhbF9hY2OUS2WMDmVtcF9s
ZW5ndGhfaW50lEtljBttdGhzX3NpbmNlX2VhcmxpZXN0X2NyX2xpbmWUS2WMCHRlcm1faW50lEtl
jBJtdGhzX3NpbmNlX2lzc3VlX2SUS2WMDW91dF9wcm5jcF9pbnaUS2WMD3RvdGFsX3B5bW50X2lu
dpRLZYwIZ29vZF9iYWSUS2V1aCh9lCiMCXN1Yl9ncmFkZZRLZYwKZW1wX2xlbmd0aJRLZYwOaG9t
ZV9vd25lcnNoaXCUS2WME3ZlcmlmaWNhdGlvbl9zdGF0dXOUS2WMB3B1cnBvc2WUS2WMCmFkZHJf
c3RhdGWUS2WME2luaXRpYWxfbGlzdF9zdGF0dXOUS2WMDGxhc3RfcHltbnRfZJRLZYwKcHltbnRf
cGxhbpRLZYwMbmV4dF9weW1udF9klEtljBJsYXN0X2NyZWRpdF9wdWxsX2SUS2V1dWJoCymBlH2U
KGgOfZQoaBBdlF2UKIwJUm93IGluZGV4lEtkhpRqRgEAAEtkhpRlYWgGSwJ1aBZ9lChoGEtlaBlL
ZWgaS2VoG0tlaBxLZWgdS2VoHktlaB9LZWggS2VoIUtlaCJLZWgjS2VoJEtlaCVLZWgmS2VoJ0tl
dWgofZQojA50ZXJtXzM2IG1vbnRoc5RLZowMc3ViX2dyYWRlX0ExlEtmjAxzdWJfZ3JhZGVfQTKU
S2aMDHN1Yl9ncmFkZV9BM5RLZowMc3ViX2dyYWRlX0E0lEtmjAxzdWJfZ3JhZGVfQTWUS2aMDHN1
Yl9ncmFkZV9CMZRLZowMc3ViX2dyYWRlX0IylEtmjAxzdWJfZ3JhZGVfQjOUS2aMDHN1Yl9ncmFk
ZV9CNJRLZowMc3ViX2dyYWRlX0I1lEtmjAxzdWJfZ3JhZGVfQzGUS2aMDHN1Yl9ncmFkZV9DMpRL
ZowMc3ViX2dyYWRlX0MzlEtmjAxzdWJfZ3JhZGVfQzSUS2aMDHN1Yl9ncmFkZV9DNZRLZowMc3Vi
X2dyYWRlX0QxlEtmjAxzdWJfZ3JhZGVfRDKUS2aMDHN1Yl9ncmFkZV9EM5RLZowMc3ViX2dyYWRl
X0Q0lEtmjAxzdWJfZ3JhZGVfRDWUS2aMDHN1Yl9ncmFkZV9FMZRLZowMc3ViX2dyYWRlX0UylEtm
jAxzdWJfZ3JhZGVfRTOUS2aMDHN1Yl9ncmFkZV9FNJRLZowMc3ViX2dyYWRlX0U1lEtmjAxzdWJf
Z3JhZGVfRjGUS2aMDHN1Yl9ncmFkZV9GMpRLZowMc3ViX2dyYWRlX0YzlEtmjAxzdWJfZ3JhZGVf
RjSUS2aMDHN1Yl9ncmFkZV9GNZRLZowMc3ViX2dyYWRlX0cxlEtmjAxzdWJfZ3JhZGVfRzKUS2aM
DHN1Yl9ncmFkZV9HM5RLZowMc3ViX2dyYWRlX0c0lEtmjBFlbXBfbGVuZ3RoXzEgeWVhcpRLZowS
ZW1wX2xlbmd0aF8yIHllYXJzlEtmjBJlbXBfbGVuZ3RoXzMgeWVhcnOUS2aMEmVtcF9sZW5ndGhf
NCB5ZWFyc5RLZowSZW1wX2xlbmd0aF81IHllYXJzlEtmjBJlbXBfbGVuZ3RoXzYgeWVhcnOUS2aM
EmVtcF9sZW5ndGhfNyB5ZWFyc5RLZowSZW1wX2xlbmd0aF84IHllYXJzlEtmjBJlbXBfbGVuZ3Ro
XzkgeWVhcnOUS2aMFGVtcF9sZW5ndGhfMTArIHllYXJzlEtmjBdob21lX293bmVyc2hpcF9NT1JU
R0FHRZRLZowUaG9tZV9vd25lcnNoaXBfT1RIRVKUS2aMEmhvbWVfb3duZXJzaGlwX09XTpRLZowg
dmVyaWZpY2F0aW9uX3N0YXR1c19Ob3QgVmVyaWZpZWSUS2aMI3ZlcmlmaWNhdGlvbl9zdGF0dXNf
U291cmNlIFZlcmlmaWVklEtmjAtwdXJwb3NlX2NhcpRLZowTcHVycG9zZV9jcmVkaXRfY2FyZJRL
ZowacHVycG9zZV9kZWJ0X2NvbnNvbGlkYXRpb26US2aME3B1cnBvc2VfZWR1Y2F0aW9uYWyUS2aM
GHB1cnBvc2VfaG9tZV9pbXByb3ZlbWVudJRLZowNcHVycG9zZV9ob3VzZZRLZowWcHVycG9zZV9t
YWpvcl9wdXJjaGFzZZRLZowPcHVycG9zZV9tZWRpY2FslEtmjA5wdXJwb3NlX21vdmluZ5RLZowN
cHVycG9zZV9vdGhlcpRLZowYcHVycG9zZV9yZW5ld2FibGVfZW5lcmd5lEtmjBZwdXJwb3NlX3Nt
YWxsX2J1c2luZXNzlEtmjBBwdXJwb3NlX3ZhY2F0aW9ulEtmjA1hZGRyX3N0YXRlX0FLlEtmjA1h
ZGRyX3N0YXRlX0FMlEtmjA1hZGRyX3N0YXRlX0FSlEtmjA1hZGRyX3N0YXRlX0FalEtmjA1hZGRy
X3N0YXRlX0NBlEtmjA1hZGRyX3N0YXRlX0NPlEtmjA1hZGRyX3N0YXRlX0NUlEtmjA1hZGRyX3N0
YXRlX0RDlEtmjA1hZGRyX3N0YXRlX0RFlEtmjA1hZGRyX3N0YXRlX0ZMlEtmjA1hZGRyX3N0YXRl
X0dBlEtmjA1hZGRyX3N0YXRlX0hJlEtmjA1hZGRyX3N0YXRlX0lBlEtmjA1hZGRyX3N0YXRlX0lM
lEtmjA1hZGRyX3N0YXRlX0tTlEtmjA1hZGRyX3N0YXRlX0tZlEtmjA1hZGRyX3N0YXRlX0xBlEtm
jA1hZGRyX3N0YXRlX01BlEtmjA1hZGRyX3N0YXRlX01ElEtmjA1hZGRyX3N0YXRlX01JlEtmjA1h
ZGRyX3N0YXRlX01OlEtmjA1hZGRyX3N0YXRlX01PlEtmjA1hZGRyX3N0YXRlX01TlEtmjA1hZGRy
X3N0YXRlX01UlEtmjA1hZGRyX3N0YXRlX05DlEtmjA1hZGRyX3N0YXRlX05IlEtmjA1hZGRyX3N0
YXRlX05KlEtmjA1hZGRyX3N0YXRlX05NlEtmjA1hZGRyX3N0YXRlX05WlEtmjA1hZGRyX3N0YXRl
X05ZlEtmjA1hZGRyX3N0YXRlX09IlEtmjA1hZGRyX3N0YXRlX09LlEtmjA1hZGRyX3N0YXRlX09S
lEtmjA1hZGRyX3N0YXRlX1BBlEtmjA1hZGRyX3N0YXRlX1JJlEtmjA1hZGRyX3N0YXRlX1NDlEtm
jA1hZGRyX3N0YXRlX1NElEtmjA1hZGRyX3N0YXRlX1ROlEtmjA1hZGRyX3N0YXRlX1RYlEtmjA1h
ZGRyX3N0YXRlX1VUlEtmjA1hZGRyX3N0YXRlX1ZBlEtmjA1hZGRyX3N0YXRlX1ZUlEtmjA1hZGRy
X3N0YXRlX1dBlEtmjA1hZGRyX3N0YXRlX1dJlEtmjA1hZGRyX3N0YXRlX1dWlEtmjBNsYXN0X3B5
bW50X2RfQXByLTExlEtmjBNsYXN0X3B5bW50X2RfQXByLTEylEtmjBNsYXN0X3B5bW50X2RfQXBy
LTEzlEtmjBNsYXN0X3B5bW50X2RfQXByLTE0lEtmjBNsYXN0X3B5bW50X2RfQXByLTE1lEtmjBNs
YXN0X3B5bW50X2RfQXVnLTEwlEtmjBNsYXN0X3B5bW50X2RfQXVnLTExlEtmjBNsYXN0X3B5bW50
X2RfQXVnLTEylEtmjBNsYXN0X3B5bW50X2RfQXVnLTEzlEtmjBNsYXN0X3B5bW50X2RfQXVnLTE0
lEtmjBNsYXN0X3B5bW50X2RfQXVnLTE1lEtmjBNsYXN0X3B5bW50X2RfRGVjLTEwlEtmjBNsYXN0
X3B5bW50X2RfRGVjLTExlEtmjBNsYXN0X3B5bW50X2RfRGVjLTEylEtmjBNsYXN0X3B5bW50X2Rf
RGVjLTEzlEtmjBNsYXN0X3B5bW50X2RfRGVjLTE0lEtmjBNsYXN0X3B5bW50X2RfRGVjLTE1lEtm
jBNsYXN0X3B5bW50X2RfRmViLTExlEtmjBNsYXN0X3B5bW50X2RfRmViLTEylEtmjBNsYXN0X3B5
bW50X2RfRmViLTEzlEtmjBNsYXN0X3B5bW50X2RfRmViLTE0lEtmjBNsYXN0X3B5bW50X2RfRmVi
LTE1lEtmjBNsYXN0X3B5bW50X2RfSmFuLTExlEtmjBNsYXN0X3B5bW50X2RfSmFuLTEylEtmjBNs
YXN0X3B5bW50X2RfSmFuLTEzlEtmjBNsYXN0X3B5bW50X2RfSmFuLTE0lEtmjBNsYXN0X3B5bW50
X2RfSmFuLTE1lEtmjBNsYXN0X3B5bW50X2RfSmFuLTE2lEtmjBNsYXN0X3B5bW50X2RfSnVsLTEw
lEtmjBNsYXN0X3B5bW50X2RfSnVsLTExlEtmjBNsYXN0X3B5bW50X2RfSnVsLTEylEtmjBNsYXN0
X3B5bW50X2RfSnVsLTEzlEtmjBNsYXN0X3B5bW50X2RfSnVsLTE0lEtmjBNsYXN0X3B5bW50X2Rf
SnVsLTE1lEtmjBNsYXN0X3B5bW50X2RfSnVuLTExlEtmjBNsYXN0X3B5bW50X2RfSnVuLTEylEtm
jBNsYXN0X3B5bW50X2RfSnVuLTEzlEtmjBNsYXN0X3B5bW50X2RfSnVuLTE0lEtmjBNsYXN0X3B5
bW50X2RfSnVuLTE1lEtmjBNsYXN0X3B5bW50X2RfTWFyLTExlEtmjBNsYXN0X3B5bW50X2RfTWFy
LTEylEtmjBNsYXN0X3B5bW50X2RfTWFyLTEzlEtmjBNsYXN0X3B5bW50X2RfTWFyLTE0lEtmjBNs
YXN0X3B5bW50X2RfTWFyLTE1lEtmjBNsYXN0X3B5bW50X2RfTWF5LTExlEtmjBNsYXN0X3B5bW50
X2RfTWF5LTEylEtmjBNsYXN0X3B5bW50X2RfTWF5LTEzlEtmjBNsYXN0X3B5bW50X2RfTWF5LTE0
lEtmjBNsYXN0X3B5bW50X2RfTWF5LTE1lEtmjBNsYXN0X3B5bW50X2RfTm92LTEwlEtmjBNsYXN0
X3B5bW50X2RfTm92LTExlEtmjBNsYXN0X3B5bW50X2RfTm92LTEylEtmjBNsYXN0X3B5bW50X2Rf
Tm92LTEzlEtmjBNsYXN0X3B5bW50X2RfTm92LTE0lEtmjBNsYXN0X3B5bW50X2RfTm92LTE1lEtm
jBNsYXN0X3B5bW50X2RfT2N0LTEwlEtmjBNsYXN0X3B5bW50X2RfT2N0LTExlEtmjBNsYXN0X3B5
bW50X2RfT2N0LTEylEtmjBNsYXN0X3B5bW50X2RfT2N0LTEzlEtmjBNsYXN0X3B5bW50X2RfT2N0
LTE0lEtmjBNsYXN0X3B5bW50X2RfT2N0LTE1lEtmjBNsYXN0X3B5bW50X2RfU2VwLTEwlEtmjBNs
YXN0X3B5bW50X2RfU2VwLTExlEtmjBNsYXN0X3B5bW50X2RfU2VwLTEylEtmjBNsYXN0X3B5bW50
X2RfU2VwLTEzlEtmjBNsYXN0X3B5bW50X2RfU2VwLTE0lEtmjAxweW1udF9wbGFuX26US2aME25l
eHRfcHltbnRfZF9GZWItMTaUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9BcHItMTGUS2aMGWxhc3Rf
Y3JlZGl0X3B1bGxfZF9BcHItMTKUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9BcHItMTOUS2aMGWxh
c3RfY3JlZGl0X3B1bGxfZF9BcHItMTSUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9BcHItMTWUS2aM
GWxhc3RfY3JlZGl0X3B1bGxfZF9BdWctMTCUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9BdWctMTGU
S2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9BdWctMTKUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9BdWct
MTOUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9BdWctMTSUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9B
dWctMTWUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9EZWMtMTCUS2aMGWxhc3RfY3JlZGl0X3B1bGxf
ZF9EZWMtMTGUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9EZWMtMTKUS2aMGWxhc3RfY3JlZGl0X3B1
bGxfZF9EZWMtMTOUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9EZWMtMTSUS2aMGWxhc3RfY3JlZGl0
X3B1bGxfZF9EZWMtMTWUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9GZWItMTGUS2aMGWxhc3RfY3Jl
ZGl0X3B1bGxfZF9GZWItMTKUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9GZWItMTOUS2aMGWxhc3Rf
Y3JlZGl0X3B1bGxfZF9GZWItMTSUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9GZWItMTWUS2aMGWxh
c3RfY3JlZGl0X3B1bGxfZF9KYW4tMTGUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9KYW4tMTKUS2aM
GWxhc3RfY3JlZGl0X3B1bGxfZF9KYW4tMTOUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9KYW4tMTSU
S2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9KYW4tMTWUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9KYW4t
MTaUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9KdWwtMTCUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9K
dWwtMTGUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9KdWwtMTKUS2aMGWxhc3RfY3JlZGl0X3B1bGxf
ZF9KdWwtMTOUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9KdWwtMTSUS2aMGWxhc3RfY3JlZGl0X3B1
bGxfZF9KdWwtMTWUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9KdW4tMTCUS2aMGWxhc3RfY3JlZGl0
X3B1bGxfZF9KdW4tMTGUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9KdW4tMTKUS2aMGWxhc3RfY3Jl
ZGl0X3B1bGxfZF9KdW4tMTOUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9KdW4tMTSUS2aMGWxhc3Rf
Y3JlZGl0X3B1bGxfZF9KdW4tMTWUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9NYXItMTGUS2aMGWxh
c3RfY3JlZGl0X3B1bGxfZF9NYXItMTKUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9NYXItMTOUS2aM
GWxhc3RfY3JlZGl0X3B1bGxfZF9NYXItMTSUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9NYXItMTWU
S2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9NYXktMTGUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9NYXkt
MTKUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9NYXktMTOUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9N
YXktMTSUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9NYXktMTWUS2aMGWxhc3RfY3JlZGl0X3B1bGxf
ZF9Ob3YtMTCUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9Ob3YtMTGUS2aMGWxhc3RfY3JlZGl0X3B1
bGxfZF9Ob3YtMTKUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9Ob3YtMTOUS2aMGWxhc3RfY3JlZGl0
X3B1bGxfZF9Ob3YtMTSUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9Ob3YtMTWUS2aMGWxhc3RfY3Jl
ZGl0X3B1bGxfZF9PY3QtMTCUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9PY3QtMTGUS2aMGWxhc3Rf
Y3JlZGl0X3B1bGxfZF9PY3QtMTKUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9PY3QtMTOUS2aMGWxh
c3RfY3JlZGl0X3B1bGxfZF9PY3QtMTSUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9PY3QtMTWUS2aM
GWxhc3RfY3JlZGl0X3B1bGxfZF9TZXAtMTCUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9TZXAtMTGU
S2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9TZXAtMTKUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9TZXAt
MTOUS2aMGWxhc3RfY3JlZGl0X3B1bGxfZF9TZXAtMTSUS2Z1dWJoCymBlH2UKGgOfZQoaBBdlF2U
KGpGAQAAS2SGlGpGAQAAS2SGlGVhaAZLAnVoFn2UKGgYS2VoGUtlaBpLZWgbS2VoHEtlaB1LZWge
S2VoH0tlaCBLZWghS2VoIktlaCNLZWgkS2VoJUtlaCZLZWgnS2V1aCh9lCiMDnRlcm1fMzYgbW9u
dGhzlEtmjAdncmFkZV9BlEtmjAdncmFkZV9ClEtmjAdncmFkZV9DlEtmjAdncmFkZV9ElEtmjAdn
cmFkZV9FlEtmjAdncmFkZV9GlEtmjAxzdWJfZ3JhZGVfQTGUS2aMDHN1Yl9ncmFkZV9BMpRLZowM
c3ViX2dyYWRlX0EzlEtmjAxzdWJfZ3JhZGVfQTSUS2aMDHN1Yl9ncmFkZV9BNZRLZowMc3ViX2dy
YWRlX0IxlEtmjAxzdWJfZ3JhZGVfQjKUS2aMDHN1Yl9ncmFkZV9CM5RLZowMc3ViX2dyYWRlX0I0
lEtmjAxzdWJfZ3JhZGVfQjWUS2aMDHN1Yl9ncmFkZV9DMZRLZowMc3ViX2dyYWRlX0MylEtmjAxz
dWJfZ3JhZGVfQzOUS2aMDHN1Yl9ncmFkZV9DNJRLZowMc3ViX2dyYWRlX0M1lEtmjAxzdWJfZ3Jh
ZGVfRDGUS2aMDHN1Yl9ncmFkZV9EMpRLZowMc3ViX2dyYWRlX0QzlEtmjAxzdWJfZ3JhZGVfRDSU
S2aMDHN1Yl9ncmFkZV9ENZRLZowMc3ViX2dyYWRlX0UxlEtmjAxzdWJfZ3JhZGVfRTKUS2aMDHN1
Yl9ncmFkZV9FM5RLZowMc3ViX2dyYWRlX0U0lEtmjAxzdWJfZ3JhZGVfRTWUS2aMDHN1Yl9ncmFk
ZV9GMZRLZowMc3ViX2dyYWRlX0YylEtmjAxzdWJfZ3JhZGVfRjOUS2aMDHN1Yl9ncmFkZV9GNJRL
ZowMc3ViX2dyYWRlX0Y1lEtmjAxzdWJfZ3JhZGVfRzGUS2aMDHN1Yl9ncmFkZV9HMpRLZowMc3Vi
X2dyYWRlX0czlEtmjAxzdWJfZ3JhZGVfRzSUS2aMEWVtcF9sZW5ndGhfMSB5ZWFylEtmjBJlbXBf
bGVuZ3RoXzIgeWVhcnOUS2aMEmVtcF9sZW5ndGhfMyB5ZWFyc5RLZowSZW1wX2xlbmd0aF80IHll
YXJzlEtmjBJlbXBfbGVuZ3RoXzUgeWVhcnOUS2aMEmVtcF9sZW5ndGhfNiB5ZWFyc5RLZowSZW1w
X2xlbmd0aF83IHllYXJzlEtmjBJlbXBfbGVuZ3RoXzggeWVhcnOUS2aMEmVtcF9sZW5ndGhfOSB5
ZWFyc5RLZowUZW1wX2xlbmd0aF8xMCsgeWVhcnOUS2aMF2hvbWVfb3duZXJzaGlwX01PUlRHQUdF
lEtmjBRob21lX293bmVyc2hpcF9PVEhFUpRLZowSaG9tZV9vd25lcnNoaXBfT1dOlEtmjCB2ZXJp
ZmljYXRpb25fc3RhdHVzX05vdCBWZXJpZmllZJRLZowjdmVyaWZpY2F0aW9uX3N0YXR1c19Tb3Vy
Y2UgVmVyaWZpZWSUS2aMC3B1cnBvc2VfY2FylEtmjBNwdXJwb3NlX2NyZWRpdF9jYXJklEtmjBpw
dXJwb3NlX2RlYnRfY29uc29saWRhdGlvbpRLZowTcHVycG9zZV9lZHVjYXRpb25hbJRLZowYcHVy
cG9zZV9ob21lX2ltcHJvdmVtZW50lEtmjA1wdXJwb3NlX2hvdXNllEtmjBZwdXJwb3NlX21ham9y
X3B1cmNoYXNllEtmjA9wdXJwb3NlX21lZGljYWyUS2aMDnB1cnBvc2VfbW92aW5nlEtmjA1wdXJw
b3NlX290aGVylEtmjBhwdXJwb3NlX3JlbmV3YWJsZV9lbmVyZ3mUS2aMFnB1cnBvc2Vfc21hbGxf
YnVzaW5lc3OUS2aMEHB1cnBvc2VfdmFjYXRpb26US2aMDWFkZHJfc3RhdGVfQUuUS2aMDWFkZHJf
c3RhdGVfQUyUS2aMDWFkZHJfc3RhdGVfQVKUS2aMDWFkZHJfc3RhdGVfQVqUS2aMDWFkZHJfc3Rh
dGVfQ0GUS2aMDWFkZHJfc3RhdGVfQ0+US2aMDWFkZHJfc3RhdGVfQ1SUS2aMDWFkZHJfc3RhdGVf
REOUS2aMDWFkZHJfc3RhdGVfREWUS2aMDWFkZHJfc3RhdGVfRkyUS2aMDWFkZHJfc3RhdGVfR0GU
S2aMDWFkZHJfc3RhdGVfSEmUS2aMDWFkZHJfc3RhdGVfSUGUS2aMDWFkZHJfc3RhdGVfSUyUS2aM
DWFkZHJfc3RhdGVfS1OUS2aMDWFkZHJfc3RhdGVfS1mUS2aMDWFkZHJfc3RhdGVfTEGUS2aMDWFk
ZHJfc3RhdGVfTUGUS2aMDWFkZHJfc3RhdGVfTUSUS2aMDWFkZHJfc3RhdGVfTUmUS2aMDWFkZHJf
c3RhdGVfTU6US2aMDWFkZHJfc3RhdGVfTU+US2aMDWFkZHJfc3RhdGVfTVOUS2aMDWFkZHJfc3Rh
dGVfTVSUS2aMDWFkZHJfc3RhdGVfTkOUS2aMDWFkZHJfc3RhdGVfTkiUS2aMDWFkZHJfc3RhdGVf
TkqUS2aMDWFkZHJfc3RhdGVfTk2US2aMDWFkZHJfc3RhdGVfTlaUS2aMDWFkZHJfc3RhdGVfTlmU
S2aMDWFkZHJfc3RhdGVfT0iUS2aMDWFkZHJfc3RhdGVfT0uUS2aMDWFkZHJfc3RhdGVfT1KUS2aM
DWFkZHJfc3RhdGVfUEGUS2aMDWFkZHJfc3RhdGVfUkmUS2aMDWFkZHJfc3RhdGVfU0OUS2aMDWFk
ZHJfc3RhdGVfU0SUS2aMDWFkZHJfc3RhdGVfVE6US2aMDWFkZHJfc3RhdGVfVFiUS2aMDWFkZHJf
c3RhdGVfVVSUS2aMDWFkZHJfc3RhdGVfVkGUS2aMDWFkZHJfc3RhdGVfVlSUS2aMDWFkZHJfc3Rh
dGVfV0GUS2aMDWFkZHJfc3RhdGVfV0mUS2aMDWFkZHJfc3RhdGVfV1aUS2aME2xhc3RfcHltbnRf
ZF9BcHItMTGUS2aME2xhc3RfcHltbnRfZF9BcHItMTKUS2aME2xhc3RfcHltbnRfZF9BcHItMTOU
S2aME2xhc3RfcHltbnRfZF9BcHItMTSUS2aME2xhc3RfcHltbnRfZF9BcHItMTWUS2aME2xhc3Rf
cHltbnRfZF9BdWctMTCUS2aME2xhc3RfcHltbnRfZF9BdWctMTGUS2aME2xhc3RfcHltbnRfZF9B
dWctMTKUS2aME2xhc3RfcHltbnRfZF9BdWctMTOUS2aME2xhc3RfcHltbnRfZF9BdWctMTSUS2aM
E2xhc3RfcHltbnRfZF9BdWctMTWUS2aME2xhc3RfcHltbnRfZF9EZWMtMTCUS2aME2xhc3RfcHlt
bnRfZF9EZWMtMTGUS2aME2xhc3RfcHltbnRfZF9EZWMtMTKUS2aME2xhc3RfcHltbnRfZF9EZWMt
MTOUS2aME2xhc3RfcHltbnRfZF9EZWMtMTSUS2aME2xhc3RfcHltbnRfZF9EZWMtMTWUS2aME2xh
c3RfcHltbnRfZF9GZWItMTGUS2aME2xhc3RfcHltbnRfZF9GZWItMTKUS2aME2xhc3RfcHltbnRf
ZF9GZWItMTOUS2aME2xhc3RfcHltbnRfZF9GZWItMTSUS2aME2xhc3RfcHltbnRfZF9GZWItMTWU
S2aME2xhc3RfcHltbnRfZF9KYW4tMTGUS2aME2xhc3RfcHltbnRfZF9KYW4tMTKUS2aME2xhc3Rf
cHltbnRfZF9KYW4tMTOUS2aME2xhc3RfcHltbnRfZF9KYW4tMTSUS2aME2xhc3RfcHltbnRfZF9K
YW4tMTWUS2aME2xhc3RfcHltbnRfZF9KYW4tMTaUS2aME2xhc3RfcHltbnRfZF9KdWwtMTCUS2aM
E2xhc3RfcHltbnRfZF9KdWwtMTGUS2aME2xhc3RfcHltbnRfZF9KdWwtMTKUS2aME2xhc3RfcHlt
bnRfZF9KdWwtMTOUS2aME2xhc3RfcHltbnRfZF9KdWwtMTSUS2aME2xhc3RfcHltbnRfZF9KdWwt
MTWUS2aME2xhc3RfcHltbnRfZF9KdW4tMTGUS2aME2xhc3RfcHltbnRfZF9KdW4tMTKUS2aME2xh
c3RfcHltbnRfZF9KdW4tMTOUS2aME2xhc3RfcHltbnRfZF9KdW4tMTSUS2aME2xhc3RfcHltbnRf
ZF9KdW4tMTWUS2aME2xhc3RfcHltbnRfZF9NYXItMTGUS2aME2xhc3RfcHltbnRfZF9NYXItMTKU
S2aME2xhc3RfcHltbnRfZF9NYXItMTOUS2aME2xhc3RfcHltbnRfZF9NYXItMTSUS2aME2xhc3Rf
cHltbnRfZF9NYXItMTWUS2aME2xhc3RfcHltbnRfZF9NYXktMTGUS2aME2xhc3RfcHltbnRfZF9N
YXktMTKUS2aME2xhc3RfcHltbnRfZF9NYXktMTOUS2aME2xhc3RfcHltbnRfZF9NYXktMTSUS2aM
E2xhc3RfcHltbnRfZF9NYXktMTWUS2aME2xhc3RfcHltbnRfZF9Ob3YtMTCUS2aME2xhc3RfcHlt
bnRfZF9Ob3YtMTGUS2aME2xhc3RfcHltbnRfZF9Ob3YtMTKUS2aME2xhc3RfcHltbnRfZF9Ob3Yt
MTOUS2aME2xhc3RfcHltbnRfZF9Ob3YtMTSUS2aME2xhc3RfcHltbnRfZF9Ob3YtMTWUS2aME2xh
c3RfcHltbnRfZF9PY3QtMTCUS2aME2xhc3RfcHltbnRfZF9PY3QtMTGUS2aME2xhc3RfcHltbnRf
ZF9PY3QtMTKUS2aME2xhc3RfcHltbnRfZF9PY3QtMTOUS2aME2xhc3RfcHltbnRfZF9PY3QtMTSU
S2aME2xhc3RfcHltbnRfZF9PY3QtMTWUS2aME2xhc3RfcHltbnRfZF9TZXAtMTCUS2aME2xhc3Rf
cHltbnRfZF9TZXAtMTGUS2aME2xhc3RfcHltbnRfZF9TZXAtMTKUS2aME2xhc3RfcHltbnRfZF9T
ZXAtMTOUS2aME2xhc3RfcHltbnRfZF9TZXAtMTSUS2aMDHB5bW50X3BsYW5fbpRLZowTbmV4dF9w
eW1udF9kX0ZlYi0xNpRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0Fwci0xMZRLZowZbGFzdF9jcmVk
aXRfcHVsbF9kX0Fwci0xMpRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0Fwci0xM5RLZowZbGFzdF9j
cmVkaXRfcHVsbF9kX0Fwci0xNJRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0Fwci0xNZRLZowZbGFz
dF9jcmVkaXRfcHVsbF9kX0F1Zy0xMJRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0F1Zy0xMZRLZowZ
bGFzdF9jcmVkaXRfcHVsbF9kX0F1Zy0xMpRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0F1Zy0xM5RL
ZowZbGFzdF9jcmVkaXRfcHVsbF9kX0F1Zy0xNJRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0F1Zy0x
NZRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0RlYy0xMJRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0Rl
Yy0xMZRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0RlYy0xMpRLZowZbGFzdF9jcmVkaXRfcHVsbF9k
X0RlYy0xM5RLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0RlYy0xNJRLZowZbGFzdF9jcmVkaXRfcHVs
bF9kX0RlYy0xNZRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0ZlYi0xMZRLZowZbGFzdF9jcmVkaXRf
cHVsbF9kX0ZlYi0xMpRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0ZlYi0xM5RLZowZbGFzdF9jcmVk
aXRfcHVsbF9kX0ZlYi0xNJRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0ZlYi0xNZRLZowZbGFzdF9j
cmVkaXRfcHVsbF9kX0phbi0xMZRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0phbi0xMpRLZowZbGFz
dF9jcmVkaXRfcHVsbF9kX0phbi0xM5RLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0phbi0xNJRLZowZ
bGFzdF9jcmVkaXRfcHVsbF9kX0phbi0xNZRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0phbi0xNpRL
ZowZbGFzdF9jcmVkaXRfcHVsbF9kX0p1bC0xMJRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0p1bC0x
MZRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0p1bC0xMpRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0p1
bC0xM5RLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0p1bC0xNJRLZowZbGFzdF9jcmVkaXRfcHVsbF9k
X0p1bC0xNZRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0p1bi0xMJRLZowZbGFzdF9jcmVkaXRfcHVs
bF9kX0p1bi0xMZRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0p1bi0xMpRLZowZbGFzdF9jcmVkaXRf
cHVsbF9kX0p1bi0xM5RLZowZbGFzdF9jcmVkaXRfcHVsbF9kX0p1bi0xNJRLZowZbGFzdF9jcmVk
aXRfcHVsbF9kX0p1bi0xNZRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX01hci0xMZRLZowZbGFzdF9j
cmVkaXRfcHVsbF9kX01hci0xMpRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX01hci0xM5RLZowZbGFz
dF9jcmVkaXRfcHVsbF9kX01hci0xNJRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX01hci0xNZRLZowZ
bGFzdF9jcmVkaXRfcHVsbF9kX01heS0xMZRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX01heS0xMpRL
ZowZbGFzdF9jcmVkaXRfcHVsbF9kX01heS0xM5RLZowZbGFzdF9jcmVkaXRfcHVsbF9kX01heS0x
NJRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX01heS0xNZRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX05v
di0xMJRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX05vdi0xMZRLZowZbGFzdF9jcmVkaXRfcHVsbF9k
X05vdi0xMpRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX05vdi0xM5RLZowZbGFzdF9jcmVkaXRfcHVs
bF9kX05vdi0xNJRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX05vdi0xNZRLZowZbGFzdF9jcmVkaXRf
cHVsbF9kX09jdC0xMJRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX09jdC0xMZRLZowZbGFzdF9jcmVk
aXRfcHVsbF9kX09jdC0xMpRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX09jdC0xM5RLZowZbGFzdF9j
cmVkaXRfcHVsbF9kX09jdC0xNJRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX09jdC0xNZRLZowZbGFz
dF9jcmVkaXRfcHVsbF9kX1NlcC0xMJRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX1NlcC0xMZRLZowZ
bGFzdF9jcmVkaXRfcHVsbF9kX1NlcC0xMpRLZowZbGFzdF9jcmVkaXRfcHVsbF9kX1NlcC0xM5RL
ZowZbGFzdF9jcmVkaXRfcHVsbF9kX1NlcC0xNJRLZnV1YmgLKYGUfZQoaA59lChoEF2UXZQoakYB
AABLZIaUakYBAABLZIaUZWFoBksCdWgWfZQoaBhLZWgZS2VoGktlaBtLZWgcS2VoHUtlaB5LZWgf
S2VoIEtlaCFLZWgiS2VoI0tlaCRLZYwKcHltbnRfcGxhbpRLZWglS2VoJktlaCdLZXVoKH2UKGpH
AgAAS2ZqSAIAAEtmakkCAABLZmpKAgAAS2ZqSwIAAEtmakwCAABLZmpNAgAAS2ZqTgIAAEtmak8C
AABLZmpQAgAAS2ZqUQIAAEtmalICAABLZmpTAgAAS2ZqVAIAAEtmalUCAABLZmpWAgAAS2ZqVwIA
AEtmalgCAABLZmpZAgAAS2ZqWgIAAEtmalsCAABLZmpcAgAAS2ZqXQIAAEtmal4CAABLZmpfAgAA
S2ZqYAIAAEtmamECAABLZmpiAgAAS2ZqYwIAAEtmamQCAABLZmplAgAAS2ZqZgIAAEtmamcCAABL
ZmpoAgAAS2ZqaQIAAEtmamoCAABLZmprAgAAS2ZqbAIAAEtmam0CAABLZmpuAgAAS2ZqbwIAAEtm
anACAABLZmpxAgAAS2ZqcgIAAEtmanMCAABLZmp0AgAAS2ZqdQIAAEtmanYCAABLZmp3AgAAS2Zq
eAIAAEtmankCAABLZmp6AgAAS2ZqewIAAEtmanwCAABLZmp9AgAAS2ZqfgIAAEtman8CAABLZmqA
AgAAS2ZqgQIAAEtmaoICAABLZmqDAgAAS2ZqhAIAAEtmaoUCAABLZmqGAgAAS2ZqhwIAAEtmaogC
AABLZmqJAgAAS2ZqigIAAEtmaosCAABLZmqMAgAAS2ZqjQIAAEtmao4CAABLZmqPAgAAS2ZqkAIA
AEtmapECAABLZmqSAgAAS2ZqkwIAAEtmapQCAABLZmqVAgAAS2ZqlgIAAEtmapcCAABLZmqYAgAA
S2ZqmQIAAEtmapoCAABLZmqbAgAAS2ZqnAIAAEtmap0CAABLZmqeAgAAS2ZqnwIAAEtmaqACAABL
ZmqhAgAAS2ZqogIAAEtmaqMCAABLZmqkAgAAS2ZqpQIAAEtmaqYCAABLZmqnAgAAS2ZqqAIAAEtm
aqkCAABLZmqqAgAAS2ZqqwIAAEtmaqwCAABLZmqtAgAAS2ZqrgIAAEtmaq8CAABLZmqwAgAAS2Zq
sQIAAEtmarICAABLZmqzAgAAS2ZqtAIAAEtmarUCAABLZmq2AgAAS2ZqtwIAAEtmargCAABLZmq5
AgAAS2ZqugIAAEtmarsCAABLZmq8AgAAS2ZqvQIAAEtmar4CAABLZmq/AgAAS2ZqwAIAAEtmasEC
AABLZmrCAgAAS2ZqwwIAAEtmasQCAABLZmrFAgAAS2ZqxgIAAEtmascCAABLZmrIAgAAS2ZqyQIA
AEtmasoCAABLZmrLAgAAS2ZqzAIAAEtmas0CAABLZmrOAgAAS2ZqzwIAAEtmatACAABLZmrRAgAA
S2Zq0gIAAEtmatMCAABLZmrUAgAAS2Zq1QIAAEtmatYCAABLZmrXAgAAS2Zq2AIAAEtmatkCAABL
ZmraAgAAS2Zq2wIAAEtmatwCAABLZmrdAgAAS2Zq3gIAAEtmat8CAABLZmrgAgAAS2Zq4QIAAEtm
auICAABLZmrjAgAAS2Zq5AIAAEtmauUCAABLZmrmAgAAS2Zq5wIAAEtmaugCAABLZmrpAgAAS2Zq
6gIAAEtmausCAABLZmrsAgAAS2Zq7QIAAEtmau4CAABLZmrvAgAAS2Zq8AIAAEtmavECAABLZmry
AgAAS2Zq8wIAAEtmavQCAABLZmr1AgAAS2Zq9gIAAEtmavcCAABLZmr4AgAAS2Zq+QIAAEtmavoC
AABLZmr7AgAAS2Zq/AIAAEtmav0CAABLZmr+AgAAS2Zq/wIAAEtmagADAABLZmoBAwAAS2ZqAgMA
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
AgAAS2Zq+QIAAEtmavoCAABLZmr7AgAAS2Zq/AIAAEtmav0CAABLZmr+AgAAS2Zq/wIAAEtmagAD
AABLZmoBAwAAS2ZqAgMAAEtmagMDAABLZmoEAwAAS2ZqBQMAAEtmagYDAABLZmoHAwAAS2ZqCAMA
AEtmagkDAABLZmoKAwAAS2ZqCwMAAEtmagwDAABLZmoNAwAAS2ZqDgMAAEtmag8DAABLZmoQAwAA
S2ZqEQMAAEtmahIDAABLZmoTAwAAS2ZqFAMAAEtmahUDAABLZmoWAwAAS2ZqFwMAAEtmahgDAABL
ZmoZAwAAS2ZqGgMAAEtmahsDAABLZmocAwAAS2ZqHQMAAEtmah4DAABLZmofAwAAS2ZqIAMAAEtm
aiEDAABLZmoiAwAAS2ZqIwMAAEtmaiQDAABLZmolAwAAS2ZqJgMAAEtmaicDAABLZmooAwAAS2Zq
KQMAAEtmaioDAABLZmorAwAAS2ZqLAMAAEtmai0DAABLZmouAwAAS2ZqLwMAAEtmajADAABLZmox
AwAAS2ZqMgMAAEtmajMDAABLZmo0AwAAS2ZqNQMAAEtmajYDAABLZmo3AwAAS2ZqOAMAAEtmajkD
AABLZmo6AwAAS2ZqOwMAAEtmajwDAABLZmo9AwAAS2ZqPgMAAEtmaj8DAABLZnV1YmgLKYGUfZQo
aA59lChoEF2UXZQoakYBAABLZIaUakYBAABLZIaUZWFoBksCdWgWfZQoaBhLZWgZS2VoGktlaBtL
ZWgcS2VoHUtlaB5LZWgfS2VoIEtlaCFLZWgiS2VoI0tlaCRLZWpIAwAAS2VoJUtlaCZLZYwMbmV4
dF9weW1udF9klEtlalIDAABLZWgnS2V1aCh9lChqRwIAAEtmakgCAABLZmpJAgAAS2ZqSgIAAEtm
aksCAABLZmpMAgAAS2ZqTQIAAEtmak4CAABLZmpPAgAAS2ZqUAIAAEtmalECAABLZmpSAgAAS2Zq
UwIAAEtmalQCAABLZmpVAgAAS2ZqVgIAAEtmalcCAABLZmpYAgAAS2ZqWQIAAEtmaloCAABLZmpb
AgAAS2ZqXAIAAEtmal0CAABLZmpeAgAAS2ZqXwIAAEtmamACAABLZmphAgAAS2ZqYgIAAEtmamMC
AABLZmpkAgAAS2ZqZQIAAEtmamYCAABLZmpnAgAAS2ZqaAIAAEtmamkCAABLZmpqAgAAS2ZqawIA
AEtmamwCAABLZmptAgAAS2ZqbgIAAEtmam8CAABLZmpwAgAAS2ZqcQIAAEtmanICAABLZmpzAgAA
S2ZqdAIAAEtmanUCAABLZmp2AgAAS2ZqdwIAAEtmangCAABLZmp5AgAAS2ZqegIAAEtmansCAABL
Zmp8AgAAS2ZqfQIAAEtman4CAABLZmp/AgAAS2ZqgAIAAEtmaoECAABLZmqCAgAAS2ZqgwIAAEtm
aoQCAABLZmqFAgAAS2ZqhgIAAEtmaocCAABLZmqIAgAAS2ZqiQIAAEtmaooCAABLZmqLAgAAS2Zq
jAIAAEtmao0CAABLZmqOAgAAS2ZqjwIAAEtmapACAABLZmqRAgAAS2ZqkgIAAEtmapMCAABLZmqU
AgAAS2ZqlQIAAEtmapYCAABLZmqXAgAAS2ZqmAIAAEtmapkCAABLZmqaAgAAS2ZqmwIAAEtmapwC
AABLZmqdAgAAS2ZqngIAAEtmap8CAABLZmqgAgAAS2ZqoQIAAEtmaqICAABLZmqjAgAAS2ZqpAIA
AEtmaqUCAABLZmqmAgAAS2ZqpwIAAEtmaqgCAABLZmqpAgAAS2ZqqgIAAEtmaqsCAABLZmqsAgAA
S2ZqrQIAAEtmaq4CAABLZmqvAgAAS2ZqsAIAAEtmarECAABLZmqyAgAAS2ZqswIAAEtmarQCAABL
Zmq1AgAAS2ZqtgIAAEtmarcCAABLZmq4AgAAS2ZquQIAAEtmaroCAABLZmq7AgAAS2ZqvAIAAEtm
ar0CAABLZmq+AgAAS2ZqvwIAAEtmasACAABLZmrBAgAAS2ZqwgIAAEtmasMCAABLZmrEAgAAS2Zq
xQIAAEtmasYCAABLZmrHAgAAS2ZqyAIAAEtmaskCAABLZmrKAgAAS2ZqywIAAEtmaswCAABLZmrN
AgAAS2ZqzgIAAEtmas8CAABLZmrQAgAAS2Zq0QIAAEtmatICAABLZmrTAgAAS2Zq1AIAAEtmatUC
AABLZmrWAgAAS2Zq1wIAAEtmatgCAABLZmrZAgAAS2Zq2gIAAEtmatsCAABLZmrcAgAAS2Zq3QIA
AEtmat4CAABLZmrfAgAAS2Zq4AIAAEtmauECAABLZmriAgAAS2Zq4wIAAEtmauQCAABLZmrlAgAA
S2Zq5gIAAEtmaucCAABLZmroAgAAS2Zq6QIAAEtmauoCAABLZmrrAgAAS2Zq7AIAAEtmau0CAABL
ZmruAgAAS2Zq7wIAAEtmavACAABLZmrxAgAAS2Zq8gIAAEtmavMCAABLZmr0AgAAS2Zq9QIAAEtm
avYCAABLZmr3AgAAS2Zq+AIAAEtmavkCAABLZmr6AgAAS2Zq+wIAAEtmavwCAABLZmr9AgAAS2Zq
/gIAAEtmav8CAABLZmoAAwAAS2ZqAQMAAEtmagIDAABLZmoDAwAAS2ZqBAMAAEtmagUDAABLZmoG
AwAAS2ZqBwMAAEtmaggDAABLZmoJAwAAS2ZqCgMAAEtmagsDAABLZmoMAwAAS2ZqDQMAAEtmag4D
AABLZmoPAwAAS2ZqEAMAAEtmahEDAABLZmoSAwAAS2ZqEwMAAEtmahQDAABLZmoVAwAAS2ZqFgMA
AEtmahcDAABLZmoYAwAAS2ZqGQMAAEtmahoDAABLZmobAwAAS2ZqHAMAAEtmah0DAABLZmoeAwAA
S2ZqHwMAAEtmaiADAABLZmohAwAAS2ZqIgMAAEtmaiMDAABLZmokAwAAS2ZqJQMAAEtmaiYDAABL
ZmonAwAAS2ZqKAMAAEtmaikDAABLZmoqAwAAS2ZqKwMAAEtmaiwDAABLZmotAwAAS2ZqLgMAAEtm
ai8DAABLZmowAwAAS2ZqMQMAAEtmajIDAABLZmozAwAAS2ZqNAMAAEtmajUDAABLZmo2AwAAS2Zq
NwMAAEtmajgDAABLZmo5AwAAS2ZqOgMAAEtmajsDAABLZmo8AwAAS2ZqPQMAAEtmaj4DAABLZmo/
AwAAS2Z1dWJoCymBlH2UKGgOfZQoaBBdlF2UKGpGAQAAS2SGlGpGAQAAS2SGlGVhaAZLAnVoFn2U
KGgYS2VoGUtlaBpLZWgbS2VoHEtlaB1LZWgeS2VoH0tlaCBLZWghS2VoIktlaCNLZWgkS2VqSAMA
AEtlaCVLZWgmS2VqXAMAAEtlalIDAABLZYwQYXBwbGljYXRpb25fdHlwZZRLZWgnS2V1aCh9lChq
RwIAAEtmakgCAABLZmpJAgAAS2ZqSgIAAEtmaksCAABLZmpMAgAAS2ZqTQIAAEtmak4CAABLZmpP
AgAAS2ZqUAIAAEtmalECAABLZmpSAgAAS2ZqUwIAAEtmalQCAABLZmpVAgAAS2ZqVgIAAEtmalcC
AABLZmpYAgAAS2ZqWQIAAEtmaloCAABLZmpbAgAAS2ZqXAIAAEtmal0CAABLZmpeAgAAS2ZqXwIA
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
aBxLZWgdS2VoHktlaB9LZWggS2VoIUtlaCJLZWgjS2VoJEtlakgDAABLZWglS2VoJktlalwDAABL
ZWpSAwAAS2VqcAMAAEtlamYDAABLZXVoKH2UKGpHAgAAS2ZqSAIAAEtmakkCAABLZmpKAgAAS2Zq
SwIAAEtmakwCAABLZmpNAgAAS2ZqTgIAAEtmak8CAABLZmpQAgAAS2ZqUQIAAEtmalICAABLZmpT
AgAAS2ZqVAIAAEtmalUCAABLZmpWAgAAS2ZqVwIAAEtmalgCAABLZmpZAgAAS2ZqWgIAAEtmalsC
AABLZmpcAgAAS2ZqXQIAAEtmal4CAABLZmpfAgAAS2ZqYAIAAEtmamECAABLZmpiAgAAS2ZqYwIA
AEtmamQCAABLZmplAgAAS2ZqZgIAAEtmamcCAABLZmpoAgAAS2ZqaQIAAEtmamoCAABLZmprAgAA
S2ZqbAIAAEtmam0CAABLZmpuAgAAS2ZqbwIAAEtmanACAABLZmpxAgAAS2ZqcgIAAEtmanMCAABL
Zmp0AgAAS2ZqdQIAAEtmanYCAABLZmp3AgAAS2ZqeAIAAEtmankCAABLZmp6AgAAS2ZqewIAAEtm
anwCAABLZmp9AgAAS2ZqfgIAAEtman8CAABLZmqAAgAAS2ZqgQIAAEtmaoICAABLZmqDAgAAS2Zq
hAIAAEtmaoUCAABLZmqGAgAAS2ZqhwIAAEtmaogCAABLZmqJAgAAS2ZqigIAAEtmaosCAABLZmqM
AgAAS2ZqjQIAAEtmao4CAABLZmqPAgAAS2ZqkAIAAEtmapECAABLZmqSAgAAS2ZqkwIAAEtmapQC
AABLZmqVAgAAS2ZqlgIAAEtmapcCAABLZmqYAgAAS2ZqmQIAAEtmapoCAABLZmqbAgAAS2ZqnAIA
AEtmap0CAABLZmqeAgAAS2ZqnwIAAEtmaqACAABLZmqhAgAAS2ZqogIAAEtmaqMCAABLZmqkAgAA
S2ZqpQIAAEtmaqYCAABLZmqnAgAAS2ZqqAIAAEtmaqkCAABLZmqqAgAAS2ZqqwIAAEtmaqwCAABL
ZmqtAgAAS2ZqrgIAAEtmaq8CAABLZmqwAgAAS2ZqsQIAAEtmarICAABLZmqzAgAAS2ZqtAIAAEtm
arUCAABLZmq2AgAAS2ZqtwIAAEtmargCAABLZmq5AgAAS2ZqugIAAEtmarsCAABLZmq8AgAAS2Zq
vQIAAEtmar4CAABLZmq/AgAAS2ZqwAIAAEtmasECAABLZmrCAgAAS2ZqwwIAAEtmasQCAABLZmrF
AgAAS2ZqxgIAAEtmascCAABLZmrIAgAAS2ZqyQIAAEtmasoCAABLZmrLAgAAS2ZqzAIAAEtmas0C
AABLZmrOAgAAS2ZqzwIAAEtmatACAABLZmrRAgAAS2Zq0gIAAEtmatMCAABLZmrUAgAAS2Zq1QIA
AEtmatYCAABLZmrXAgAAS2Zq2AIAAEtmatkCAABLZmraAgAAS2Zq2wIAAEtmatwCAABLZmrdAgAA
S2Zq3gIAAEtmat8CAABLZmrgAgAAS2Zq4QIAAEtmauICAABLZmrjAgAAS2Zq5AIAAEtmauUCAABL
ZmrmAgAAS2Zq5wIAAEtmaugCAABLZmrpAgAAS2Zq6gIAAEtmausCAABLZmrsAgAAS2Zq7QIAAEtm
au4CAABLZmrvAgAAS2Zq8AIAAEtmavECAABLZmryAgAAS2Zq8wIAAEtmavQCAABLZmr1AgAAS2Zq
9gIAAEtmavcCAABLZmr4AgAAS2Zq+QIAAEtmavoCAABLZmr7AgAAS2Zq/AIAAEtmav0CAABLZmr+
AgAAS2Zq/wIAAEtmagADAABLZmoBAwAAS2ZqAgMAAEtmagMDAABLZmoEAwAAS2ZqBQMAAEtmagYD
AABLZmoHAwAAS2ZqCAMAAEtmagkDAABLZmoKAwAAS2ZqCwMAAEtmagwDAABLZmoNAwAAS2ZqDgMA
AEtmag8DAABLZmoQAwAAS2ZqEQMAAEtmahIDAABLZmoTAwAAS2ZqFAMAAEtmahUDAABLZmoWAwAA
S2ZqFwMAAEtmahgDAABLZmoZAwAAS2ZqGgMAAEtmahsDAABLZmocAwAAS2ZqHQMAAEtmah4DAABL
ZmofAwAAS2ZqIAMAAEtmaiEDAABLZmoiAwAAS2ZqIwMAAEtmaiQDAABLZmolAwAAS2ZqJgMAAEtm
aicDAABLZmooAwAAS2ZqKQMAAEtmaioDAABLZmorAwAAS2ZqLAMAAEtmai0DAABLZmouAwAAS2Zq
LwMAAEtmajADAABLZmoxAwAAS2ZqMgMAAEtmajMDAABLZmo0AwAAS2ZqNQMAAEtmajYDAABLZmo3
AwAAS2ZqOAMAAEtmajkDAABLZmo6AwAAS2ZqOwMAAEtmajwDAABLZmo9AwAAS2ZqPgMAAEtmaj8D
AABLZnV1YmV1Lg==
</properties>
		<properties node_id="21" format="pickle">gASVDx8AAAAAAAB9lCiMFGNvbXBhcmlzb25fY3JpdGVyaW9ulEsAjBJjb250cm9sQXJlYVZpc2li
bGWUiIwNY3Zfc3RyYXRpZmllZJSIjAduX2ZvbGRzlEsCjAluX3JlcGVhdHOUSwOMCnJlc2FtcGxp
bmeUSwCMBHJvcGWURz+5mZmZmZmajAtzYW1wbGVfc2l6ZZRLCYwTc2F2ZWRXaWRnZXRHZW9tZXRy
eZRDQgHZ0MsAAwAAAAAJsAAAANUAAAy7AAAC7QAACbAAAAD6AAAMuwAAAu0AAAABAAAAAAeAAAAJ
sAAAAPoAAAy7AAAC7ZSMEnNodWZmbGVfc3RyYXRpZmllZJSIjAh1c2Vfcm9wZZSJjAtzY29yZV90
YWJsZZR9lIwQc2hvd19zY29yZV9oaW50c5R9lCiMBk1vZGVsX5SIjAZUcmFpbl+UiYwFVGVzdF+U
iYwCQ0GUiIwXUHJlY2lzaW9uUmVjYWxsRlN1cHBvcnSUiIwLVGFyZ2V0U2NvcmWUiIwJUHJlY2lz
aW9ulIiMBlJlY2FsbJSIjAJGMZSIjANBVUOUiIwHTG9nTG9zc5SJjAtTcGVjaWZpY2l0eZSJjBdN
YXR0aGV3c0NvcnJDb2VmZmljaWVudJSIjANNU0WUiIwEUk1TRZSIjANNQUWUiIwETUFQRZSIjAJS
MpSIjAZDVlJNU0WUiYwPQ2x1c3RlcmluZ1Njb3JllIiMClNpbGhvdWV0dGWUiIwXQWRqdXN0ZWRN
dXR1YWxJbmZvU2NvcmWUiHVzjAtfX3ZlcnNpb25fX5RLBIwQY29udGV4dF9zZXR0aW5nc5RdlCiM
FW9yYW5nZXdpZGdldC5zZXR0aW5nc5SMB0NvbnRleHSUk5QpgZR9lCiMBnZhbHVlc5R9lCiMD2Ns
YXNzX3NlbGVjdGlvbpSMIShOb25lLCBzaG93IGF2ZXJhZ2Ugb3ZlciBjbGFzc2VzKZRK/////4aU
jAxmb2xkX2ZlYXR1cmWUTkr+////hpSMFWZvbGRfZmVhdHVyZV9zZWxlY3RlZJSJSv7///+GlGgN
fZRoJ0sEdYwKYXR0cmlidXRlc5QojAlsb2FuX2FtbnSUSwKGlIwEdGVybZRLAYaUjAltZW1iZXJf
aWSUSwKGlIwIaW50X3JhdGWUSwKGlIwFZ3JhZGWUSwGGlIwJc3ViX2dyYWRllEsBhpSMD2Z1bmRl
ZF9hbW50X2ludpRLAoaUjAplbXBfbGVuZ3RolEsBhpSMDmhvbWVfb3duZXJzaGlwlEsBhpSMCmFu
bnVhbF9pbmOUSwKGlIwTdmVyaWZpY2F0aW9uX3N0YXR1c5RLAYaUjAdpc3N1ZV9klEsBhpSMB3B1
cnBvc2WUSwGGlIwKYWRkcl9zdGF0ZZRLAYaUjANkdGmUSwKGlIwOaW5xX2xhc3RfNm10aHOUSwKG
lIwIb3Blbl9hY2OUSwKGlIwJcmV2b2xfYmFslEsChpSMCXRvdGFsX2FjY5RLAoaUjApweW1udF9w
bGFulEsBhpSME2luaXRpYWxfbGlzdF9zdGF0dXOUSwGGlIwMbGFzdF9weW1udF9klEsBhpSMDmVt
cF9sZW5ndGhfaW50lEsChpSMFWVhcmxpZXN0X2NyX2xpbmVfZGF0ZZRLBIaUjBttdGhzX3NpbmNl
X2VhcmxpZXN0X2NyX2xpbmWUSwKGlIwIdGVybV9pbnSUSwKGlIwMaXNzdWVfZF9kYXRllEsEhpSM
Em10aHNfc2luY2VfaXNzdWVfZJRLAoaUjA1vdXRfcHJuY3BfaW52lEsChpSMD3RvdGFsX3B5bW50
X2ludpRLAoaUjAxuZXh0X3B5bW50X2SUSwGGlIwSbGFzdF9jcmVkaXRfcHVsbF9klEsBhpSMC3Bv
bGljeV9jb2RllEsBhpSMEGFwcGxpY2F0aW9uX3R5cGWUSwGGlHSUjAVtZXRhc5QpjApjbGFzc192
YXJzlIwIZ29vZF9iYWSUSwGGlIWUdWJoLCmBlH2UKGgvfZQojA9jbGFzc19zZWxlY3Rpb26UjCEo
Tm9uZSwgc2hvdyBhdmVyYWdlIG92ZXIgY2xhc3NlcymUSv////+GlIwMZm9sZF9mZWF0dXJllE5K
/v///4aUjBVmb2xkX2ZlYXR1cmVfc2VsZWN0ZWSUiUr+////hpSMC3Njb3JlX3RhYmxllH2UaCdL
BHVoOShoOksBhpRoQEsBhpRoTEsBhpRoVksBhpRoWEsBhpRoWksBhpRoRksBhpRoXEsBhpRoXksB
hpRoZksBhpRoaksBhpRobEsBhpRocEsBhpRocksBhpRodEsBhpSMDHN1Yl9ncmFkZV9BMZRLAoaU
jAxzdWJfZ3JhZGVfQTKUSwKGlIwMc3ViX2dyYWRlX0EzlEsChpSMDHN1Yl9ncmFkZV9BNJRLAoaU
jAxzdWJfZ3JhZGVfQTWUSwKGlIwMc3ViX2dyYWRlX0IxlEsChpSMDHN1Yl9ncmFkZV9CMpRLAoaU
jAxzdWJfZ3JhZGVfQjOUSwKGlIwMc3ViX2dyYWRlX0I0lEsChpSMDHN1Yl9ncmFkZV9CNZRLAoaU
jAxzdWJfZ3JhZGVfQzGUSwKGlIwMc3ViX2dyYWRlX0MylEsChpSMDHN1Yl9ncmFkZV9DM5RLAoaU
jAxzdWJfZ3JhZGVfQzSUSwKGlIwMc3ViX2dyYWRlX0M1lEsChpSMDHN1Yl9ncmFkZV9EMZRLAoaU
jAxzdWJfZ3JhZGVfRDKUSwKGlIwMc3ViX2dyYWRlX0QzlEsChpSMDHN1Yl9ncmFkZV9ENJRLAoaU
jAxzdWJfZ3JhZGVfRDWUSwKGlIwMc3ViX2dyYWRlX0UxlEsChpSMDHN1Yl9ncmFkZV9FMpRLAoaU
jAxzdWJfZ3JhZGVfRTOUSwKGlIwMc3ViX2dyYWRlX0U0lEsChpSMDHN1Yl9ncmFkZV9FNZRLAoaU
jAxzdWJfZ3JhZGVfRjGUSwKGlIwMc3ViX2dyYWRlX0YylEsChpSMDHN1Yl9ncmFkZV9GM5RLAoaU
jAxzdWJfZ3JhZGVfRjSUSwKGlIwMc3ViX2dyYWRlX0Y1lEsChpSMDHN1Yl9ncmFkZV9HMZRLAoaU
jAxzdWJfZ3JhZGVfRzKUSwKGlIwMc3ViX2dyYWRlX0czlEsChpSMDHN1Yl9ncmFkZV9HNJRLAoaU
jBFlbXBfbGVuZ3RoXzEgeWVhcpRLAoaUjBJlbXBfbGVuZ3RoXzIgeWVhcnOUSwKGlIwSZW1wX2xl
bmd0aF8zIHllYXJzlEsChpSMEmVtcF9sZW5ndGhfNCB5ZWFyc5RLAoaUjBJlbXBfbGVuZ3RoXzUg
eWVhcnOUSwKGlIwSZW1wX2xlbmd0aF82IHllYXJzlEsChpSMEmVtcF9sZW5ndGhfNyB5ZWFyc5RL
AoaUjBJlbXBfbGVuZ3RoXzggeWVhcnOUSwKGlIwSZW1wX2xlbmd0aF85IHllYXJzlEsChpSMFGVt
cF9sZW5ndGhfMTArIHllYXJzlEsChpSMF2hvbWVfb3duZXJzaGlwX01PUlRHQUdFlEsChpSMFGhv
bWVfb3duZXJzaGlwX09USEVSlEsChpSMEmhvbWVfb3duZXJzaGlwX09XTpRLAoaUjCB2ZXJpZmlj
YXRpb25fc3RhdHVzX05vdCBWZXJpZmllZJRLAoaUjCN2ZXJpZmljYXRpb25fc3RhdHVzX1NvdXJj
ZSBWZXJpZmllZJRLAoaUjAtwdXJwb3NlX2NhcpRLAoaUjBNwdXJwb3NlX2NyZWRpdF9jYXJklEsC
hpSMGnB1cnBvc2VfZGVidF9jb25zb2xpZGF0aW9ulEsChpSME3B1cnBvc2VfZWR1Y2F0aW9uYWyU
SwKGlIwYcHVycG9zZV9ob21lX2ltcHJvdmVtZW50lEsChpSMDXB1cnBvc2VfaG91c2WUSwKGlIwW
cHVycG9zZV9tYWpvcl9wdXJjaGFzZZRLAoaUjA9wdXJwb3NlX21lZGljYWyUSwKGlIwOcHVycG9z
ZV9tb3ZpbmeUSwKGlIwNcHVycG9zZV9vdGhlcpRLAoaUjBhwdXJwb3NlX3JlbmV3YWJsZV9lbmVy
Z3mUSwKGlIwWcHVycG9zZV9zbWFsbF9idXNpbmVzc5RLAoaUjBBwdXJwb3NlX3ZhY2F0aW9ulEsC
hpSMDWFkZHJfc3RhdGVfQUuUSwKGlIwNYWRkcl9zdGF0ZV9BTJRLAoaUjA1hZGRyX3N0YXRlX0FS
lEsChpSMDWFkZHJfc3RhdGVfQVqUSwKGlIwNYWRkcl9zdGF0ZV9DQZRLAoaUjA1hZGRyX3N0YXRl
X0NPlEsChpSMDWFkZHJfc3RhdGVfQ1SUSwKGlIwNYWRkcl9zdGF0ZV9EQ5RLAoaUjA1hZGRyX3N0
YXRlX0RFlEsChpSMDWFkZHJfc3RhdGVfRkyUSwKGlIwNYWRkcl9zdGF0ZV9HQZRLAoaUjA1hZGRy
X3N0YXRlX0hJlEsChpSMDWFkZHJfc3RhdGVfSUGUSwKGlIwNYWRkcl9zdGF0ZV9JTJRLAoaUjA1h
ZGRyX3N0YXRlX0tTlEsChpSMDWFkZHJfc3RhdGVfS1mUSwKGlIwNYWRkcl9zdGF0ZV9MQZRLAoaU
jA1hZGRyX3N0YXRlX01BlEsChpSMDWFkZHJfc3RhdGVfTUSUSwKGlIwNYWRkcl9zdGF0ZV9NSZRL
AoaUjA1hZGRyX3N0YXRlX01OlEsChpSMDWFkZHJfc3RhdGVfTU+USwKGlIwNYWRkcl9zdGF0ZV9N
U5RLAoaUjA1hZGRyX3N0YXRlX01UlEsChpSMDWFkZHJfc3RhdGVfTkOUSwKGlIwNYWRkcl9zdGF0
ZV9OSJRLAoaUjA1hZGRyX3N0YXRlX05KlEsChpSMDWFkZHJfc3RhdGVfTk2USwKGlIwNYWRkcl9z
dGF0ZV9OVpRLAoaUjA1hZGRyX3N0YXRlX05ZlEsChpSMDWFkZHJfc3RhdGVfT0iUSwKGlIwNYWRk
cl9zdGF0ZV9PS5RLAoaUjA1hZGRyX3N0YXRlX09SlEsChpSMDWFkZHJfc3RhdGVfUEGUSwKGlIwN
YWRkcl9zdGF0ZV9SSZRLAoaUjA1hZGRyX3N0YXRlX1NDlEsChpSMDWFkZHJfc3RhdGVfU0SUSwKG
lIwNYWRkcl9zdGF0ZV9UTpRLAoaUjA1hZGRyX3N0YXRlX1RYlEsChpSMDWFkZHJfc3RhdGVfVVSU
SwKGlIwNYWRkcl9zdGF0ZV9WQZRLAoaUjA1hZGRyX3N0YXRlX1ZUlEsChpSMDWFkZHJfc3RhdGVf
V0GUSwKGlIwNYWRkcl9zdGF0ZV9XSZRLAoaUjA1hZGRyX3N0YXRlX1dWlEsChpSME2xhc3RfcHlt
bnRfZF9BcHItMTGUSwKGlIwTbGFzdF9weW1udF9kX0Fwci0xMpRLAoaUjBNsYXN0X3B5bW50X2Rf
QXByLTEzlEsChpSME2xhc3RfcHltbnRfZF9BcHItMTSUSwKGlIwTbGFzdF9weW1udF9kX0Fwci0x
NZRLAoaUjBNsYXN0X3B5bW50X2RfQXVnLTEwlEsChpSME2xhc3RfcHltbnRfZF9BdWctMTGUSwKG
lIwTbGFzdF9weW1udF9kX0F1Zy0xMpRLAoaUjBNsYXN0X3B5bW50X2RfQXVnLTEzlEsChpSME2xh
c3RfcHltbnRfZF9BdWctMTSUSwKGlIwTbGFzdF9weW1udF9kX0F1Zy0xNZRLAoaUjBNsYXN0X3B5
bW50X2RfRGVjLTEwlEsChpSME2xhc3RfcHltbnRfZF9EZWMtMTGUSwKGlIwTbGFzdF9weW1udF9k
X0RlYy0xMpRLAoaUjBNsYXN0X3B5bW50X2RfRGVjLTEzlEsChpSME2xhc3RfcHltbnRfZF9EZWMt
MTSUSwKGlIwTbGFzdF9weW1udF9kX0RlYy0xNZRLAoaUjBNsYXN0X3B5bW50X2RfRmViLTExlEsC
hpSME2xhc3RfcHltbnRfZF9GZWItMTKUSwKGlIwTbGFzdF9weW1udF9kX0ZlYi0xM5RLAoaUjBNs
YXN0X3B5bW50X2RfRmViLTE0lEsChpSME2xhc3RfcHltbnRfZF9GZWItMTWUSwKGlIwTbGFzdF9w
eW1udF9kX0phbi0xMZRLAoaUjBNsYXN0X3B5bW50X2RfSmFuLTEylEsChpSME2xhc3RfcHltbnRf
ZF9KYW4tMTOUSwKGlIwTbGFzdF9weW1udF9kX0phbi0xNJRLAoaUjBNsYXN0X3B5bW50X2RfSmFu
LTE1lEsChpSME2xhc3RfcHltbnRfZF9KYW4tMTaUSwKGlIwTbGFzdF9weW1udF9kX0p1bC0xMJRL
AoaUjBNsYXN0X3B5bW50X2RfSnVsLTExlEsChpSME2xhc3RfcHltbnRfZF9KdWwtMTKUSwKGlIwT
bGFzdF9weW1udF9kX0p1bC0xM5RLAoaUjBNsYXN0X3B5bW50X2RfSnVsLTE0lEsChpSME2xhc3Rf
cHltbnRfZF9KdWwtMTWUSwKGlIwTbGFzdF9weW1udF9kX0p1bi0xMZRLAoaUjBNsYXN0X3B5bW50
X2RfSnVuLTEylEsChpSME2xhc3RfcHltbnRfZF9KdW4tMTOUSwKGlIwTbGFzdF9weW1udF9kX0p1
bi0xNJRLAoaUjBNsYXN0X3B5bW50X2RfSnVuLTE1lEsChpSME2xhc3RfcHltbnRfZF9NYXItMTGU
SwKGlIwTbGFzdF9weW1udF9kX01hci0xMpRLAoaUjBNsYXN0X3B5bW50X2RfTWFyLTEzlEsChpSM
E2xhc3RfcHltbnRfZF9NYXItMTSUSwKGlIwTbGFzdF9weW1udF9kX01hci0xNZRLAoaUjBNsYXN0
X3B5bW50X2RfTWF5LTExlEsChpSME2xhc3RfcHltbnRfZF9NYXktMTKUSwKGlIwTbGFzdF9weW1u
dF9kX01heS0xM5RLAoaUjBNsYXN0X3B5bW50X2RfTWF5LTE0lEsChpSME2xhc3RfcHltbnRfZF9N
YXktMTWUSwKGlIwTbGFzdF9weW1udF9kX05vdi0xMJRLAoaUjBNsYXN0X3B5bW50X2RfTm92LTEx
lEsChpSME2xhc3RfcHltbnRfZF9Ob3YtMTKUSwKGlIwTbGFzdF9weW1udF9kX05vdi0xM5RLAoaU
jBNsYXN0X3B5bW50X2RfTm92LTE0lEsChpSME2xhc3RfcHltbnRfZF9Ob3YtMTWUSwKGlIwTbGFz
dF9weW1udF9kX09jdC0xMJRLAoaUjBNsYXN0X3B5bW50X2RfT2N0LTExlEsChpSME2xhc3RfcHlt
bnRfZF9PY3QtMTKUSwKGlIwTbGFzdF9weW1udF9kX09jdC0xM5RLAoaUjBNsYXN0X3B5bW50X2Rf
T2N0LTE0lEsChpSME2xhc3RfcHltbnRfZF9PY3QtMTWUSwKGlIwTbGFzdF9weW1udF9kX1NlcC0x
MJRLAoaUjBNsYXN0X3B5bW50X2RfU2VwLTExlEsChpSME2xhc3RfcHltbnRfZF9TZXAtMTKUSwKG
lIwTbGFzdF9weW1udF9kX1NlcC0xM5RLAoaUjBNsYXN0X3B5bW50X2RfU2VwLTE0lEsChpSMDHB5
bW50X3BsYW5fbpRLAoaUjBNuZXh0X3B5bW50X2RfRmViLTE2lEsChpSMGWxhc3RfY3JlZGl0X3B1
bGxfZF9BcHItMTGUSwKGlIwZbGFzdF9jcmVkaXRfcHVsbF9kX0Fwci0xMpRLAoaUjBlsYXN0X2Ny
ZWRpdF9wdWxsX2RfQXByLTEzlEsChpSMGWxhc3RfY3JlZGl0X3B1bGxfZF9BcHItMTSUSwKGlIwZ
bGFzdF9jcmVkaXRfcHVsbF9kX0Fwci0xNZRLAoaUjBlsYXN0X2NyZWRpdF9wdWxsX2RfQXVnLTEw
lEsChpSMGWxhc3RfY3JlZGl0X3B1bGxfZF9BdWctMTGUSwKGlIwZbGFzdF9jcmVkaXRfcHVsbF9k
X0F1Zy0xMpRLAoaUjBlsYXN0X2NyZWRpdF9wdWxsX2RfQXVnLTEzlEsChpSMGWxhc3RfY3JlZGl0
X3B1bGxfZF9BdWctMTSUSwKGlIwZbGFzdF9jcmVkaXRfcHVsbF9kX0F1Zy0xNZRLAoaUjBlsYXN0
X2NyZWRpdF9wdWxsX2RfRGVjLTEwlEsChpSMGWxhc3RfY3JlZGl0X3B1bGxfZF9EZWMtMTGUSwKG
lIwZbGFzdF9jcmVkaXRfcHVsbF9kX0RlYy0xMpRLAoaUjBlsYXN0X2NyZWRpdF9wdWxsX2RfRGVj
LTEzlEsChpSMGWxhc3RfY3JlZGl0X3B1bGxfZF9EZWMtMTSUSwKGlIwZbGFzdF9jcmVkaXRfcHVs
bF9kX0RlYy0xNZRLAoaUjBlsYXN0X2NyZWRpdF9wdWxsX2RfRmViLTExlEsChpSMGWxhc3RfY3Jl
ZGl0X3B1bGxfZF9GZWItMTKUSwKGlIwZbGFzdF9jcmVkaXRfcHVsbF9kX0ZlYi0xM5RLAoaUjBls
YXN0X2NyZWRpdF9wdWxsX2RfRmViLTE0lEsChpSMGWxhc3RfY3JlZGl0X3B1bGxfZF9GZWItMTWU
SwKGlIwZbGFzdF9jcmVkaXRfcHVsbF9kX0phbi0xMZRLAoaUjBlsYXN0X2NyZWRpdF9wdWxsX2Rf
SmFuLTEylEsChpSMGWxhc3RfY3JlZGl0X3B1bGxfZF9KYW4tMTOUSwKGlIwZbGFzdF9jcmVkaXRf
cHVsbF9kX0phbi0xNJRLAoaUjBlsYXN0X2NyZWRpdF9wdWxsX2RfSmFuLTE1lEsChpSMGWxhc3Rf
Y3JlZGl0X3B1bGxfZF9KYW4tMTaUSwKGlIwZbGFzdF9jcmVkaXRfcHVsbF9kX0p1bC0xMJRLAoaU
jBlsYXN0X2NyZWRpdF9wdWxsX2RfSnVsLTExlEsChpSMGWxhc3RfY3JlZGl0X3B1bGxfZF9KdWwt
MTKUSwKGlIwZbGFzdF9jcmVkaXRfcHVsbF9kX0p1bC0xM5RLAoaUjBlsYXN0X2NyZWRpdF9wdWxs
X2RfSnVsLTE0lEsChpSMGWxhc3RfY3JlZGl0X3B1bGxfZF9KdWwtMTWUSwKGlIwZbGFzdF9jcmVk
aXRfcHVsbF9kX0p1bi0xMJRLAoaUjBlsYXN0X2NyZWRpdF9wdWxsX2RfSnVuLTExlEsChpSMGWxh
c3RfY3JlZGl0X3B1bGxfZF9KdW4tMTKUSwKGlIwZbGFzdF9jcmVkaXRfcHVsbF9kX0p1bi0xM5RL
AoaUjBlsYXN0X2NyZWRpdF9wdWxsX2RfSnVuLTE0lEsChpSMGWxhc3RfY3JlZGl0X3B1bGxfZF9K
dW4tMTWUSwKGlIwZbGFzdF9jcmVkaXRfcHVsbF9kX01hci0xMZRLAoaUjBlsYXN0X2NyZWRpdF9w
dWxsX2RfTWFyLTEylEsChpSMGWxhc3RfY3JlZGl0X3B1bGxfZF9NYXItMTOUSwKGlIwZbGFzdF9j
cmVkaXRfcHVsbF9kX01hci0xNJRLAoaUjBlsYXN0X2NyZWRpdF9wdWxsX2RfTWFyLTE1lEsChpSM
GWxhc3RfY3JlZGl0X3B1bGxfZF9NYXktMTGUSwKGlIwZbGFzdF9jcmVkaXRfcHVsbF9kX01heS0x
MpRLAoaUjBlsYXN0X2NyZWRpdF9wdWxsX2RfTWF5LTEzlEsChpSMGWxhc3RfY3JlZGl0X3B1bGxf
ZF9NYXktMTSUSwKGlIwZbGFzdF9jcmVkaXRfcHVsbF9kX01heS0xNZRLAoaUjBlsYXN0X2NyZWRp
dF9wdWxsX2RfTm92LTEwlEsChpSMGWxhc3RfY3JlZGl0X3B1bGxfZF9Ob3YtMTGUSwKGlIwZbGFz
dF9jcmVkaXRfcHVsbF9kX05vdi0xMpRLAoaUjBlsYXN0X2NyZWRpdF9wdWxsX2RfTm92LTEzlEsC
hpSMGWxhc3RfY3JlZGl0X3B1bGxfZF9Ob3YtMTSUSwKGlIwZbGFzdF9jcmVkaXRfcHVsbF9kX05v
di0xNZRLAoaUjBlsYXN0X2NyZWRpdF9wdWxsX2RfT2N0LTEwlEsChpSMGWxhc3RfY3JlZGl0X3B1
bGxfZF9PY3QtMTGUSwKGlIwZbGFzdF9jcmVkaXRfcHVsbF9kX09jdC0xMpRLAoaUjBlsYXN0X2Ny
ZWRpdF9wdWxsX2RfT2N0LTEzlEsChpSMGWxhc3RfY3JlZGl0X3B1bGxfZF9PY3QtMTSUSwKGlIwZ
bGFzdF9jcmVkaXRfcHVsbF9kX09jdC0xNZRLAoaUjBlsYXN0X2NyZWRpdF9wdWxsX2RfU2VwLTEw
lEsChpSMGWxhc3RfY3JlZGl0X3B1bGxfZF9TZXAtMTGUSwKGlIwZbGFzdF9jcmVkaXRfcHVsbF9k
X1NlcC0xMpRLAoaUjBlsYXN0X2NyZWRpdF9wdWxsX2RfU2VwLTEzlEsChpSMGWxhc3RfY3JlZGl0
X3B1bGxfZF9TZXAtMTSUSwKGlHSUaH8paIBogUsBhpSFlHViZXUu
</properties>
		<properties node_id="22" format="literal">{'compatibility_mode': False, 'controlAreaVisible': True, 'number_of_folds': 10, 'replacement': False, 'sampleSizeNumber': 1, 'sampleSizePercentage': 70, 'sampleSizeSqlPercentage': 0.1, 'sampleSizeSqlTime': 1, 'sampling_type': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xfb\xd4\x00\x00\x00\xfb\xff\xff\xfc\xac\x00\x00\x02\x89\xff\xff\xfb\xd5\x00\x00\x01\x10\xff\xff\xfc\xab\x00\x00\x02\x88\x00\x00\x00\x01\x00\x00\x00\x00\x07\x80\xff\xff\xfb\xd5\x00\x00\x01\x10\xff\xff\xfc\xab\x00\x00\x02\x88', 'selectedFold': 1, 'sql_dl': False, 'stratify': False, 'use_seed': True, '__version__': 2}</properties>
		<properties node_id="23" format="literal">{'autocommit': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\t\x8f\x00\x00\x00\xd5\x00\x00\x0c\xdc\x00\x00\x02\xed\x00\x00\t\x8f\x00\x00\x00\xfa\x00\x00\x0c\xdc\x00\x00\x02\xed\x00\x00\x00\x01\x00\x00\x00\x00\x07\x80\x00\x00\t\x8f\x00\x00\x00\xfa\x00\x00\x0c\xdc\x00\x00\x02\xed', 'storedsettings': {'name': '', 'preprocessors': [('orange.preprocess.fss', {'k': 10, 'p': 75.0, 'score': 5, 'strategy': 1}), ('orange.preprocess.impute', {'method': 5})]}, '__version__': 2}</properties>
		<properties node_id="24" format="literal">{'C_index': 61, 'auto_apply': True, 'class_weight': False, 'controlAreaVisible': True, 'learner_name': '', 'penalty_type': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03;\x00\x00\x01_\x00\x00\x04D\x00\x00\x02\xb4\x00\x00\x03;\x00\x00\x01\x84\x00\x00\x04D\x00\x00\x02\xb4\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x03;\x00\x00\x01\x84\x00\x00\x04D\x00\x00\x02\xb4', '__version__': 2}</properties>
		<properties node_id="25" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x07\x80\x00\x00\x00\x00\x00\x00\x0e\xff\x00\x00\x047\x00\x00\x07\x80\x00\x00\x00%\x00\x00\x0e\xff\x00\x00\x047\x00\x00\x00\x01\x02\x00\x00\x00\x07\x80\x00\x00\x07\x80\x00\x00\x00%\x00\x00\x0e\xff\x00\x00\x047', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
	</node_properties>
	<session_state>
		<window_groups />
	</session_state>
</scheme>
